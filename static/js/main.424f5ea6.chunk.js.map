{"version":3,"sources":["store/appState/actions.js","components/ShowFeedback.js","components/ListDialog.js","components/Unit/UnitSelector.js","store/getData.js","components/Unit/Options.js","components/Unit/FantasticalRules.js","components/Unit/StatBlock.js","components/Unit/SpecialRules.js","components/TextInputDialog.js","store/roster/actions.js","components/Unit/Actions.js","components/ExpandIcon.js","components/Unit/buildUnit.js","components/Unit/Unit.js","components/Roster.js","components/LoadList.js","components/SaveList.js","components/DeleteList.js","components/ExportList.js","components/ImportList.js","components/Backup.js","components/Restore.js","components/SideMenu.js","store/ui/actions.js","components/AppBar.js","components/ListName.js","components/RulesSummary.js","components/SpellTable.js","components/Statistics/UnitDistributionChart.js","components/Statistics/PointDistributionChart.js","components/Statistics/Statistics.js","components/App.js","store/ui/reducer.js","store/roster/reducer.js","store/appState/reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.js"],"names":["AppStateActionTypes","toggleForceInputUpdate","type","showFeedback","message","severity","payload","Alert","props","elevation","variant","ShowFeedback","dispatch","useDispatch","feedback","useSelector","state","appState","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","ListDialog","anchor","action","options","title","onOpen","React","useState","setOpen","opts","map","o","Dialog","DialogTitle","List","text","icon","ListItem","button","onClick","handleOnClick","key","ListItemIcon","UnitSelector","unit","name","customName","value","openFunc","Typography","Chip","label","points","color","style","marginLeft","marginBottom","getData","data","unitData","unitNames","Object","keys","slice","fantasticalRulesData","rulesData","spellData","Options","onChange","optionsData","length","handleChange","option","e","newUnit","target","checked","filter","val","FormControl","component","marginTop","FormLabel","FormGroup","FormControlLabel","control","Checkbox","includes","FantasticalRules","fantasticalRules","toCheck","excluded","handleOpen","v","width","height","Select","IconComponent","Box","multiple","input","Input","renderValue","MenuItem","indexOf","StatBlock","stats","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","size","Hidden","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","SpecialRules","rules","Container","r","TextInputDialog","defaultValue","cancelText","okayText","margin","setValue","DialogContent","TextField","autoFocus","fullWidth","onKeyPress","handleKeyPressed","DialogActions","Button","RosterActionTypes","setRoster","newRoster","updateRoster","newAttributes","updateUnit","id","Actions","roster","moveUnit","dir","unitOrder","index","nextIndex","display","alignItems","Tooltip","IconButton","flexGrow","nextId","nextID","units","useStyles","makeStyles","theme","expand","transform","transition","transitions","create","duration","shortest","expandOpen","ExpandIcon","expanded","classes","className","clsx","buildUnit","setStats","entries","add","rule","remove","fant","Unit","ui","setExpanded","Card","maxWidth","viewMode","CardHeader","unitName","setUnit","removeUnit","Collapse","in","timeout","unmountOnExit","CardContent","editMode","packRoster","values","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","LoadList","showText","store","get","err","savedLists","list","push","getSavedLists","SaveList","saveRoster","set","saveList","DeleteList","ExportList","armyCost","reduce","acc","JSON","stringify","join","exportFunc","opt","navigator","clipboard","writeText","copyToClipboard","ImportList","parse","Backup","BackupIcon","file","Blob","date","Date","offsetMs","getTimezoneOffset","getTime","toISOString","replace","saveAs","Restore","fileReader","fileDialog","useRef","restore","content","result","openFileDialog","current","click","ref","accept","FileReader","onloadend","readAsText","files","SideMenu","toggleDrawer","Drawer","Divider","UIActionTypes","setUIOption","updateUI","AppBar","changeViewMode","clicked","newState","notClicked","newStates","ToggleUIButton","Icon","fontSize","position","Toolbar","smDown","mdUp","VisibilityIcon","EditIcon","ListName","rosterName","inputUpdate","border","RulesSummary","rulesSummaryExpanded","specialRules","Set","sort","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","primary","secondary","SpellTable","spellsExpanded","spellcasterInRoster","minWidth","TableHead","align","spell","scope","difficulty","effect","UnitDistributionChart","colors","top","right","left","bottom","strokeDasharray","dataKey","fill","minPointSize","PointDistributionChart","renderCustomizedLabel","labelLine","outerRadius","entry","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","x","cos","y","sin","percentValue","toFixed","textAnchor","dominantBaseline","Statistics","statisticsExpanded","useTheme","chipSize","useMediaQuery","breakpoints","down","optionPoints","accumulator","fantasticalPoints","COLORS","totalPoints","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","App","useEffect","uiInitialState","rosterInitialState","appStateInitialState","combineReducers","forceInputUpdate","createStore","rootReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.424f5ea6.chunk.js","sourcesContent":["export const AppStateActionTypes = {\r\n  TOGGLE_FORCE_INPUT_UPDATE: 'TOGGLE_FORCE_INPUT_UPDATE',\r\n  CLOSE_FEEDBACK: 'CLOSE_FEEDBACK',\r\n  SHOW_FEEDBACK: 'SHOW_FEEDBACK'\r\n};\r\n\r\nexport const toggleForceInputUpdate = () => ({\r\n  type: AppStateActionTypes.TOGGLE_FORCE_INPUT_UPDATE\r\n});\r\n\r\nexport const closeFeedback = () => ({\r\n  type: AppStateActionTypes.CLOSE_FEEDBACK\r\n});\r\n\r\nexport const showFeedback = (message, severity) => ({\r\n  type: AppStateActionTypes.SHOW_FEEDBACK,\r\n  payload: [message, severity]\r\n});\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeFeedback } from 'store/appState/actions';\r\n\r\nconst Alert = props => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\nconst ShowFeedback = () => {\r\n  const dispatch = useDispatch();\r\n  const feedback = useSelector(state => state.appState.feedback);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    dispatch(closeFeedback());\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={feedback.severity}>\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, List, ListItem, ListItemIcon } from '@material-ui/core';\r\n\r\nconst ListDialog = ({\r\n  anchor,\r\n  action,\r\n  options,\r\n  title,\r\n  onClose = null,\r\n  onOpen = null\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleOnClick = text => {\r\n    action(text);\r\n    if (onClose) onClose();\r\n    handleClose();\r\n  };\r\n\r\n  const opts = typeof options[0] === 'string' ? options.map(o => [o, null]) : options;\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <List>\r\n          {opts.map(([text, icon]) => (\r\n            <ListItem button onClick={() => handleOnClick(text)} key={text}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              {text}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListDialog;\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Typography, Chip } from '@material-ui/core';\r\nimport ListDialog from '../ListDialog';\r\n\r\nconst UnitSelector = ({ unit, options, onClose }) => {\r\n  const name = unit.customName ? unit.customName : unit.name;\r\n\r\n  const setSelectedUnit = value => {\r\n    if (value !== unit.name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={setSelectedUnit}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Typography variant=\"h5\" onClick={openFunc}>\r\n            <Chip label={unit.points} color=\"primary\" />\r\n            &nbsp;&nbsp;\r\n            {name}\r\n            <ArrowDropDownIcon />\r\n          </Typography>\r\n          {unit.customName && (\r\n            <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n              {unit.name}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Choose unit type\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnitSelector;\r\n","import unitData from 'assets/dragonRampantData/units.json';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\n\r\nconst getData = (type = null) => {\r\n  const data = {\r\n    unitData: unitData,\r\n    unitNames: Object.keys(unitData).slice(1),\r\n    fantasticalRulesData: fantasticalRulesData,\r\n    rulesData: rulesData,\r\n    spellData: spellData\r\n  };\r\n  return type ? data[type] : data;\r\n};\r\n\r\nexport default getData;\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\nimport getData from 'store/getData';\r\n\r\nexport default function Options({ unit, onChange }) {\r\n  const optionsData = getData('unitData')[unit.name].options;\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = option => e => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter(val => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map(option => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Typography>\r\n                {option}{' '}\r\n                <Typography color=\"secondary\" component=\"span\">\r\n                  @{optionsData[option].points}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Typography, Box, Select, MenuItem } from '@material-ui/core';\r\nimport getData from 'store/getData';\r\n\r\nfunction FantasticalRules({ unit, onChange }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const unitData = getData('unitData')[unit.name];\r\n  const fantasticalRulesData = getData('fantasticalRulesData');\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter(val => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map(name => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onClick={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter(v => v !== name)\r\n                      ]\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}}\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={e => onChange({ ...unit, fantasticalRules: [...e.target.value] })}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Typography color=\"primary\">\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FantasticalRules;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nexport default function StatBlock({ stats }) {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, List, Container, ListItem } from '@material-ui/core';\r\n\r\nexport default function SpecialRules({ rules }) {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map(r => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst TextInputDialog = ({\r\n  anchor,\r\n  action,\r\n  title = '',\r\n  label = '',\r\n  defaultValue = '',\r\n  cancelText = 'Cancel',\r\n  okayText = 'okay',\r\n  margin = 'dense',\r\n  onClose = null,\r\n  onOpen = null\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState();\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleKeyPressed = (value, key) => {\r\n    if (key === 'Enter') {\r\n      setValue(value);\r\n      action(value);\r\n      handleClose();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n  const handleAction = () => {\r\n    action(value);\r\n    if (onClose) onClose();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin={margin}\r\n            label={label}\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={defaultValue || value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyPress={e => handleKeyPressed(e.target.value, e.key)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {cancelText}\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {okayText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInputDialog;\r\n","export const RosterActionTypes = {\r\n  NEW_ROSTER: 'NEW_ROSTER',\r\n  SET_ROSTER: 'SET_ROSTER',\r\n  UPDATE_ROSTER: 'UPDATE_ROSTER',\r\n  ADD_UNIT: 'ADD_UNIT',\r\n  SET_UNIT: 'SET_UNIT',\r\n  UPDATE_UNIT: 'UPDATE_UNIT',\r\n  REMOVE_UNIT: 'REMOVE_UNIT'\r\n};\r\n\r\nexport const newRoster = () => ({\r\n  type: RosterActionTypes.NEW_ROSTER\r\n});\r\n\r\nexport const setRoster = newRoster => ({\r\n  type: RosterActionTypes.SET_ROSTER,\r\n  payload: newRoster\r\n});\r\n\r\nexport const updateRoster = newAttributes => ({\r\n  type: RosterActionTypes.UPDATE_ROSTER,\r\n  payload: newAttributes\r\n});\r\n\r\nexport const addUnit = () => ({\r\n  type: RosterActionTypes.ADD_UNIT\r\n});\r\n\r\nexport const setUnit = (id, name) => ({\r\n  type: RosterActionTypes.SET_UNIT,\r\n  payload: [id, name]\r\n});\r\n\r\nexport const updateUnit = (id, newAttributes) => ({\r\n  type: RosterActionTypes.UPDATE_UNIT,\r\n  payload: [id, newAttributes]\r\n});\r\n\r\nexport const removeUnit = id => ({\r\n  type: RosterActionTypes.REMOVE_UNIT,\r\n  payload: id\r\n});\r\n","import React from 'react';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport { IconButton, Box, Tooltip } from '@material-ui/core';\r\nimport TextInputDialog from '../TextInputDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateRoster, updateUnit } from 'store/roster/actions';\r\n\r\nconst Actions = ({ id, unit }) => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n\r\n  const moveUnit = dir => {\r\n    const unitOrder = [...roster.unitOrder];\r\n    const index = roster.unitOrder.indexOf(id);\r\n    const nextIndex = dir ? index - 1 : index + 1;\r\n    if (nextIndex < 0 || nextIndex >= unitOrder.length) return;\r\n    unitOrder[nextIndex] = roster.unitOrder[index];\r\n    unitOrder[index] = roster.unitOrder[nextIndex];\r\n    dispatch(updateRoster({ unitOrder: unitOrder }));\r\n  };\r\n  const moveLeft = () => moveUnit(1);\r\n  const moveRight = () => moveUnit(0);\r\n\r\n  const renameUnit = value => updateUnit(id, { customName: value });\r\n\r\n  const cloneUnit = () => {\r\n    const nextId = roster.nextID;\r\n    const index = roster.unitOrder.indexOf(id);\r\n    const unitOrder = [\r\n      ...roster.unitOrder.slice(0, index + 1),\r\n      nextId,\r\n      ...roster.unitOrder.slice(index + 1)\r\n    ];\r\n\r\n    dispatch(\r\n      updateRoster({\r\n        nextID: nextId + 1,\r\n        units: {\r\n          ...roster.units,\r\n          [nextId]: { ...unit }\r\n        },\r\n        unitOrder: unitOrder\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" width=\"97%\" style={{ height: 25, marginTop: 10 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextInputDialog\r\n            anchor={openFunc => (\r\n              <Tooltip title=\"Rename unit\">\r\n                <IconButton onClick={openFunc}>\r\n                  <TextFieldsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            action={renameUnit}\r\n            title=\"Enter the name for the unit\"\r\n            label=\"Unit name\"\r\n            defaultValue={unit.customName}\r\n            okayText=\"Rename\"\r\n          />\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)'\r\n  }\r\n}));\r\n\r\nconst ExpandIcon = ({ expanded, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      className={clsx(classes.expand, {\r\n        [classes.expandOpen]: expanded\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      <ExpandMoreIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ExpandIcon;\r\n","import getData from 'store/getData';\r\n\r\nconst buildUnit = unit => {\r\n  const data = getData();\r\n  const unitData = data.unitData[unit.name];\r\n\r\n  unit = {\r\n    ...unitData,\r\n    customName: unit.customName || '',\r\n    options: [...unit.options],\r\n    fantasticalRules: [...unit.fantasticalRules]\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (let option of unit.options) {\r\n    option = unitData.options[option];\r\n    points += option.points;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter(val => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (let fant of unit.fantasticalRules) {\r\n    fant = data.fantasticalRulesData[fant];\r\n    points += fant.points;\r\n    unit.rules = [...unit.rules, fant.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nexport default buildUnit;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, CardHeader, Typography, Chip, Collapse } from '@material-ui/core';\r\nimport UnitSelector from './UnitSelector';\r\nimport Options from './Options';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport StatBlock from './StatBlock';\r\nimport SpecialRules from './SpecialRules';\r\nimport Actions from './Actions';\r\nimport ExpandIcon from '../ExpandIcon';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUnit, updateUnit, removeUnit } from 'store/roster/actions';\r\nimport buildUnit from './buildUnit';\r\n\r\nfunction Unit({ id }) {\r\n  const data = getData();\r\n  const dispatch = useDispatch();\r\n  const unit = useSelector(state => state.roster.units[id]);\r\n  const ui = useSelector(state => state.ui);\r\n\r\n  const [expanded, setExpanded] = React.useState(true);\r\n  const handleExpandClick = () => setExpanded(!expanded);\r\n\r\n  const changeUnit = unitName => dispatch(setUnit(id, unitName));\r\n\r\n  const handleChange = unit => {\r\n    unit = buildUnit(unit);\r\n    dispatch(updateUnit(id, { ...unit }));\r\n  };\r\n\r\n  return (\r\n    <Card style={{ marginBottom: 25, maxWidth: 400, width: '100%' }}>\r\n      {ui.viewMode ? (\r\n        <CardHeader\r\n          title={\r\n            <>\r\n              <Typography variant=\"h5\">\r\n                <Chip label={unit.points} color=\"primary\" />\r\n                &nbsp;&nbsp;\r\n                {unit.customName ? unit.customName : unit.name}\r\n              </Typography>\r\n              {unit.customName &&\r\n                (expanded ? (\r\n                  <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n                    {unit.name}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography style={{ marginLeft: 45 }}>{unit.name}</Typography>\r\n                ))}\r\n            </>\r\n          }\r\n          action={<ExpandIcon expanded={expanded} onClick={handleExpandClick} />}\r\n        />\r\n      ) : (\r\n        <CardHeader\r\n          title={\r\n            <UnitSelector unit={unit} onClose={changeUnit} options={data.unitNames} />\r\n          }\r\n          action={\r\n            <Button onClick={() => dispatch(removeUnit(id))}>\r\n              <CloseIcon />\r\n            </Button>\r\n          }\r\n        />\r\n      )}\r\n      <Collapse in={!ui.viewMode || expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!ui.editMode && (\r\n            <>\r\n              <StatBlock stats={unit.stats} />\r\n              <SpecialRules rules={unit.rules} />\r\n            </>\r\n          )}\r\n          {!ui.viewMode && (\r\n            <>\r\n              <Options onChange={handleChange} unit={unit} />\r\n              <FantasticalRules onChange={handleChange} unit={unit} />\r\n              <Actions id={id} unit={unit} />\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Unit;\r\n","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Fab, Box, Typography } from '@material-ui/core';\r\nimport Unit from './Unit';\r\nimport buildUnit from './Unit/buildUnit';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addUnit } from 'store/roster/actions';\r\n\r\nconst packRoster = roster => {\r\n  let units = { ...roster.units };\r\n  units = Object.values(units).map(unit => ({\r\n    name: unit.name,\r\n    customName: unit.customName || '',\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = compactRoster => {\r\n  const units = Object.values(compactRoster.units).map(unit => buildUnit(unit));\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = () => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n  const ui = useSelector(state => state.ui);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map(id => (\r\n          <Unit id={id} key={id} />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !ui.viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!ui.viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={() => dispatch(addUnit())}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import React from 'react';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { unpackRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoster } from 'store/roster/actions';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appState/actions';\r\n\r\nexport default function LoadList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const loadList = name => {\r\n    try {\r\n      const roster = unpackRoster(store.get('savedRosters')[name]);\r\n      dispatch(setRoster({ ...roster }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`${name} loaded!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not load ${name}!`, 'error'));\r\n    }\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={loadList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Load List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <SaveOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Load List</Typography>}\r\n        </>\r\n      )}\r\n      options={getSavedLists()}\r\n      title=\"Choose List to load\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport store from 'store';\r\nimport { packRoster } from './Roster';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appState/actions';\r\n\r\nexport default function SaveList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n\r\n  const saveList = () => {\r\n    if (roster.name === 'New List') return false;\r\n    let savedLists = store.get('savedRosters') || [];\r\n    savedLists = {\r\n      ...savedLists,\r\n      [roster.name]: { ...packRoster(roster) }\r\n    };\r\n    store.set('savedRosters', savedLists);\r\n    return true;\r\n  };\r\n\r\n  const saveRoster = () => {\r\n    if (saveList()) dispatch(showFeedback('Saved!', 'success'));\r\n    else dispatch(showFeedback('You have to give the list a name!', 'error'));\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appState/actions';\r\n\r\nexport default function DeleteList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeList = name => {\r\n    if (name === 'Delete all') store.set('savedRosters', []);\r\n    else {\r\n      let savedLists = store.get('savedRosters');\r\n      delete savedLists[name];\r\n      store.set('savedRosters', savedLists);\r\n    }\r\n    dispatch(showFeedback('Deleted!', 'success'));\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    savedLists.push('Delete all');\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={removeList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Delete List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Delete List</Typography>}\r\n        </>\r\n      )}\r\n      options={getSavedLists()}\r\n      title=\"Choose List to delete\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { packRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appState/actions';\r\n\r\nconst copyToClipboard = text => navigator.clipboard.writeText(text);\r\n\r\nconst ExportList = ({ onClose = null, showText = false }) => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n  const getImportableString = () => JSON.stringify(packRoster(roster));\r\n  const armyCost = Object.values(roster.units).reduce(\r\n    (acc, unit) => acc + unit.points,\r\n    0\r\n  );\r\n\r\n  const getListAsText = () => {\r\n    let text = [];\r\n    text.push(`${roster.name} @${armyCost} points`);\r\n    text.push('=====================================');\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n      text.push('-----------------------------------');\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        for (const option of options) text.push(`- ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const getListAsMarkdown = () => {\r\n    let text = [];\r\n    text.push(`**${roster.name} @${armyCost} points**`);\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `* ${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        text.push('');\r\n        for (const option of options) text.push(`    - ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const options = [\r\n    ['As an importable String', <ArrowDownwardIcon />, getImportableString],\r\n    ['As text', <FormatAlignLeftIcon />, getListAsText],\r\n    ['As markdown text', <FormatAlignJustifyIcon />, getListAsMarkdown]\r\n  ];\r\n\r\n  const exportList = text => {\r\n    let exportFunc = options.reduce(\r\n      (acc, opt) => (opt[0] === text ? opt[2] : acc),\r\n      null\r\n    );\r\n\r\n    try {\r\n      const list = exportFunc(roster);\r\n      copyToClipboard(list);\r\n      dispatch(showFeedback('List copied to clipboard!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not export the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={exportList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Export\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Export List</Typography>}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Chose how to export\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExportList;\r\n","import React from 'react';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { unpackRoster } from './Roster';\r\nimport TextInputDialog from './TextInputDialog';\r\nimport getData from 'store/getData';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoster } from 'store/roster/actions';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appState/actions';\r\n\r\nconst ImportList = ({ onClose = null, showText = false }) => {\r\n  const data = getData();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImport = value => {\r\n    if (!value) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(value), data);\r\n      dispatch(setRoster({ ...list }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback('List imported!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not import the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextInputDialog\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Import list\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Import list</Typography>}\r\n        </>\r\n      )}\r\n      action={handleImport}\r\n      title=\"Enter the import string\"\r\n      label=\"Exported String\"\r\n      okayText=\"Import\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ImportList;\r\n","import React from 'react';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst Backup = ({ showText = null, onClose = null }) => {\r\n  const backup = () => {\r\n    const savedLists = JSON.stringify(store.get('savedRosters') || []);\r\n    const file = new Blob([savedLists], { type: 'text/plain;charset=utf-8' });\r\n\r\n    let date = new Date();\r\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\r\n    date = new Date(date.getTime() - offsetMs);\r\n    date = date\r\n      .toISOString()\r\n      .slice(0, 10)\r\n      .replace(/-/g, '/');\r\n\r\n    saveAs(file, `${date}_DRAB.sav`);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={BackupIcon}>\r\n          <BackupIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={backup}>Backup</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Backup;\r\n","import React from 'react';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appState/actions';\r\n\r\nconst Restore = ({ showText = null, onClose = null }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let fileReader;\r\n  const fileDialog = React.useRef();\r\n\r\n  const restore = () => {\r\n    try {\r\n      let savedLists = store.get('savedRosters') || [];\r\n      let content = fileReader.result;\r\n      content = JSON.parse(content);\r\n      savedLists = { ...savedLists, ...content };\r\n      store.set('savedRosters', savedLists);\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`Restored!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not restore!`, 'error'));\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const handleFileChosen = event => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = restore;\r\n    fileReader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const openFileDialog = () => fileDialog.current.click();\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={openFileDialog}>\r\n          <RestorePageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={openFileDialog}>Restore</Typography>}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileDialog}\r\n        style={{ display: 'none' }}\r\n        id=\"restoreFile\"\r\n        accept=\".sav\"\r\n        onChange={handleFileChosen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Restore;\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { List, ListItem, Drawer, Divider } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\nimport Backup from './Backup';\r\nimport Restore from './Restore';\r\n\r\nexport default function SideMenu() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Backup'}>\r\n            <Backup onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Restore'}>\r\n            <Restore onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","export const UIActionTypes = {\r\n  SET_UI: 'SET_UI',\r\n  UPDATE_UI: 'UPDATE_UI',\r\n  SET_UI_OPTION: 'SET_UI_OPTION'\r\n};\r\n\r\nexport const setUI = value => ({\r\n  type: UIActionTypes.SET_UI,\r\n  payload: value\r\n});\r\n\r\nexport const setUIOption = (option, value) => ({\r\n  type: UIActionTypes.SET_UI_OPTION,\r\n  payload: [option, value]\r\n});\r\n\r\nexport const updateUI = newAttributes => ({\r\n  type: UIActionTypes.UPDATE_UI,\r\n  payload: newAttributes\r\n});\r\n","import React from 'react';\r\nimport { AppBar as AppBarMaterial, Box } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton, Fab, Tooltip, Hidden } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport SideMenu from './SideMenu';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/ui/actions';\r\nimport { newRoster } from 'store/roster/actions';\r\n\r\nexport default function AppBar() {\r\n  const dispatch = useDispatch();\r\n  const ui = useSelector(state => state.ui);\r\n  const units = useSelector(state => state.roster.units);\r\n  const armyCost = Object.values(units).reduce((acc, unit) => acc + unit.points, 0);\r\n\r\n  const changeViewMode = (clicked, newState) => {\r\n    const notClicked = clicked === 'viewMode' ? 'editMode' : 'viewMode';\r\n    let newStates = { [clicked]: newState };\r\n    if (newState) newStates = { ...newStates, [notClicked]: false };\r\n    dispatch(updateUI(newStates));\r\n  };\r\n\r\n  const ToggleUIButton = ({ option, Icon, title, onClick }) => (\r\n    <Tooltip title={title}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        onClick={() => {\r\n          onClick(option, !ui[option]);\r\n        }}\r\n      >\r\n        <Icon fontSize=\"small\" color={ui[option] ? 'inherit' : 'disabled'} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton color=\"inherit\" onClick={() => dispatch(newRoster())}>\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList />\r\n            <LoadList />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleUIButton\r\n              option=\"viewMode\"\r\n              Icon={VisibilityIcon}\r\n              title=\"View mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <ToggleUIButton\r\n              option=\"editMode\"\r\n              Icon={EditIcon}\r\n              title=\"Edit mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, FormControl } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateRoster } from 'store/roster/actions';\r\n\r\nconst ListName = () => {\r\n  const dispatch = useDispatch();\r\n  const rosterName = useSelector(state => state.roster.name);\r\n  const inputUpdate = useSelector(state => state.appState.inputUpdate);\r\n\r\n  return (\r\n    <FormControl>\r\n      <Typography\r\n        style={{ border: 0, marginTop: 20, marginBottom: 25, width: '100%' }}\r\n        variant=\"h4\"\r\n        key={inputUpdate}\r\n        component=\"input\"\r\n        value={rosterName}\r\n        onChange={e => dispatch(updateRoster({ name: e.target.value }))}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ListName;\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/ui/actions';\r\n\r\nconst rulesData = getData('rulesData');\r\n\r\nexport default function RulesSummary() {\r\n  const dispatch = useDispatch();\r\n  const rulesSummaryExpanded = useSelector(state => state.ui.rulesSummaryExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  let specialRules = [\r\n    ...Object.values(units).reduce(\r\n      (acc, unit) =>\r\n        unit.rules.reduce(\r\n          (acc, rule) =>\r\n            rulesData[rulesData[rule]] ? acc.add(rulesData[rule]) : acc.add(rule),\r\n          acc\r\n        ),\r\n      new Set()\r\n    )\r\n  ].sort();\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() =>\r\n        dispatch(setUIOption('rulesSummaryExpanded', !rulesSummaryExpanded))\r\n      }\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map(rule => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Hidden\r\n} from '@material-ui/core';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/ui/actions';\r\n\r\nconst spellData = getData('spellData');\r\nconst rulesData = getData('rulesData');\r\n\r\nexport default function SpellTable() {\r\n  const dispatch = useDispatch();\r\n  const spellsExpanded = useSelector(state => state.ui.spellsExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  let specialRules = [\r\n    ...Object.values(units).reduce(\r\n      (acc, unit) =>\r\n        unit.rules.reduce(\r\n          (acc, rule) =>\r\n            rulesData[rulesData[rule]] ? acc.add(rulesData[rule]) : acc.add(rule),\r\n          acc\r\n        ),\r\n      new Set()\r\n    )\r\n  ].sort();\r\n\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => dispatch(setUIOption('spellsExpanded', !spellsExpanded))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <TableContainer>\r\n              <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                  <TableRow key=\"headspelltable\">\r\n                    <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                    <Hidden smDown>\r\n                      <TableCell align=\"center\">Difficulty</TableCell>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                      <TableCell align=\"center\">Dif</TableCell>\r\n                    </Hidden>\r\n                    <TableCell>Target</TableCell>\r\n                    <TableCell>Duration</TableCell>\r\n                    <TableCell>Effect</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.values(spellData).map(spell => (\r\n                    <TableRow key={spell.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {spell.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                      <TableCell>{spell.target}</TableCell>\r\n                      <TableCell>{spell.duration}</TableCell>\r\n                      <TableCell>{spell.effect}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  LabelList,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nexport default function UnitDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Legend />\r\n        <Bar dataKey=\"Units\" fill={colors[0]} minPointSize={3}>\r\n          <LabelList dataKey=\"Units\" position=\"top\" />\r\n        </Bar>\r\n        <Bar dataKey=\"Points\" fill={colors[1]} minPointSize={3}>\r\n          <LabelList dataKey=\"Points\" position=\"top\" />\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Cell, Tooltip, Legend, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  useMediaQuery\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport UnitDistributionChart from './UnitDistributionChart';\r\nimport PointDistributionChart from './PointDistributionChart';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/ui/actions';\r\n\r\nconst unitData = getData('unitData');\r\nconst fantasticalRulesData = getData('fantasticalRulesData');\r\n\r\nexport default function Statistics() {\r\n  const dispatch = useDispatch();\r\n  const statisticsExpanded = useSelector(state => state.ui.statisticsExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + unitData[unit.name].options[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const totalPoints = Object.values(units).reduce((acc, unit) => acc + unit.points, 0);\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = Object.values(units).filter(u => u.type === 'mounted');\r\n  const foot = Object.values(units).filter(u => u.type === 'foot');\r\n  const ranged = Object.values(units).filter(u => u.stats.shoot > 0);\r\n  const unitsCost = Object.values(units).reduce(\r\n    (acc, u) => acc + unitData[u.name].points,\r\n    0\r\n  );\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: Object.values(mounted).reduce((acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: Object.values(foot).reduce((acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: Object.values(ranged).reduce((acc, u) => acc + u.points, 0)\r\n    }\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints }\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => dispatch(setUIOption('statisticsExpanded', !statisticsExpanded))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport AppBar from './AppBar';\r\nimport ListName from './ListName';\r\nimport Roster from './Roster';\r\nimport RulesSummary from './RulesSummary';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/ui/actions';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateUI({ ...store.get('uiOptions') }));\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <ListName />\r\n      <Roster />\r\n      <RulesSummary />\r\n      <SpellTable />\r\n      <Statistics />\r\n      <ShowFeedback />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { UIActionTypes } from './actions';\r\nimport store from 'store';\r\n\r\nconst uiInitialState = {\r\n  viewMode: false,\r\n  editMode: false,\r\n  rulesSummaryExpanded: true,\r\n  spellsExpanded: false,\r\n  statisticsExpanded: true\r\n};\r\n\r\nexport default (state = uiInitialState, action) => {\r\n  switch (action.type) {\r\n    case UIActionTypes.SET_UI: {\r\n      store.set('uiOptions', { ...action.payload });\r\n      return { ...action.payload };\r\n    }\r\n    case UIActionTypes.SET_UI_OPTION: {\r\n      const [option, value] = action.payload;\r\n      store.set('uiOptions', { ...state, [option]: value });\r\n      return { ...state, [option]: value };\r\n    }\r\n    case UIActionTypes.UPDATE_UI: {\r\n      store.set('uiOptions', { ...state, ...action.payload });\r\n      return { ...state, ...action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { RosterActionTypes } from './actions';\r\nimport getData from 'store/getData';\r\n\r\nconst rosterInitialState = {\r\n  name: 'New List',\r\n  nextID: 0,\r\n  units: {},\r\n  unitOrder: []\r\n};\r\n\r\nconst data = getData();\r\n\r\nexport default (state = rosterInitialState, action) => {\r\n  switch (action.type) {\r\n    case RosterActionTypes.NEW_ROSTER: {\r\n      return { ...rosterInitialState };\r\n    }\r\n    case RosterActionTypes.SET_ROSTER: {\r\n      return { ...action.payload };\r\n    }\r\n    case RosterActionTypes.UPDATE_ROSTER: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n    case RosterActionTypes.ADD_UNIT: {\r\n      const id = state.nextID;\r\n      return {\r\n        ...state,\r\n        nextID: id + 1,\r\n        units: {\r\n          ...state.units,\r\n          [id]: { ...data.unitData.Unit, options: [], fantasticalRules: [] }\r\n        },\r\n        unitOrder: [...state.unitOrder, id]\r\n      };\r\n    }\r\n    case RosterActionTypes.SET_UNIT: {\r\n      const [id, name] = action.payload;\r\n      return {\r\n        ...state,\r\n        units: {\r\n          ...state.units,\r\n          [id]: { ...data.unitData[name], options: [], fantasticalRules: [] }\r\n        }\r\n      };\r\n    }\r\n    case RosterActionTypes.UPDATE_UNIT: {\r\n      const [id, newAttributes] = action.payload;\r\n      return {\r\n        ...state,\r\n        units: {\r\n          ...state.units,\r\n          [id]: { ...state.units[id], ...newAttributes }\r\n        }\r\n      };\r\n    }\r\n    case RosterActionTypes.REMOVE_UNIT: {\r\n      const id = action.payload;\r\n      const units = { ...state.units };\r\n      delete units[id];\r\n      return {\r\n        ...state,\r\n        units: { ...units },\r\n        unitOrder: state.unitOrder.filter(val => val !== id)\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { AppStateActionTypes } from './actions';\r\n\r\nconst appStateInitialState = {\r\n  feedback: {\r\n    open: false,\r\n    message: '',\r\n    severity: ''\r\n  },\r\n  inputUpdate: 0\r\n};\r\n\r\nexport default (state = appStateInitialState, action) => {\r\n  switch (action.type) {\r\n    case AppStateActionTypes.TOGGLE_FORCE_INPUT_UPDATE: {\r\n      return { ...state, inputUpdate: state.forceInputUpdate ? 0 : 1 };\r\n    }\r\n    case AppStateActionTypes.CLOSE_FEEDBACK: {\r\n      return {\r\n        ...state,\r\n        feedback: { ...state.feedback, open: false }\r\n      };\r\n    }\r\n    case AppStateActionTypes.SHOW_FEEDBACK: {\r\n      const [message, severity] = action.payload;\r\n      return {\r\n        ...state,\r\n        feedback: { open: true, message: message, severity: severity }\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport uiReducer from './ui/reducer';\r\nimport rosterReducer from './roster/reducer';\r\nimport appStateReducer from './appState/reducer';\r\n\r\nexport default combineReducers({\r\n  ui: uiReducer,\r\n  roster: rosterReducer,\r\n  appState: appStateReducer\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\nexport default createStore(rootReducer);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}