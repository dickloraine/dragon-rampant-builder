{"version":3,"sources":["store/appStateSlice.tsx","store/data.tsx","store/rosterSlice.tsx","store/persistantStorage.tsx","store/uiSlice.tsx","store/store.tsx","hooks/useUserTheme.tsx","components/ListDialog.tsx","components/ListDialogMenu.tsx","components/Unit/buildUnit.tsx","components/ExpandIcon.tsx","components/TextInputDialog.tsx","components/Unit/Actions.tsx","components/Unit/FantasticalRules.tsx","components/Unit/Options.tsx","components/Unit/SpecialRules.tsx","components/Unit/StatBlock.tsx","components/Unit/UnitSelector.tsx","components/Unit/Unit.tsx","components/Roster.tsx","components/LoadList.tsx","components/SaveList.tsx","components/About.tsx","components/Backup.tsx","components/DarkMode.tsx","components/DeleteList.tsx","components/ExportList.tsx","components/ImportList.tsx","components/Restore.tsx","components/SideMenu.tsx","components/AppBar/ToggleViewMode.tsx","components/AppBar/TotalPoints.tsx","components/AppBar/AppBar.tsx","components/ListName.tsx","components/RulesSummary.tsx","components/ShowFeedback.tsx","components/SpellTable.tsx","components/Statistics/Statistics.tsx","components/Validation.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["appStateSlice","createSlice","name","initialState","feedback","open","message","severity","inputUpdate","autoDarkMode","reducers","toggleForceInputUpdate","state","closeFeedback","showFeedback","reducer","action","payload","prepare","setAutoDarkMode","actions","data","unitData","unitNames","Object","keys","slice","fantasticalRulesData","rulesData","spellData","rosterInitialState","nextID","units","unitOrder","rosterSlice","newRoster","setRoster","_","updateRoster","addUnit","unit","index","Unit","options","fantasticalRules","id","push","splice","setUnit","updateUnit","newAttributes","removeUnit","indexOf","renameUnit","customName","moveUnit","direction","nextIndex","length","getTotalPoints","createSelector","values","reduce","acc","points","getSpecialRules","rules","rule","sort","filter","ary","uiStore","localforage","createInstance","driver","LOCALSTORAGE","rosterStore","storeName","uiSlice","localStorage","getItem","JSON","parse","error","console","log","viewMode","editMode","darkMode","validationExpanded","rulesSummaryExpanded","spellsExpanded","statisticsExpanded","getInitialState","_setUI","_toggleUIOption","option","_updateUI","toggleUIOption","dispatch","getState","ui","setItem","catch","err","updateUI","rootReducer","combineReducers","uiReducer","roster","rosterReducer","appState","appStateReducer","store","configureStore","useUserTheme","useDispatch","prefersDarkMode","useMediaQuery","hasDarkMode","useSelector","undefined","React","useMemo","createMuiTheme","palette","type","ListDialog","anchor","title","onClose","onOpen","useState","setOpen","handleClose","opts","map","o","Box","display","alignItems","onClick","Dialog","DialogTitle","List","text","icon","ListItem","button","handleOnClick","key","ListItemIcon","ListDialogMenu","showText","Tooltip","IconButton","color","aria-label","Typography","buildUnit","unitToBuild","opt","setStats","entries","val","stats","add","remove","fant","fantasticRule","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","memo","expanded","classes","className","clsx","TextInputDialog","label","defaultValue","cancelText","okayText","margin","value","setValue","DialogContent","TextField","autoFocus","fullWidth","onChange","e","target","onKeyPress","DialogActions","Button","Actions","style","position","bottom","width","paddingRight","height","flexGrow","FantasticalRules","toCheck","excluded","handleOpen","FormLabel","component","FormControlLabel","control","Checkbox","checked","v","FormControl","marginTop","Select","IconComponent","multiple","input","Input","renderValue","MenuItem","Options","optionsData","handleChange","newUnit","FormGroup","includes","summary","SpecialRules","Container","variant","r","StatBlock","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","size","Hidden","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","UnitSelector","Chip","marginBottom","setExpanded","Card","maxWidth","CardHeader","Collapse","in","timeout","unmountOnExit","CardContent","packRoster","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","savedRosters","setSavedRosters","loadList","a","then","saveRoster","finally","textAlign","href","clickable","backup","savedLists","iterate","file","Blob","stringify","date","Date","offsetMs","getTimezoneOffset","getTime","dateText","toISOString","replace","saveAs","handleClick","removeList","removeItem","armyCost","funcs","join","exportFunc","i","navigator","clipboard","writeText","copyToClipboard","list","fileReader","fileDialog","useRef","restore","content","result","Promise","all","openFileDialog","current","click","ref","accept","event","FileReader","onloadend","files","readAsText","toggleDrawer","useCallback","Drawer","Divider","DarkMode","ToggleViewMode","Icon","optionState","notClicked","fontSize","TotalPoints","smDown","mdUp","AppBar","Toolbar","VisibilityIcon","EditIcon","root","backgroundColor","background","default","primary","border","ListName","rosterName","toString","RulesSummary","specialRules","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","secondary","ShowFeedback","reason","Snackbar","autoHideDuration","Alert","elevation","SpellTable","Array","spellcasterInRoster","minWidth","TableHead","align","spell","scope","difficulty","effect","newOpen","handleSpellClick","dense","paddingLeft","PointDistributionChart","lazy","UnitDistributionChart","Statistics","totalPoints","useTheme","chipSize","breakpoints","down","optionPoints","accumulator","fantasticalPoints","COLORS","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","fallback","CircularProgress","colors","main","contrastText","details","light","Validation","warnings","App","ThemeProvider","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d5f0338b.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype severity = 'error' | 'info' | 'success' | 'warning';\r\n\r\nexport type AppState = {\r\n  feedback: {\r\n    open: boolean;\r\n    message: string;\r\n    severity: severity;\r\n  };\r\n  inputUpdate: boolean;\r\n  autoDarkMode: boolean;\r\n};\r\n\r\nconst appStateSlice = createSlice({\r\n  name: 'appState',\r\n  initialState: {\r\n    feedback: {\r\n      open: false,\r\n      message: '',\r\n      severity: 'info',\r\n    },\r\n    inputUpdate: false,\r\n    autoDarkMode: false,\r\n  } as AppState,\r\n  reducers: {\r\n    toggleForceInputUpdate: (state) => {\r\n      state.inputUpdate = !state.inputUpdate;\r\n    },\r\n    closeFeedback: (state) => {\r\n      state.feedback.open = false;\r\n    },\r\n    showFeedback: {\r\n      reducer: (state, action: PayloadAction<[string, severity]>) => {\r\n        const [message, severity] = action.payload;\r\n        state.feedback = { open: true, message: message, severity: severity };\r\n      },\r\n      prepare: (\r\n        message: string,\r\n        severity: severity\r\n      ): { payload: [string, severity] } => ({\r\n        payload: [message, severity],\r\n      }),\r\n    },\r\n    setAutoDarkMode: (state, action) => {\r\n      state.autoDarkMode = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleForceInputUpdate,\r\n  closeFeedback,\r\n  showFeedback,\r\n  setAutoDarkMode,\r\n} = appStateSlice.actions;\r\nexport default appStateSlice.reducer;\r\n","import fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\nimport unitData from 'assets/dragonRampantData/units.json';\r\n\r\nexport type UnitStats = {\r\n  attack: number;\r\n  move: number;\r\n  shoot: number;\r\n  courage: number;\r\n  armour: number;\r\n  attackValue: number;\r\n  defenceValue: number;\r\n  shootValue: number;\r\n  shootRange: number | string;\r\n  movement: number;\r\n  strengthPoints: number;\r\n};\r\n\r\nexport type UnitOption = {\r\n  points?: number;\r\n  summary?: string;\r\n  remove?: string[];\r\n  add?: string[];\r\n  setStats?: Partial<UnitStats>;\r\n};\r\ntype UnitOptions = { [optionName: string]: UnitOption };\r\n\r\nexport type Unit = {\r\n  name: string;\r\n  type: string;\r\n  points: number;\r\n  stats: UnitStats;\r\n  rules: string[];\r\n  options: string[];\r\n  fantasticalRules: string[];\r\n  customName?: string;\r\n};\r\n\r\nexport type DataUnit = {\r\n  name: string;\r\n  type: string;\r\n  points: number;\r\n  stats: UnitStats;\r\n  rules: string[];\r\n  options: UnitOptions;\r\n  fantasticalRules: string[];\r\n  customName?: string;\r\n};\r\n\r\nexport type CompactUnit = {\r\n  name: string;\r\n  options: string[];\r\n  fantasticalRules: string[];\r\n  customName?: string;\r\n};\r\n\r\nexport type fantasticalRule = {\r\n  name: string;\r\n  points: number;\r\n};\r\n\r\nexport type Spell = {\r\n  name: string;\r\n  difficulty: number;\r\n  target: string;\r\n  duration: string;\r\n  effect: string;\r\n};\r\n\r\ntype Units = { [name: string]: DataUnit };\r\ntype FantasticalRules = { [name: string]: fantasticalRule };\r\ntype Rules = { [name: string]: string };\r\ntype Spells = { [name: string]: Spell };\r\n\r\nexport type Data = {\r\n  unitData: Units;\r\n  unitNames: string[];\r\n  fantasticalRulesData: FantasticalRules;\r\n  rulesData: Rules;\r\n  spellData: Spells;\r\n};\r\n\r\nconst data: Data = {\r\n  unitData: unitData,\r\n  unitNames: Object.keys(unitData).slice(1),\r\n  fantasticalRulesData: fantasticalRulesData,\r\n  rulesData: rulesData,\r\n  spellData: spellData,\r\n};\r\n\r\nexport default data;\r\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport data, { CompactUnit, Unit } from './data';\r\n\r\ntype RosterUnits = { [id: number]: Unit };\r\n\r\nexport type RosterState = {\r\n  name: string;\r\n  nextID: number;\r\n  units: RosterUnits;\r\n  unitOrder: number[];\r\n};\r\n\r\nexport type CompactRosterState = {\r\n  name: string;\r\n  nextID: number;\r\n  units: { [id: number]: CompactUnit };\r\n  unitOrder: number[];\r\n};\r\n\r\nconst rosterInitialState: RosterState = {\r\n  name: 'New List',\r\n  nextID: 0,\r\n  units: {},\r\n  unitOrder: [],\r\n};\r\n\r\nconst rosterSlice = createSlice({\r\n  name: 'roster',\r\n  initialState: rosterInitialState,\r\n  reducers: {\r\n    newRoster: () => ({ ...rosterInitialState }),\r\n    setRoster: (_, action: PayloadAction<RosterState>) => ({ ...action.payload }),\r\n    updateRoster: (state, action: PayloadAction<Partial<RosterState>>) => ({\r\n      ...state,\r\n      ...action.payload,\r\n    }),\r\n    addUnit: {\r\n      reducer: (state: RosterState, action: PayloadAction<[Unit?, number?]>) => {\r\n        let [unit, index] = action.payload;\r\n        unit = unit\r\n          ? unit\r\n          : { ...data.unitData.Unit, options: [], fantasticalRules: [] };\r\n        const id = state.nextID;\r\n        index == null\r\n          ? state.unitOrder.push(id)\r\n          : state.unitOrder.splice(index + 1, 0, id);\r\n        state.nextID += 1;\r\n        state.units[id] = unit;\r\n      },\r\n      prepare: (unit?: Unit, index?: number): { payload: [Unit?, number?] } => ({\r\n        payload: [unit, index],\r\n      }),\r\n    },\r\n    setUnit: {\r\n      reducer: (state, action: PayloadAction<[number, string]>) => {\r\n        const [id, name] = action.payload;\r\n        state.units[id] = { ...data.unitData[name], options: [], fantasticalRules: [] };\r\n      },\r\n      prepare: (id: number, name: string): { payload: [number, string] } => ({\r\n        payload: [id, name],\r\n      }),\r\n    },\r\n    updateUnit: {\r\n      reducer: (state, action: PayloadAction<[number, Partial<Unit>]>) => {\r\n        const [id, newAttributes] = action.payload;\r\n        state.units[id] = { ...state.units[id], ...newAttributes };\r\n      },\r\n      prepare: (\r\n        id: number,\r\n        newAttributes: Partial<Unit>\r\n      ): { payload: [number, Partial<Unit>] } => ({ payload: [id, newAttributes] }),\r\n    },\r\n    removeUnit: (state, action: PayloadAction<number>) => {\r\n      const id = action.payload;\r\n      delete state.units[id];\r\n      state.unitOrder.splice(state.unitOrder.indexOf(id), 1);\r\n    },\r\n    renameUnit: {\r\n      reducer: (state, action: PayloadAction<[number, string]>) => {\r\n        const [id, name] = action.payload;\r\n        state.units[id].customName = name;\r\n      },\r\n      prepare: (id: number, name: string): { payload: [number, string] } => ({\r\n        payload: [id, name],\r\n      }),\r\n    },\r\n    moveUnit: {\r\n      reducer: (state, action: PayloadAction<[number, 'left' | 'right']>) => {\r\n        const [id, direction] = action.payload;\r\n        const index = state.unitOrder.indexOf(id);\r\n        const nextIndex = direction === 'left' ? index - 1 : index + 1;\r\n        if (nextIndex < 0 || nextIndex >= state.unitOrder.length) return state;\r\n        [state.unitOrder[nextIndex], state.unitOrder[index]] = [\r\n          state.unitOrder[index],\r\n          state.unitOrder[nextIndex],\r\n        ];\r\n      },\r\n      prepare: (\r\n        id: number,\r\n        direction: 'left' | 'right'\r\n      ): { payload: [number, 'left' | 'right'] } => ({ payload: [id, direction] }),\r\n    },\r\n  },\r\n});\r\n\r\nconst getTotalPoints = createSelector(\r\n  (units: RosterUnits) => units,\r\n  (units) => Object.values(units).reduce((acc, unit) => acc + unit.points, 0)\r\n);\r\n\r\nconst getSpecialRules = createSelector(\r\n  (units: RosterUnits) => units,\r\n  (units) =>\r\n    Object.values(units)\r\n      .reduce(\r\n        (acc: string[], unit) =>\r\n          unit.rules.reduce(\r\n            (acc, rule) =>\r\n              data.rulesData[data.rulesData[rule]]\r\n                ? [...acc, data.rulesData[rule]]\r\n                : [...acc, rule],\r\n            acc\r\n          ),\r\n        []\r\n      )\r\n      .sort()\r\n      .filter((rule, index, ary) => !index || rule !== ary[index - 1])\r\n);\r\n\r\nexport { getTotalPoints, getSpecialRules };\r\n\r\nexport const {\r\n  newRoster,\r\n  setRoster,\r\n  updateRoster,\r\n  addUnit,\r\n  setUnit,\r\n  updateUnit,\r\n  removeUnit,\r\n  renameUnit,\r\n  moveUnit,\r\n} = rosterSlice.actions;\r\n\r\nexport default rosterSlice.reducer;\r\n","import localforage from 'localforage';\r\n\r\nexport const uiStore = localforage.createInstance({\r\n  driver: localforage.LOCALSTORAGE,\r\n});\r\n\r\nexport const rosterStore = localforage.createInstance({\r\n  name: 'drabDB',\r\n  storeName: 'rosterStore',\r\n});\r\n","import { Action, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { uiStore } from './persistantStorage';\r\n\r\nexport type UIState = {\r\n  viewMode: boolean;\r\n  editMode: boolean;\r\n  darkMode: null | boolean;\r\n  validationExpanded: boolean;\r\n  rulesSummaryExpanded: boolean;\r\n  spellsExpanded: boolean;\r\n  statisticsExpanded: boolean;\r\n};\r\n\r\nconst getInitialState = () => {\r\n  try {\r\n    const initialState = localStorage.getItem('localforage/uiOptions');\r\n    if (initialState !== null) {\r\n      return JSON.parse(initialState) as UIState;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return {\r\n    viewMode: false,\r\n    editMode: false,\r\n    darkMode: null,\r\n    validationExpanded: true,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true,\r\n  };\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: getInitialState(),\r\n  reducers: {\r\n    _setUI: (_, action: PayloadAction<UIState>) => {\r\n      return { ...action.payload };\r\n    },\r\n    _toggleUIOption: (state: UIState, action: PayloadAction<keyof UIState>) => {\r\n      const option = action.payload;\r\n      state[option] = !state[option];\r\n    },\r\n    _updateUI: (state, action: PayloadAction<Partial<UIState>>) => {\r\n      return { ...state, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nconst { _setUI, _toggleUIOption, _updateUI } = uiSlice.actions;\r\n\r\ntype UIThunk = ThunkAction<void, any, unknown, Action<string>>;\r\n\r\nexport const setUI = (newState: UIState): UIThunk => (dispatch) => {\r\n  uiStore.setItem('uiOptions', { ...newState }).catch((err) => console.log(err));\r\n  dispatch(_setUI(newState));\r\n};\r\n\r\nexport const toggleUIOption = (option: keyof UIState): UIThunk => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const state: UIState = getState().ui;\r\n  uiStore\r\n    .setItem('uiOptions', { ...state, [option]: !state[option] })\r\n    .catch((err) => console.log(err));\r\n  dispatch(_toggleUIOption(option));\r\n};\r\n\r\nexport const updateUI = (options: Partial<UIState>): UIThunk => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const state: UIState = getState().ui;\r\n  uiStore\r\n    .setItem('uiOptions', { ...state, ...options })\r\n    .catch((err) => console.log(err));\r\n  dispatch(_updateUI(options));\r\n};\r\n\r\nexport default uiSlice.reducer;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport appStateReducer from './appStateSlice';\r\nimport rosterReducer from './rosterSlice';\r\nimport uiReducer from './uiSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  roster: rosterReducer,\r\n  appState: appStateReducer,\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAutoDarkMode } from 'store/appStateSlice';\r\nimport { AppDispatch, RootState } from 'store/store';\r\n\r\nconst useUserTheme = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const hasDarkMode = useSelector((state: RootState) => state.ui.darkMode);\r\n  const darkMode = hasDarkMode === undefined ? prefersDarkMode : hasDarkMode;\r\n  dispatch(setAutoDarkMode(darkMode));\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: darkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [darkMode]\r\n  );\r\n  return theme;\r\n};\r\n\r\nexport default useUserTheme;\r\n","import {\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst ListDialog: React.FC<{\r\n  anchor: JSX.Element;\r\n  action: (text: string) => void;\r\n  options: [string, JSX.Element | null][] | string[];\r\n  title: string;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({ anchor, action, options, title, onClose, onOpen }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleOnClick = (text: string) => {\r\n    action(text);\r\n    handleClose();\r\n  };\r\n\r\n  const opts: [string, JSX.Element | null][] =\r\n    typeof (options as string[])[0] === 'string'\r\n      ? (options as string[]).map((o: string) => [o, null])\r\n      : (options as [string, JSX.Element | null][]);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" onClick={handleOpen}>\r\n        {anchor}\r\n      </Box>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <List>\r\n          {opts.map(([text, icon]) => (\r\n            <ListItem button onClick={() => handleOnClick(text)} key={text}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              {text}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListDialog;\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ListDialog from './ListDialog';\r\n\r\nconst ListDialogMenu: React.FC<{\r\n  action: (text: string) => void;\r\n  options: [string, JSX.Element | null][] | string[];\r\n  title: string;\r\n  text: string;\r\n  icon: JSX.Element;\r\n  showText?: boolean;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({ action, options, title, text, icon, showText, onClose, onOpen }) => {\r\n  return (\r\n    <ListDialog\r\n      action={action}\r\n      onOpen={onOpen}\r\n      anchor={\r\n        <>\r\n          <Tooltip title={text}>\r\n            <IconButton color=\"inherit\" aria-label={text}>\r\n              {icon}\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography>{text}</Typography>}\r\n        </>\r\n      }\r\n      options={options}\r\n      title={title}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ListDialogMenu;\r\n","import data, { CompactUnit, Unit } from 'store/data';\r\n\r\nconst buildUnit = (unitToBuild: CompactUnit | Unit) => {\r\n  const unitData = data.unitData[unitToBuild.name];\r\n\r\n  let unit: Unit = {\r\n    ...unitData,\r\n    customName: unitToBuild.customName || '',\r\n    options: [...unitToBuild.options],\r\n    fantasticalRules: [...unitToBuild.fantasticalRules],\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (const opt of unit.options) {\r\n    const option = unitData.options[opt];\r\n    points += option.points || 0;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter((val) => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (const fant of unit.fantasticalRules) {\r\n    const fantasticRule = data.fantasticalRulesData[fant];\r\n    points += fantasticRule.points;\r\n    unit.rules = [...unit.rules, fantasticRule.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nexport default buildUnit;\r\n","import { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nconst ExpandIcon: React.FC<{\r\n  expanded: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\r\n}> = ({ expanded, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      className={clsx(classes.expand, {\r\n        [classes.expandOpen]: expanded,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      <ExpandMoreIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExpandIcon);\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst TextInputDialog: React.FC<{\r\n  anchor: JSX.Element;\r\n  action: (text: string) => void;\r\n  title?: string;\r\n  label?: string;\r\n  defaultValue?: string;\r\n  cancelText?: string;\r\n  okayText?: string;\r\n  margin?: 'none' | 'dense' | 'normal' | undefined;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({\r\n  anchor,\r\n  action,\r\n  title = '',\r\n  label = '',\r\n  defaultValue = '',\r\n  cancelText = 'Cancel',\r\n  okayText = 'okay',\r\n  margin = 'dense',\r\n  onClose,\r\n  onOpen,\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('');\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleKeyPressed = (key: string) => {\r\n    if (key === 'Enter') {\r\n      setValue(value);\r\n      action(value);\r\n      handleClose();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n  const handleAction = () => {\r\n    action(value);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" onClick={handleOpen}>\r\n        {anchor}\r\n      </Box>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin={margin}\r\n            label={label}\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={defaultValue || value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            onKeyPress={(e) => handleKeyPressed(e.key)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {cancelText}\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {okayText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInputDialog;\r\n","import { Box, IconButton, Tooltip } from '@material-ui/core';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Unit } from 'store/data';\r\nimport { addUnit, moveUnit, renameUnit } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState } from 'store/store';\r\nimport TextInputDialog from '../TextInputDialog';\r\n\r\nconst Actions: React.FC<{ id: number; unit: Unit }> = ({ id, unit }) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n\r\n  const moveLeft = () => dispatch(moveUnit(id, 'left'));\r\n  const moveRight = () => dispatch(moveUnit(id, 'right'));\r\n  const cloneUnit = () => dispatch(addUnit(unit, roster.unitOrder.indexOf(id)));\r\n  const rename = (value: string) => dispatch(renameUnit(id, value));\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: 'absolute',\r\n        bottom: 5,\r\n        width: '95%',\r\n        paddingRight: 15,\r\n      }}\r\n    >\r\n      <Box display=\"flex\" style={{ height: 25 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextInputDialog\r\n            anchor={\r\n              <Tooltip title=\"Rename unit\">\r\n                <IconButton>\r\n                  <TextFieldsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            }\r\n            action={rename}\r\n            title=\"Enter the name for the unit\"\r\n            label=\"Unit name\"\r\n            defaultValue={unit.customName}\r\n            okayText=\"Rename\"\r\n          />\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import {\r\n  Box,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport React from 'react';\r\nimport data, { Unit } from 'store/data';\r\n\r\nconst FantasticalRules: React.FC<{ unit: Unit; onChange: (unit: Unit) => void }> = ({\r\n  unit,\r\n  onChange,\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const unitData = data.unitData[unit.name];\r\n  const fantasticalRulesData = data.fantasticalRulesData;\r\n  const rulesData = data.rulesData;\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter((val) => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) =>\r\n    onChange({ ...unit, fantasticalRules: [...(e.target.value as string[])] });\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map((name) => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onChange={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter((v) => v !== name),\r\n                      ],\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Tooltip title={rulesData[name]}>\r\n                  <Typography>\r\n                    {name}{' '}\r\n                    <Typography color=\"secondary\" component=\"span\">\r\n                      @{fantasticalRulesData[name].points}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Tooltip>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Tooltip title={rulesData[name]}>\r\n                  <Typography>\r\n                    {name}{' '}\r\n                    <Typography color=\"secondary\" component=\"span\">\r\n                      @{fantasticalRulesData[name].points}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Tooltip>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Tooltip title={rulesData[name]}>\r\n                  <Typography color=\"primary\">\r\n                    {name}{' '}\r\n                    <Typography color=\"secondary\" component=\"span\">\r\n                      @{fantasticalRulesData[name].points}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Tooltip>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FantasticalRules;\r\n","import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport data, { Unit } from 'store/data';\r\n\r\nconst Options: React.FC<{ unit: Unit; onChange: (unit: Unit) => void }> = ({\r\n  unit,\r\n  onChange,\r\n}) => {\r\n  const optionsData = data.unitData[unit.name].options;\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = (option: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter((val) => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map((option) => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Tooltip title={optionsData[option].summary}>\r\n                <Typography>\r\n                  {option}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{optionsData[option].points}\r\n                  </Typography>\r\n                </Typography>\r\n              </Tooltip>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import { Container, List, ListItem, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst SpecialRules: React.FC<{ rules: string[] }> = ({ rules }) => {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map((r) => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default SpecialRules;\r\n","import {\r\n  Hidden,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { UnitStats } from 'store/data';\r\n\r\nconst StatBlock: React.FC<{ stats: UnitStats }> = ({ stats }) => {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default StatBlock;\r\n","import { Chip, Typography } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport React from 'react';\r\nimport { Unit } from 'store/data';\r\nimport ListDialog from '../ListDialog';\r\n\r\nconst UnitSelector: React.FC<{\r\n  unit: Unit;\r\n  options: string[];\r\n  onClose: (name: string) => void;\r\n}> = ({ unit, options, onClose }) => {\r\n  const name = unit.customName ? unit.customName : unit.name;\r\n\r\n  const setSelectedUnit = (value: string) => {\r\n    if (value !== unit.name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={setSelectedUnit}\r\n      anchor={\r\n        <>\r\n          <Typography variant=\"h5\">\r\n            <Chip label={unit.points} color=\"primary\" />\r\n            &nbsp;&nbsp;\r\n            {name}\r\n            <ArrowDropDownIcon />\r\n          </Typography>\r\n          {unit.customName && (\r\n            <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n              {unit.name}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      }\r\n      options={options}\r\n      title=\"Choose unit type\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnitSelector;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Collapse,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport data, { Unit as UnitType } from 'store/data';\r\nimport { removeUnit, setUnit, updateUnit } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState } from 'store/store';\r\nimport ExpandIcon from '../ExpandIcon';\r\nimport Actions from './Actions';\r\nimport buildUnit from './buildUnit';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport Options from './Options';\r\nimport SpecialRules from './SpecialRules';\r\nimport StatBlock from './StatBlock';\r\nimport UnitSelector from './UnitSelector';\r\n\r\nconst Unit: React.FC<{ id: number }> = ({ id }) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const unit = useSelector((state: RootState) => state.roster.units[id]);\r\n  const viewMode = useSelector((state: RootState) => state.ui.viewMode);\r\n  const editMode = useSelector((state: RootState) => state.ui.editMode);\r\n\r\n  const [expanded, setExpanded] = React.useState(true);\r\n  const handleExpandClick = () => setExpanded(!expanded);\r\n\r\n  const changeUnit = (name: string) => dispatch(setUnit(id, name));\r\n\r\n  const handleChange = (unit: UnitType) => {\r\n    unit = buildUnit(unit);\r\n    dispatch(updateUnit(id, { ...unit }));\r\n  };\r\n\r\n  const handleRemove = () => dispatch(removeUnit(id));\r\n\r\n  return (\r\n    <Card\r\n      style={{ marginBottom: 25, maxWidth: 400, width: '100%', position: 'relative' }}\r\n    >\r\n      {viewMode ? (\r\n        <CardHeader\r\n          title={\r\n            <>\r\n              <Typography variant=\"h5\">\r\n                <Chip label={unit.points} color=\"primary\" />\r\n                &nbsp;&nbsp;\r\n                {unit.customName ? unit.customName : unit.name}\r\n              </Typography>\r\n              {unit.customName &&\r\n                (expanded ? (\r\n                  <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n                    {unit.name}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography style={{ marginLeft: 45 }}>{unit.name}</Typography>\r\n                ))}\r\n            </>\r\n          }\r\n          action={<ExpandIcon expanded={expanded} onClick={handleExpandClick} />}\r\n        />\r\n      ) : (\r\n        <CardHeader\r\n          title={\r\n            <UnitSelector unit={unit} onClose={changeUnit} options={data.unitNames} />\r\n          }\r\n          action={\r\n            <Button onClick={handleRemove}>\r\n              <CloseIcon />\r\n            </Button>\r\n          }\r\n        />\r\n      )}\r\n      <Collapse in={!viewMode || expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!editMode && (\r\n            <>\r\n              <StatBlock stats={unit.stats} />\r\n              <SpecialRules rules={unit.rules} />\r\n            </>\r\n          )}\r\n          {!viewMode && (\r\n            <>\r\n              <Options onChange={handleChange} unit={unit} />\r\n              <FantasticalRules onChange={handleChange} unit={unit} />\r\n              <Actions id={id} unit={unit} />\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(Unit);\r\n","import { Box, Fab, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CompactUnit } from 'store/data';\r\nimport { addUnit, CompactRosterState, RosterState } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState } from 'store/store';\r\nimport buildUnit from './Unit/buildUnit';\r\nimport Unit from './Unit/Unit';\r\n\r\nconst packRoster = (roster: RosterState): CompactRosterState => {\r\n  const units: CompactUnit[] = Object.values(roster.units).map((unit) => ({\r\n    name: unit.name,\r\n    customName: unit.customName || '',\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules,\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = (compactRoster: CompactRosterState): RosterState => {\r\n  const units = Object.values(compactRoster.units).map((unit) => buildUnit(unit));\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n  const viewMode = useSelector((state: RootState) => state.ui.viewMode);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map((id) => (\r\n          <Unit id={id} key={id} />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={() => dispatch(addUnit())}\r\n          aria-label=\"Add unit\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\nimport { CompactRosterState, setRoster } from 'store/rosterSlice';\r\nimport ListDialogMenu from './ListDialogMenu';\r\nimport { unpackRoster } from './Roster';\r\n\r\nconst LoadList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [savedRosters, setSavedRosters] = useState<string[]>([]);\r\n\r\n  const handleOpen = () => rosterStore.keys().then((keys) => setSavedRosters(keys));\r\n\r\n  const loadList = async (name: string) => {\r\n    try {\r\n      const compactRoster = await rosterStore.getItem<CompactRosterState>(name);\r\n      const roster = unpackRoster(compactRoster!);\r\n      dispatch(setRoster({ ...roster }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`${name} loaded!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not load ${name}!`, 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialogMenu\r\n      action={loadList}\r\n      onOpen={handleOpen}\r\n      options={savedRosters}\r\n      title=\"Choose List to load\"\r\n      text=\"Load List\"\r\n      icon={<SaveOutlinedIcon />}\r\n      showText={showText}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadList);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\nimport { AppDispatch, RootState } from 'store/store';\r\nimport { packRoster } from './Roster';\r\n\r\nconst SaveList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n\r\n  const saveRoster = () => {\r\n    if (roster.name === 'New List') {\r\n      dispatch(showFeedback('You have to give the list a name!', 'error'));\r\n      return;\r\n    }\r\n    rosterStore\r\n      .setItem(roster.name, { ...packRoster(roster) })\r\n      .then(() => dispatch(showFeedback('Saved!', 'success')))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(showFeedback('Could not save!', 'error'));\r\n      })\r\n      .finally(() => {\r\n        if (onClose) onClose();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" aria-label=\"Save List\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SaveList);\r\n","import {\r\n  Box,\r\n  Chip,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport React, { useState } from 'react';\r\n\r\nconst About: React.FC<{ onClose?: () => void }> = ({ onClose = undefined }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load List\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {<Typography onClick={handleOpen}>About</Typography>}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={{ textAlign: 'center' }}>About</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body1\">\r\n            A simple Army Builder for the tabletop game{' '}\r\n            {<a href=\"https://ospreypublishing.com/dragon-rampant\">Dragon Rampant</a>}.\r\n          </Typography>\r\n          <Box display=\"flex\" style={{ marginTop: 25 }}>\r\n            <Chip\r\n              label=\"View on Github\"\r\n              icon={<GitHubIcon />}\r\n              component=\"a\"\r\n              href=\"#chip\"\r\n              clickable\r\n            />\r\n            <Box flexGrow={1}></Box>\r\n            <Chip label=\"License: MIT\" />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(About);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { saveAs } from 'file-saver';\r\nimport React from 'react';\r\nimport { rosterStore } from 'store/persistantStorage';\r\n\r\nconst Backup: React.FC<{ showText: boolean; onClose?: () => void }> = ({\r\n  showText = false,\r\n  onClose = undefined,\r\n}) => {\r\n  const backup = async () => {\r\n    const savedLists: any = {};\r\n    await rosterStore.iterate((val, key) => {\r\n      savedLists[key] = val;\r\n    });\r\n\r\n    const file = new Blob([JSON.stringify(savedLists)], {\r\n      type: 'text/plain;charset=utf-8',\r\n    });\r\n\r\n    let date = new Date();\r\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\r\n    date = new Date(date.getTime() - offsetMs);\r\n    const dateText = date.toISOString().slice(0, 10).replace(/-/g, '/');\r\n\r\n    saveAs(file, `${dateText}_DRAB.sav`);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={backup}>\r\n          <BackupIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={backup}>Backup</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Backup);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store/store';\r\nimport { updateUI } from 'store/uiSlice';\r\n\r\nconst Darkmode: React.FC<{ showText?: boolean }> = ({ showText }) => {\r\n  let darkMode = useSelector((state: RootState) => state.ui.darkMode);\r\n  const autoDarkMode = useSelector((state: RootState) => state.appState.autoDarkMode);\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => {\r\n    if (darkMode === undefined) darkMode = autoDarkMode;\r\n    dispatch(updateUI({ darkMode: !darkMode }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Dark Mode\">\r\n        <IconButton onClick={handleClick} aria-label=\"Toggle Dark mode\">\r\n          <BrightnessHighIcon color={darkMode ? 'inherit' : 'disabled'} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && (\r\n        <Typography\r\n          color={darkMode ? 'inherit' : 'textSecondary'}\r\n          onClick={handleClick}\r\n        >\r\n          Dark Mode\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Darkmode);\r\n","import DeleteIcon from '@material-ui/icons/Delete';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\nimport ListDialogMenu from './ListDialogMenu';\r\n\r\nconst DeleteList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [savedRosters, setSavedRosters] = useState<string[]>([]);\r\n\r\n  const handleOpen = () => rosterStore.keys().then((keys) => setSavedRosters(keys));\r\n\r\n  const removeList = async (name: string) => {\r\n    await rosterStore.removeItem(name);\r\n    dispatch(showFeedback('Deleted!', 'success'));\r\n  };\r\n\r\n  return (\r\n    <ListDialogMenu\r\n      action={removeList}\r\n      onOpen={handleOpen}\r\n      options={savedRosters}\r\n      title=\"Choose List to delete\"\r\n      text=\"Delete List\"\r\n      icon={<DeleteIcon />}\r\n      showText={showText}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(DeleteList);\r\n","import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState } from 'store/store';\r\nimport ListDialogMenu from './ListDialogMenu';\r\nimport { packRoster } from './Roster';\r\n\r\nconst copyToClipboard = (text: string) => navigator.clipboard.writeText(text);\r\n\r\nconst ExportList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n  const getImportableString = () => JSON.stringify(packRoster(roster));\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const armyCost = getTotalPoints(units);\r\n\r\n  const getListAsText = () => {\r\n    let text: string[] = [];\r\n    text.push(`${roster.name} @${armyCost} points`);\r\n    text.push('=====================================');\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n      text.push('-----------------------------------');\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        for (const option of options) text.push(`- ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const getListAsMarkdown = () => {\r\n    let text: string[] = [];\r\n    text.push(`**${roster.name} @${armyCost} points**`);\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `* ${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        text.push('');\r\n        for (const option of options) text.push(`    - ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const options: [string, JSX.Element][] = [\r\n    ['As an importable String', <ArrowDownwardIcon />],\r\n    ['As text', <FormatAlignLeftIcon />],\r\n    ['As markdown text', <FormatAlignJustifyIcon />],\r\n  ];\r\n\r\n  const funcs = [getImportableString, getListAsText, getListAsMarkdown];\r\n\r\n  const exportList = (text: string) => {\r\n    let exportFunc: () => string =\r\n      funcs[options.reduce((acc, opt, i) => (opt[0] === text ? i : acc), 0)];\r\n\r\n    try {\r\n      const list = exportFunc();\r\n      copyToClipboard(list);\r\n      dispatch(showFeedback('List copied to clipboard!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not export the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialogMenu\r\n      action={exportList}\r\n      options={options}\r\n      title=\"Chose how to export\"\r\n      text=\"Export\"\r\n      icon={<ShareIcon />}\r\n      showText={showText}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(ExportList);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { unpackRoster } from './Roster';\r\nimport TextInputDialog from './TextInputDialog';\r\n\r\nconst ImportList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImport = (value?: string) => {\r\n    if (!value) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(value));\r\n      dispatch(setRoster({ ...list }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback('List imported!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not import the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextInputDialog\r\n      anchor={\r\n        <>\r\n          <Tooltip title=\"Import list\">\r\n            <IconButton color=\"inherit\" aria-label=\"Import List\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography>Import list</Typography>}\r\n        </>\r\n      }\r\n      action={handleImport}\r\n      title=\"Enter the import string\"\r\n      label=\"Exported String\"\r\n      okayText=\"Import\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(ImportList);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\n\r\nconst Restore: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  showText,\r\n  onClose,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let fileReader: FileReader;\r\n  const fileDialog = React.useRef<HTMLInputElement>(null);\r\n\r\n  const restore = async () => {\r\n    try {\r\n      const content = fileReader.result as string;\r\n      const savedLists: Object = JSON.parse(content);\r\n      await Promise.all(\r\n        Object.entries(savedLists).map(([key, val]) => rosterStore.setItem(key, val))\r\n      );\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`Restored!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not restore!`, 'error'));\r\n      console.log(err);\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const handleFileChosen = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = restore;\r\n    if (event.target.files) fileReader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const openFileDialog = () => {\r\n    if (fileDialog.current) fileDialog.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={openFileDialog}>\r\n          <RestorePageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={openFileDialog}>Restore</Typography>}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileDialog}\r\n        style={{ display: 'none' }}\r\n        id=\"restoreFile\"\r\n        accept=\".sav\"\r\n        onChange={handleFileChosen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Restore);\r\n","import { Divider, Drawer, List, ListItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useCallback } from 'react';\r\nimport About from './About';\r\nimport Backup from './Backup';\r\nimport DarkMode from './DarkMode';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\nimport LoadList from './LoadList';\r\nimport Restore from './Restore';\r\nimport SaveList from './SaveList';\r\n\r\nconst SideMenu = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = (open: boolean) => (event: any) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = useCallback(() => setOpen(false), []);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Backup'}>\r\n            <Backup onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Restore'}>\r\n            <Restore onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'DarkMode'}>\r\n            <DarkMode showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'About'}>\r\n            <About onClose={handleClose} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SideMenu);\r\n","import { IconButton, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store/store';\r\nimport { UIState, updateUI } from 'store/uiSlice';\r\n\r\nconst ToggleViewMode: React.FC<{\r\n  option: keyof UIState;\r\n  Icon: any;\r\n  title: string;\r\n}> = ({ option, Icon, title }) => {\r\n  const optionState = useSelector((state: RootState) => state.ui[option]);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeViewMode = () => {\r\n    const notClicked = option === 'viewMode' ? 'editMode' : 'viewMode';\r\n    optionState\r\n      ? dispatch(updateUI({ [option]: !optionState }))\r\n      : dispatch(updateUI({ [option]: !optionState, [notClicked]: false }));\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={title}>\r\n      <IconButton color=\"inherit\" aria-label={title} onClick={changeViewMode}>\r\n        <Icon fontSize=\"small\" color={optionState ? 'inherit' : 'disabled'} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ToggleViewMode;\r\n","import { Fab, Hidden, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\nimport { RootState } from 'store/store';\r\n\r\nconst TotalPoints = () => {\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const armyCost = getTotalPoints(units);\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown>\r\n        <Typography variant=\"h6\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n          <Fab color=\"secondary\" size=\"small\">\r\n            <Typography variant=\"h6\">{armyCost}</Typography>\r\n          </Fab>\r\n        </Typography>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <Typography variant=\"h6\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <Fab color=\"secondary\" size=\"small\">\r\n            <Typography variant=\"h6\">{armyCost}</Typography>\r\n          </Fab>\r\n        </Typography>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TotalPoints;\r\n","import {\r\n  AppBar as AppBarMaterial,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { newRoster } from 'store/rosterSlice';\r\nimport LoadList from '../LoadList';\r\nimport SaveList from '../SaveList';\r\nimport SideMenu from '../SideMenu';\r\nimport ToggleViewMode from './ToggleViewMode';\r\nimport TotalPoints from './TotalPoints';\r\n\r\nconst AppBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"reload\"\r\n              onClick={() => dispatch(newRoster())}\r\n            >\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList />\r\n            <LoadList />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleViewMode option=\"viewMode\" Icon={VisibilityIcon} title=\"View mode\" />\r\n            <ToggleViewMode option=\"editMode\" Icon={EditIcon} title=\"Edit mode\" />\r\n            <TotalPoints />\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import { FormControl, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateRoster } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState } from 'store/store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    border: 0,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst ListName = () => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const rosterName = useSelector((state: RootState) => state.roster.name);\r\n  const inputUpdate = useSelector((state: RootState) => state.appState.inputUpdate);\r\n\r\n  return (\r\n    <FormControl>\r\n      <Typography\r\n        className={classes.root}\r\n        aria-label=\"List name\"\r\n        variant=\"h4\"\r\n        key={inputUpdate.toString()}\r\n        component=\"input\"\r\n        value={rosterName}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          dispatch(updateRoster({ name: e.target.value }))\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ListName;\r\n","import {\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport data from 'store/data';\r\nimport { getSpecialRules } from 'store/rosterSlice';\r\nimport { RootState } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\n\r\nconst rulesData = data.rulesData;\r\n\r\nconst RulesSummary = () => {\r\n  const dispatch = useDispatch();\r\n  const rulesSummaryExpanded = useSelector(\r\n    (state: RootState) => state.ui.rulesSummaryExpanded\r\n  );\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const specialRules = getSpecialRules(units);\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() => dispatch(toggleUIOption('rulesSummaryExpanded'))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map((rule) => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n};\r\n\r\nexport default RulesSummary;\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeFeedback } from 'store/appStateSlice';\r\nimport { AppDispatch, RootState } from 'store/store';\r\n\r\nconst ShowFeedback = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const feedback = useSelector((state: RootState) => state.appState.feedback);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch(closeFeedback());\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert\r\n        onClose={handleClose}\r\n        severity={feedback.severity}\r\n        variant=\"filled\"\r\n        elevation={6}\r\n      >\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import {\r\n  Box,\r\n  Collapse,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport data from 'store/data';\r\nimport { getSpecialRules } from 'store/rosterSlice';\r\nimport { RootState } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\n\r\nconst spellData = data.spellData;\r\n\r\nconst SpellTable = () => {\r\n  const dispatch = useDispatch();\r\n  const spellsExpanded = useSelector((state: RootState) => state.ui.spellsExpanded);\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const [open, setOpen] = useState([...Array(Object.keys(spellData))].map(() => false));\r\n  const specialRules = getSpecialRules(units);\r\n\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleSpellClick = (index: number) => {\r\n    const newOpen = [...open];\r\n    newOpen[index] = !open[index];\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => dispatch(toggleUIOption('spellsExpanded'))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <Hidden smDown>\r\n              <TableContainer>\r\n                <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headspelltable\">\r\n                      <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                      <Hidden smDown>\r\n                        <TableCell align=\"center\">Difficulty</TableCell>\r\n                      </Hidden>\r\n                      <Hidden mdUp>\r\n                        <TableCell align=\"center\">Dif</TableCell>\r\n                      </Hidden>\r\n                      <TableCell>Target</TableCell>\r\n                      <TableCell>Duration</TableCell>\r\n                      <TableCell>Effect</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.values(spellData).map((spell) => (\r\n                      <TableRow key={spell.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {spell.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                        <TableCell>{spell.target}</TableCell>\r\n                        <TableCell>{spell.duration}</TableCell>\r\n                        <TableCell>{spell.effect}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <List>\r\n                {Object.values(spellData).map((spell, index) => (\r\n                  <Box key={index}>\r\n                    <ListItem\r\n                      key={spell.name + 'small'}\r\n                      button\r\n                      onClick={() => handleSpellClick(index)}\r\n                    >\r\n                      <ListItemText primary={spell.name} />\r\n                      <Box width={25}></Box>\r\n                      {open[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </ListItem>\r\n                    <Collapse in={open[index]} timeout=\"auto\" unmountOnExit>\r\n                      <List key={spell.name + 'list'} dense style={{ paddingLeft: 20 }}>\r\n                        <ListItem key={spell.name + spell.difficulty}>\r\n                          <ListItemText\r\n                            primary=\"Difficulty: \"\r\n                            secondary={spell.difficulty}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.target}>\r\n                          <ListItemText primary=\"Target: \" secondary={spell.target} />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.duration}>\r\n                          <ListItemText\r\n                            primary=\"Duration: \"\r\n                            secondary={spell.duration}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.effect}>\r\n                          <ListItemText primary=\"Effect: \" secondary={spell.effect} />\r\n                        </ListItem>\r\n                      </List>\r\n                    </Collapse>\r\n                  </Box>\r\n                ))}\r\n              </List>\r\n            </Hidden>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpellTable;\r\n","import {\r\n  Chip,\r\n  CircularProgress,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Typography,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport data from 'store/data';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\nimport { RootState } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\nconst PointDistributionChart = lazy(() => import('./PointDistributionChart'));\r\nconst UnitDistributionChart = lazy(() => import('./UnitDistributionChart'));\r\n\r\nconst unitData = data.unitData;\r\nconst fantasticalRulesData = data.fantasticalRulesData;\r\n\r\nconst Statistics = () => {\r\n  const dispatch = useDispatch();\r\n  const statisticsExpanded = useSelector(\r\n    (state: RootState) => state.ui.statisticsExpanded\r\n  );\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const totalPoints = getTotalPoints(units);\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + (unitData[unit.name].options[option].points || 0),\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = Object.values(units).filter((u) => u.type === 'mounted');\r\n  const foot = Object.values(units).filter((u) => u.type === 'foot');\r\n  const ranged = Object.values(units).filter((u) => u.stats.shoot > 0);\r\n  const unitsCost = Object.values(units).reduce(\r\n    (acc, u) => acc + unitData[u.name].points,\r\n    0\r\n  );\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: Object.values(mounted).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: Object.values(foot).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: Object.values(ranged).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints },\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => dispatch(toggleUIOption('statisticsExpanded'))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <Suspense fallback={<CircularProgress />}>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </Suspense>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import {\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    backgroundColor: theme.palette.error.main,\r\n    color: theme.palette.error.contrastText,\r\n  },\r\n  details: {\r\n    backgroundColor: theme.palette.error.light,\r\n    color: theme.palette.error.contrastText,\r\n  },\r\n}));\r\n\r\nconst Validation = () => {\r\n  const dispatch = useDispatch();\r\n  const validationExpanded = useSelector(\r\n    (state: RootState) => state.ui.validationExpanded\r\n  );\r\n  const classes = useStyles();\r\n  const units = Object.values(useSelector((state: RootState) => state.roster.units));\r\n\r\n  const warnings = [];\r\n  for (const unit of units) {\r\n    if (unit.points > 10)\r\n      warnings.push([unit.name, 'No Unit may cost more than 10 points!']);\r\n    if (unit.name !== 'Unit' && unit.points <= 0)\r\n      warnings.push([unit.name, 'No Unit may cost 0 or less points!']);\r\n    if (\r\n      unit.options.includes('Short range missiles') &&\r\n      unit.options.includes('Mixed Weapons')\r\n    )\r\n      warnings.push([\r\n        unit.name,\r\n        'Short range missiles and Mixed Weapons may not be used together!',\r\n      ]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {warnings.length !== 0 && (\r\n        <ExpansionPanel\r\n          expanded={validationExpanded}\r\n          onChange={() => dispatch(toggleUIOption('validationExpanded'))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary\r\n            className={classes.title}\r\n            expandIcon={<ExpandMoreIcon className={classes.title} />}\r\n          >\r\n            <Typography variant=\"h5\">Warnings</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={classes.details}>\r\n            <List>\r\n              {warnings.map(([name, text], index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemIcon className={classes.details}>\r\n                    <ErrorIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={name} secondary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Validation;\r\n","import { Container, CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport useUserTheme from 'hooks/useUserTheme';\r\nimport React from 'react';\r\nimport AppBar from './AppBar';\r\nimport ListName from './ListName';\r\nimport Roster from './Roster';\r\nimport RulesSummary from './RulesSummary';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Validation from './Validation';\r\n\r\nconst App = () => {\r\n  const theme = useUserTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container>\r\n        <AppBar />\r\n        <ListName />\r\n        <Roster />\r\n        <Validation />\r\n        <RulesSummary />\r\n        <SpellTable />\r\n        <Statistics />\r\n        <ShowFeedback />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/store';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}