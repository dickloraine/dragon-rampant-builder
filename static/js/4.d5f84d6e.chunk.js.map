{"version":3,"sources":["../node_modules/@material-ui/icons/DeleteForever.js","../node_modules/@material-ui/icons/AddCircle.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","components/Customize/ExportCustomData.tsx","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","components/Customize/CustomizeList.tsx","components/Customize/CustomizePanel.tsx","components/Customize/FantasticalRulesForm.tsx","components/Customize/FantasticalRulesPanel.tsx","components/Customize/ImportCustomData.tsx","components/Customize/RulesForm.tsx","components/Customize/RulesPanel.tsx","components/Customize/SpellsForm.tsx","components/Customize/SpellsPanel.tsx","components/Customize/OptionsForm.tsx","components/Customize/UnitsForm.tsx","components/Customize/UnitsPanel.tsx","components/Customize/CustomizeMenuContent.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","Button","styles","ButtonGroup","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","vertical","map","child","withStyles","theme","display","borderRadius","shape","boxShadow","shadows","width","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","name","DataGroup","data","setData","customData","label","handleChange","event","target","checked","produce","draft","keys","length","FormLabel","FormGroup","FormControlLabel","control","Checkbox","undefined","onChange","key","ExportCustomData","open","handleClose","useState","getEmptyCustomData","useSelector","state","dispatch","useDispatch","nothingSelected","values","every","v","somethingToSelect","some","groupProps","Dialog","onClose","DialogTitle","DialogContent","FormControl","Box","mb","onClick","DialogActions","exportString","JSON","stringify","copyToClipboard","showFeedback","err","ListItemSecondaryAction","muiName","position","right","top","transform","CustomizeList","CustomForm","emptyState","removeFunc","addFunc","useOpen","handleOpen","setstate","originalName","setOriginalName","validateName","List","ListItem","id","ListItemIcon","IconButton","aria-label","ListItemText","startIcon","handleAction","initialState","changeState","CustomizePanel","expanded","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","FantasticalRulesForm","rule","units","selectUnitNames","TextField","margin","e","error","helperText","select","SelectProps","points","range","MenuItem","multiline","description","multiple","exclude_units","memo","fantasticalRulesData","roster","unit","fantasticalRules","includes","removeFantasticalRule","addFantasticalRule","setValue","parse","importCustomData","handleImport","autoFocus","onKeyPress","RulesForm","rulesData","rules","unitData","removeRule","addRule","SpellsForm","spell","difficulty","duration","effect","spellData","removeSpell","addSpell","OptionsForm","option","changeName","changeOption","specialRules","anchorSetStat","setAnchorSetStat","handleCloseSetStat","onClickSetStat","setStats","summary","InputLabel","style","Select","labelId","remove","add","statData","currentTarget","Menu","anchorEl","keepMounted","Boolean","filter","k","options","emptyOption","SelectStat","stat","isPhone","TableCell","shortName","stats","UnitsForm","useTheme","useMediaQuery","breakpoints","down","optionsOpen","setOptionsOpen","currentOption","setCurrentOption","currentOptionName","setCurrentOptionName","selectProps","strengthPoints","TableContainer","marginBottom","Table","TableBody","TableRow","attack","move","shoot","courage","armour","attackValue","defenceValue","shootValue","shootRange","movement","removeUnit","addUnit","setExpanded","openImExport","setOpenImExport","useCallback","panel","isExpanded","handleImExportClose","m","mx"],"mappings":"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","file":"static/js/4.d5f84d6e.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the button group.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * If `true`, the buttons will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, no elevation is used.\r\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\r\n   * If `true`, the button keyboard focus ripple will be disabled.\r\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\r\n   * If `true`, the button ripple effect will be disabled.\r\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\r\n   * If `true`, the buttons will take up the full width of its container.\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * The group orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\r\n   * The size of the button.\r\n   * `small` is equivalent to the dense button styling.\r\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import {\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n} from '@material-ui/core';\r\nimport produce from 'immer';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { getEmptyCustomData } from 'store/dataSlice';\r\nimport { CustomData, RootState } from 'store/types';\r\nimport copyToClipboard from 'utils/copyToClipboard';\r\n\r\nconst DataGroup: React.FC<{\r\n  data: CustomData;\r\n  setData: React.Dispatch<React.SetStateAction<CustomData>>;\r\n  customData: CustomData;\r\n  label: string;\r\n  type: keyof CustomData;\r\n}> = ({ data, setData, customData, label, type }) => {\r\n  const handleChange =\r\n    (type: keyof CustomData) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.checked) {\r\n        setData(\r\n          produce(data, (draft) => {\r\n            draft[type][event.target.name] = customData[type][event.target.name];\r\n          })\r\n        );\r\n      } else {\r\n        setData(\r\n          produce(data, (draft) => {\r\n            delete draft[type][event.target.name];\r\n          })\r\n        );\r\n      }\r\n    };\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(customData[type]).length !== 0 && (\r\n        <>\r\n          <FormLabel>{label}</FormLabel>\r\n          <FormGroup>\r\n            {Object.keys(customData[type]).map((name) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={data[type][name] !== undefined}\r\n                    onChange={handleChange(type)}\r\n                    name={name}\r\n                  />\r\n                }\r\n                label={name}\r\n                key={name}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ExportCustomData: React.FC<{ open: boolean; handleClose: () => void }> = ({\r\n  open,\r\n  handleClose,\r\n}) => {\r\n  const [data, setData] = React.useState(getEmptyCustomData());\r\n  const customData = useSelector((state: RootState) => state.data.customData);\r\n  const dispatch = useDispatch();\r\n\r\n  const selectAll = () => setData(customData);\r\n  const selectNone = () => setData(getEmptyCustomData());\r\n\r\n  const nothingSelected = Object.values(data).every((v) => Object.keys(v).length === 0);\r\n  const somethingToSelect = Object.values(customData).some(\r\n    (v) => Object.keys(v).length !== 0\r\n  );\r\n\r\n  const exportCustomData = () => {\r\n    try {\r\n      const exportString = JSON.stringify(data);\r\n      copyToClipboard(exportString);\r\n      dispatch(showFeedback('Custom data copied to clipboard!', 'success'));\r\n      handleClose();\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not export the custom data!', 'error'));\r\n    }\r\n  };\r\n\r\n  const groupProps = { data: data, setData: setData, customData: customData };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Export custom data</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl>\r\n          {somethingToSelect && (\r\n            <Box mb={1}>\r\n              <ButtonGroup size=\"small\" color=\"primary\" variant=\"text\">\r\n                <Button onClick={selectAll}>Select all</Button>\r\n                <Button onClick={selectNone}>Select none</Button>\r\n              </ButtonGroup>\r\n            </Box>\r\n          )}\r\n          <DataGroup label=\"Units\" type=\"unitData\" {...groupProps} />\r\n          <DataGroup label=\"Rules\" type=\"rulesData\" {...groupProps} />\r\n          <DataGroup\r\n            label=\"Fantastical Rules\"\r\n            type=\"fantasticalRulesData\"\r\n            {...groupProps}\r\n          />\r\n          <DataGroup label=\"Spells\" type=\"spellData\" {...groupProps} />\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={exportCustomData} disabled={nothingSelected} color=\"primary\">\r\n          Export\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExportCustomData;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\r\n * Must be used as the last child of ListItem to function properly.\r\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component, normally an `IconButton` or selection control.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import {\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport useOpen from 'hooks/useOpen';\r\nimport React, { useState } from 'react';\r\nimport { CustomDataElement } from 'store/types';\r\n\r\nexport interface CustomFormProps<T extends CustomDataElement> {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  initialState: T;\r\n  changeState: React.Dispatch<React.SetStateAction<T>>;\r\n  handleAction: () => void;\r\n  validateName: () => boolean;\r\n}\r\n\r\nexport interface CustomizeListProps<T extends CustomDataElement> {\r\n  data: { [name: string]: T };\r\n  CustomForm: React.FC<CustomFormProps<T>>;\r\n  emptyState: T;\r\n  removeFunc: (name: string) => void;\r\n  addFunc: (newState: T) => void;\r\n}\r\n\r\nfunction CustomizeList<T extends CustomDataElement>(props: CustomizeListProps<T>) {\r\n  const { data, CustomForm, emptyState, removeFunc, addFunc } = props;\r\n  const { open, handleOpen, handleClose } = useOpen(false);\r\n  const [state, setstate] = useState(emptyState);\r\n  const [originalName, setOriginalName] = useState('');\r\n\r\n  const validateName = (): boolean =>\r\n    state.name !== '' &&\r\n    Object.keys(data).every((name) => name === originalName || name !== state.name);\r\n\r\n  const handleAction = () => {\r\n    if (state.name !== originalName) {\r\n      removeFunc(originalName);\r\n    }\r\n    if (validateName()) {\r\n      addFunc(state);\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {Object.keys(data).map((name) => (\r\n        <ListItem id={name} key={name}>\r\n          <ListItemIcon>\r\n            <IconButton\r\n              aria-label=\"Edit\"\r\n              onClick={() => {\r\n                setstate(data[name]);\r\n                setOriginalName(name);\r\n                handleOpen();\r\n              }}\r\n            >\r\n              <EditIcon color=\"primary\" />\r\n            </IconButton>\r\n          </ListItemIcon>\r\n          <ListItemText>{name}</ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"Delete\"\r\n              onClick={() => removeFunc(name)}\r\n            >\r\n              <DeleteForeverIcon color=\"action\" />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      ))}\r\n      <ListItem id=\"add_fr\" key=\"add_fr\">\r\n        <Button\r\n          aria-label=\"Add\"\r\n          startIcon={<AddCircleIcon color=\"secondary\" />}\r\n          onClick={() => {\r\n            setstate(emptyState);\r\n            setOriginalName('');\r\n            handleOpen();\r\n          }}\r\n        >\r\n          Add new\r\n        </Button>\r\n      </ListItem>\r\n      <CustomForm\r\n        open={open}\r\n        handleClose={handleClose}\r\n        handleAction={handleAction}\r\n        initialState={state}\r\n        changeState={setstate}\r\n        validateName={validateName}\r\n      />\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default CustomizeList;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\nimport { CustomDataElement } from 'store/types';\r\nimport CustomizeList, { CustomizeListProps } from './CustomizeList';\r\n\r\ninterface CustomizePanelProps<T extends CustomDataElement>\r\n  extends CustomizeListProps<T> {\r\n  name: string;\r\n  id: string;\r\n  expanded: string;\r\n  handleChange: (\r\n    name: string\r\n  ) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => void;\r\n}\r\n\r\nfunction CustomizePanel<T extends CustomDataElement>(props: CustomizePanelProps<T>) {\r\n  const {\r\n    name,\r\n    id,\r\n    expanded,\r\n    handleChange,\r\n    data,\r\n    CustomForm,\r\n    emptyState,\r\n    removeFunc,\r\n    addFunc,\r\n  } = props;\r\n\r\n  return (\r\n    <Accordion expanded={expanded === name} onChange={handleChange(name)}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls={id + '-content'}\r\n        id={id + '-header'}\r\n      >\r\n        <Typography>Manage {name}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <CustomizeList<T>\r\n          data={data}\r\n          CustomForm={CustomForm}\r\n          emptyState={emptyState}\r\n          removeFunc={removeFunc}\r\n          addFunc={addFunc}\r\n        />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default CustomizePanel;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUnitNames } from 'store/dataSlice';\r\nimport { FantasticalRule, RootState } from 'store/types';\r\nimport range from 'utils/range';\r\nimport { CustomFormProps } from './CustomizeList';\r\n\r\nfunction FantasticalRulesForm(props: CustomFormProps<FantasticalRule>) {\r\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\r\n    props;\r\n  const rule = initialState;\r\n  const units = useSelector((state: RootState) => selectUnitNames(state));\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Fantastical Rule</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={rule.name}\r\n          onChange={(e) => changeState({ ...rule, name: e.target.value })}\r\n          error={!validateName()}\r\n          helperText=\"You have to choose a unique name!\"\r\n        />\r\n        <TextField\r\n          label=\"Points\"\r\n          margin=\"normal\"\r\n          type=\"number\"\r\n          select\r\n          SelectProps={{\r\n            value: rule.points,\r\n            onChange: (e) => changeState({ ...rule, points: e.target.value as number }),\r\n          }}\r\n        >\r\n          {range(-4, 6).map((value) => (\r\n            <MenuItem key={value} value={value}>\r\n              {value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Description\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          multiline\r\n          value={rule.description}\r\n          onChange={(e) => changeState({ ...rule, description: e.target.value })}\r\n        />\r\n        <TextField\r\n          label=\"Exclude&nbsp;Units\"\r\n          margin=\"normal\"\r\n          select\r\n          SelectProps={{\r\n            multiple: true,\r\n            value: rule.exclude_units,\r\n            onChange: (e) =>\r\n              changeState({ ...rule, exclude_units: e.target.value as string[] }),\r\n          }}\r\n        >\r\n          {units.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default FantasticalRulesForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { addFantasticalRule, removeFantasticalRule } from 'store/dataSlice';\r\nimport { AppDispatch, FantasticalRule, RootState } from 'store/types';\r\nimport { PanelProps } from './CustomizeMenu';\r\nimport CustomizePanel from './CustomizePanel';\r\nimport FantasticalRulesForm from './FantasticalRulesForm';\r\n\r\nfunction FantasticalRulesPanel(props: PanelProps) {\r\n  const { expanded, handleChange } = props;\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const customData = useSelector(\r\n    (state: RootState) => state.data.customData.fantasticalRulesData\r\n  );\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n\r\n  const removeFunc = (name: string) => {\r\n    if (Object.values(units).some((unit) => unit.fantasticalRules.includes(name))) {\r\n      dispatch(showFeedback(`You can't delete a rule currently in use!`, 'error'));\r\n    } else dispatch(removeFantasticalRule(name));\r\n  };\r\n  const addFunc = (rule: FantasticalRule) => dispatch(addFantasticalRule(rule));\r\n\r\n  return (\r\n    <CustomizePanel<FantasticalRule>\r\n      name=\"fantastical Rules\"\r\n      id=\"fantastical-rules\"\r\n      expanded={expanded}\r\n      handleChange={handleChange}\r\n      data={customData}\r\n      CustomForm={FantasticalRulesForm}\r\n      emptyState={{\r\n        name: 'Name',\r\n        points: 0,\r\n        exclude_units: ['Ravenous Hordes'],\r\n        description: 'Description',\r\n      }}\r\n      removeFunc={removeFunc}\r\n      addFunc={addFunc}\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.memo(FantasticalRulesPanel);\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { importCustomData } from 'store/dataSlice';\r\n\r\nconst ImportCustomData: React.FC<{ open: boolean; handleClose: () => void }> = ({\r\n  open,\r\n  handleClose,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const handleImport = () => {\r\n    if (!value) {\r\n      dispatch(showFeedback('You have to input some data!', 'error'));\r\n      return;\r\n    }\r\n    try {\r\n      const data = JSON.parse(value);\r\n      dispatch(importCustomData(data));\r\n      dispatch(showFeedback('Custom data imported!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not import the custom data!', 'error'));\r\n    }\r\n  };\r\n\r\n  const handleKeyPressed = (key: string) => {\r\n    if (key === 'Enter') {\r\n      handleAction();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n\r\n  const handleAction = () => {\r\n    handleImport();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Enter the import string</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"normal\"\r\n          label=\"Import String\"\r\n          type=\"text\"\r\n          fullWidth\r\n          onChange={(e) => setValue(e.target.value)}\r\n          onKeyPress={(e) => handleKeyPressed(e.key)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAction} disabled={!value} color=\"primary\">\r\n          Import\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImportCustomData);\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Rule } from 'store/types';\r\nimport { CustomFormProps } from './CustomizeList';\r\n\r\nfunction RulesForm(props: CustomFormProps<Rule>) {\r\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\r\n    props;\r\n  const rule = initialState;\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Rule</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={rule.name}\r\n          onChange={(e) => changeState({ ...rule, name: e.target.value })}\r\n          error={!validateName()}\r\n          helperText=\"You have to choose a unique name!\"\r\n        />\r\n        <TextField\r\n          label=\"Description\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          multiline\r\n          value={rule.description}\r\n          onChange={(e) => changeState({ ...rule, description: e.target.value })}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default RulesForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { addRule, removeRule } from 'store/dataSlice';\r\nimport { AppDispatch, RootState, Rule } from 'store/types';\r\nimport { PanelProps } from './CustomizeMenu';\r\nimport CustomizePanel from './CustomizePanel';\r\nimport RulesForm from './RulesForm';\r\n\r\nfunction RulesPanel(props: PanelProps) {\r\n  const { expanded, handleChange } = props;\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const customData = useSelector((state: RootState) => state.data.customData);\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n\r\n  const removeFunc = (name: string) => {\r\n    if (\r\n      Object.values(units).some((unit) => unit.rules.includes(name)) ||\r\n      Object.values(customData.unitData).some((unit) => unit.rules.includes(name))\r\n    ) {\r\n      dispatch(showFeedback(`You can't delete a rule currently in use!`, 'error'));\r\n    } else dispatch(removeRule(name));\r\n  };\r\n  const addFunc = (rule: Rule) => dispatch(addRule(rule));\r\n\r\n  return (\r\n    <CustomizePanel<Rule>\r\n      name=\"Rules\"\r\n      id=\"rules\"\r\n      expanded={expanded}\r\n      handleChange={handleChange}\r\n      data={customData.rulesData}\r\n      CustomForm={RulesForm}\r\n      emptyState={{\r\n        name: 'Name',\r\n        description: 'Description',\r\n      }}\r\n      removeFunc={removeFunc}\r\n      addFunc={addFunc}\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.memo(RulesPanel);\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Spell } from 'store/types';\r\nimport range from 'utils/range';\r\nimport { CustomFormProps } from './CustomizeList';\r\n\r\nfunction SpellsForm(props: CustomFormProps<Spell>) {\r\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\r\n    props;\r\n  const spell = initialState;\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Spell</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={spell.name}\r\n          onChange={(e) => changeState({ ...spell, name: e.target.value })}\r\n          error={!validateName()}\r\n          helperText=\"You have to choose a unique name!\"\r\n        />\r\n        <TextField\r\n          label=\"Difficulty\"\r\n          type=\"number\"\r\n          margin=\"normal\"\r\n          select\r\n          SelectProps={{\r\n            value: spell.difficulty,\r\n            onChange: (e) =>\r\n              changeState({ ...spell, difficulty: e.target.value as number }),\r\n          }}\r\n        >\r\n          {range(2, 12).map((value) => (\r\n            <MenuItem key={value} value={value}>\r\n              {value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Target\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={spell.target}\r\n          onChange={(e) => changeState({ ...spell, target: e.target.value })}\r\n        />\r\n        <TextField\r\n          label=\"Duration\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={spell.duration}\r\n          onChange={(e) => changeState({ ...spell, duration: e.target.value })}\r\n        />\r\n        <TextField\r\n          label=\"Effekt\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          multiline\r\n          value={spell.effect}\r\n          onChange={(e) => changeState({ ...spell, effect: e.target.value })}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SpellsForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addSpell, removeSpell } from 'store/dataSlice';\r\nimport { AppDispatch, RootState, Spell } from 'store/types';\r\nimport { PanelProps } from './CustomizeMenu';\r\nimport CustomizePanel from './CustomizePanel';\r\nimport SpellsForm from './SpellsForm';\r\n\r\nfunction SpellsPanel(props: PanelProps) {\r\n  const { expanded, handleChange } = props;\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const customData = useSelector((state: RootState) => state.data.customData.spellData);\r\n\r\n  const removeFunc = (name: string) => dispatch(removeSpell(name));\r\n  const addFunc = (spell: Spell) => dispatch(addSpell(spell));\r\n\r\n  return (\r\n    <CustomizePanel<Spell>\r\n      name=\"Spells\"\r\n      id=\"spells\"\r\n      expanded={expanded}\r\n      handleChange={handleChange}\r\n      data={customData}\r\n      CustomForm={SpellsForm}\r\n      emptyState={{\r\n        name: 'Name',\r\n        difficulty: 7,\r\n        target: 'Target',\r\n        duration: 'Duration',\r\n        effect: 'Effekt',\r\n      }}\r\n      removeFunc={removeFunc}\r\n      addFunc={addFunc}\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.memo(SpellsPanel);\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  InputLabel,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport produce from 'immer';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { DataUnit, RootState, UnitOption, UnitStats } from 'store/types';\r\nimport range from 'utils/range';\r\nimport statData from 'utils/statData';\r\n\r\nconst OptionsForm: React.FC<{\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  name: string;\r\n  option: UnitOption;\r\n  unit: DataUnit;\r\n  changeState: (value: React.SetStateAction<DataUnit>) => void;\r\n  changeName: (name: string) => void;\r\n  changeOption: (option: UnitOption) => void;\r\n}> = ({\r\n  open,\r\n  handleClose,\r\n  name,\r\n  option,\r\n  unit,\r\n  changeState,\r\n  changeName,\r\n  changeOption,\r\n}) => {\r\n  const specialRules = useSelector((state: RootState) => state.data.rulesData);\r\n  const [anchorSetStat, setAnchorSetStat] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClickSetStat = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorSetStat(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSetStat = () => {\r\n    setAnchorSetStat(null);\r\n  };\r\n\r\n  const onClickSetStat = (name: keyof UnitStats) => () => {\r\n    changeOption({\r\n      ...option,\r\n      setStats: {\r\n        ...option.setStats,\r\n        [name]: 4,\r\n      },\r\n    });\r\n    handleCloseSetStat();\r\n  };\r\n\r\n  const handleAction = () => {\r\n    changeState({\r\n      ...unit,\r\n      options: { ...unit.options, [name]: option },\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Option</DialogTitle>\r\n      <DialogContent>\r\n        {/* ---------------------------------- Name --------------------------------- */}\r\n        <TextField\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={name}\r\n          onChange={(e) => changeName(e.target.value)}\r\n          error={name === ''}\r\n          helperText=\"You have to choose a name!\"\r\n        />\r\n        {/* --------------------------------- Points -------------------------------- */}\r\n        <TextField\r\n          label=\"Points\"\r\n          margin=\"normal\"\r\n          type=\"number\"\r\n          select\r\n          SelectProps={{\r\n            value: option.points,\r\n            onChange: (e) =>\r\n              changeOption({\r\n                ...option,\r\n                points: e.target.value as number,\r\n              }),\r\n          }}\r\n        >\r\n          {range(-4, 6).map((value) => (\r\n            <MenuItem key={value} value={value}>\r\n              {value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {/* -------------------------------- Summary -------------------------------- */}\r\n        <TextField\r\n          label=\"Summary\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          multiline\r\n          value={option.summary || ''}\r\n          onChange={(e) =>\r\n            changeOption({\r\n              ...option,\r\n              summary: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        {/* ------------------------------ Remove Rules ----------------------------- */}\r\n        <InputLabel id=\"remove-rules-label\" style={{ marginTop: 15 }}>\r\n          Remove Rules\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          id=\"remove-rules\"\r\n          labelId=\"remove-rules-label\"\r\n          value={option.remove || []}\r\n          onChange={(e) =>\r\n            changeOption({ ...option, remove: e.target.value as string[] })\r\n          }\r\n        >\r\n          {unit.rules.map((rule) => (\r\n            <MenuItem key={rule} value={rule}>\r\n              {rule}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        {/* ------------------------------- Add Rules ------------------------------- */}\r\n        <InputLabel id=\"add-rules-label\" style={{ marginTop: 15 }}>\r\n          Add Rules\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          id=\"add-rules\"\r\n          labelId=\"add-rules-label\"\r\n          value={option.add || []}\r\n          onChange={(e) => changeOption({ ...option, add: e.target.value as string[] })}\r\n        >\r\n          {Object.keys(specialRules).map((rule) => (\r\n            <MenuItem key={rule} value={rule}>\r\n              {rule}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        {/* ------------------------------- Set Stats ------------------------------- */}\r\n        <InputLabel id=\"options-label\" style={{ marginTop: 15 }}>\r\n          Set Stats\r\n        </InputLabel>\r\n        <List>\r\n          {option.setStats &&\r\n            Object.keys(option.setStats).map((name) => (\r\n              <ListItem id={name} key={name}>\r\n                <ListItemText>{statData[name].name}</ListItemText>\r\n                <Select\r\n                  value={option.setStats ? option.setStats[name as keyof UnitStats] : 0}\r\n                  type=\"number\"\r\n                  onChange={(e) =>\r\n                    changeOption({\r\n                      ...option,\r\n                      setStats: {\r\n                        ...option.setStats,\r\n                        [name]: e.target.value as number,\r\n                      },\r\n                    })\r\n                  }\r\n                >\r\n                  {statData[name].range.map((value) => (\r\n                    <MenuItem key={value} value={value}>\r\n                      {value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    aria-label=\"Delete\"\r\n                    onClick={() =>\r\n                      changeOption(\r\n                        produce(option, (draft) => {\r\n                          if (draft.setStats)\r\n                            delete draft.setStats[name as keyof UnitStats];\r\n                        })\r\n                      )\r\n                    }\r\n                  >\r\n                    <DeleteForeverIcon color=\"action\" />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          <ListItem id=\"add_opt\" key=\"add_opt\">\r\n            <Button onClick={handleClickSetStat} startIcon={<AddCircleIcon />}>\r\n              Add Stat\r\n            </Button>\r\n            <Menu\r\n              id=\"add-stat-menu\"\r\n              anchorEl={anchorSetStat}\r\n              keepMounted\r\n              open={Boolean(anchorSetStat)}\r\n              onClose={handleCloseSetStat}\r\n            >\r\n              {Object.keys(statData)\r\n                .filter((k) => !Object.keys(option.setStats || {}).includes(k))\r\n                .map((name) => (\r\n                  <MenuItem\r\n                    onClick={onClickSetStat(name as keyof UnitStats)}\r\n                    key={name}\r\n                  >\r\n                    {statData[name].name}\r\n                  </MenuItem>\r\n                ))}\r\n            </Menu>\r\n          </ListItem>\r\n        </List>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAction} color=\"primary\" disabled={name === ''}>\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OptionsForm;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  IconButton,\r\n  InputLabel,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport produce from 'immer';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { DataUnit, RootState, UnitOption, UnitStats } from 'store/types';\r\nimport range from 'utils/range';\r\nimport statData from 'utils/statData';\r\nimport { CustomFormProps } from './CustomizeList';\r\nimport OptionsForm from './OptionsForm';\r\n\r\nconst emptyOption = {\r\n  points: 0,\r\n  summary: '',\r\n};\r\n\r\nconst SelectStat: React.FC<{\r\n  stat: keyof UnitStats;\r\n  unit: DataUnit;\r\n  changeState: React.Dispatch<React.SetStateAction<DataUnit>>;\r\n  isPhone: boolean;\r\n}> = ({ stat, unit, changeState, isPhone }) => {\r\n  const data = statData[stat];\r\n\r\n  return (\r\n    <>\r\n      <TableCell>{isPhone ? data.shortName : data.name}</TableCell>\r\n      <TableCell>\r\n        <Select\r\n          value={unit.stats[stat]}\r\n          type=\"number\"\r\n          onChange={(e) =>\r\n            changeState({\r\n              ...unit,\r\n              stats: { ...unit.stats, [stat]: e.target.value as number },\r\n            })\r\n          }\r\n        >\r\n          {data.range.map((value) => (\r\n            <MenuItem key={value} value={value}>\r\n              {value}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </TableCell>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction UnitsForm(props: CustomFormProps<DataUnit>) {\r\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\r\n    props;\r\n  const theme = useTheme();\r\n  const isPhone = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const unit = initialState;\r\n  const rules = useSelector((state: RootState) => state.data.rulesData);\r\n\r\n  const [optionsOpen, setOptionsOpen] = useState(false);\r\n  const [currentOption, setCurrentOption] = useState<UnitOption>({ ...emptyOption });\r\n  const [currentOptionName, setCurrentOptionName] = useState('Name');\r\n  const selectProps = { unit: unit, changeState: changeState, isPhone: isPhone };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>Unit</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl>\r\n          {/* --------------------------------- Name -------------------------------- */}\r\n          <TextField\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            value={unit.name}\r\n            onChange={(e) => changeState({ ...unit, name: e.target.value })}\r\n            error={!validateName()}\r\n            helperText=\"You have to choose a unique name!\"\r\n          />\r\n          {/* -------------------------------- Points ------------------------------- */}\r\n          <TextField\r\n            label=\"Points\"\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            select\r\n            SelectProps={{\r\n              value: unit.points,\r\n              onChange: (e) =>\r\n                changeState({\r\n                  ...unit,\r\n                  points: e.target.value as number,\r\n                }),\r\n            }}\r\n          >\r\n            {range(1, 10).map((value) => (\r\n              <MenuItem key={value} value={value}>\r\n                {value}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          {/* --------------------------- Strength Points --------------------------- */}\r\n          <TextField\r\n            label=\"Strength&nbsp;Points\"\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            select\r\n            SelectProps={{\r\n              value: unit.stats.strengthPoints,\r\n              onChange: (e) =>\r\n                changeState({\r\n                  ...unit,\r\n                  stats: { ...unit.stats, strengthPoints: e.target.value as number },\r\n                }),\r\n            }}\r\n          >\r\n            {[6, 12].map((value) => (\r\n              <MenuItem key={value} value={value}>\r\n                {value}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </FormControl>\r\n        {/* --------------------------------- Stats --------------------------------- */}\r\n        <InputLabel id=\"stats-label\" style={{ marginTop: 15 }}>\r\n          Stats\r\n        </InputLabel>\r\n        <TableContainer style={{ marginBottom: 20 }}>\r\n          <Table size=\"small\">\r\n            <TableBody>\r\n              <TableRow>\r\n                <SelectStat stat=\"attack\" {...selectProps} />\r\n                <SelectStat stat=\"attackValue\" {...selectProps} />\r\n              </TableRow>\r\n              <TableRow>\r\n                <SelectStat stat=\"move\" {...selectProps} />\r\n                <SelectStat stat=\"defenceValue\" {...selectProps} />\r\n              </TableRow>\r\n              <TableRow>\r\n                <SelectStat stat=\"shoot\" {...selectProps} />\r\n                <SelectStat stat=\"shootValue\" {...selectProps} />\r\n              </TableRow>\r\n              <TableRow>\r\n                <SelectStat stat=\"courage\" {...selectProps} />\r\n                <SelectStat stat=\"shootRange\" {...selectProps} />\r\n              </TableRow>\r\n              <TableRow>\r\n                <SelectStat stat=\"armour\" {...selectProps} />\r\n                <SelectStat stat=\"movement\" {...selectProps} />\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {/* --------------------------------- Rules --------------------------------- */}\r\n        <InputLabel id=\"rules-label\" style={{ marginTop: 15 }}>\r\n          Rules\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          id=\"rules\"\r\n          labelId=\"rules-label\"\r\n          value={unit.rules}\r\n          onChange={(e) => changeState({ ...unit, rules: e.target.value as string[] })}\r\n        >\r\n          {Object.keys(rules).map((rule) => (\r\n            <MenuItem key={rule} value={rule}>\r\n              {rule}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        {/* -------------------------------- Options -------------------------------- */}\r\n        <InputLabel id=\"options-label\" style={{ marginTop: 15 }}>\r\n          Options\r\n        </InputLabel>\r\n        <List>\r\n          {Object.keys(unit.options).map((name) => (\r\n            <ListItem id={name} key={name}>\r\n              <ListItemIcon>\r\n                <IconButton\r\n                  aria-label=\"Edit\"\r\n                  onClick={() => {\r\n                    setCurrentOption(unit.options[name]);\r\n                    setCurrentOptionName(name);\r\n                    setOptionsOpen(true);\r\n                  }}\r\n                >\r\n                  <EditIcon color=\"primary\" />\r\n                </IconButton>\r\n              </ListItemIcon>\r\n              <ListItemText>{name}</ListItemText>\r\n              <ListItemSecondaryAction>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  aria-label=\"Delete\"\r\n                  onClick={() =>\r\n                    changeState(\r\n                      produce(unit, (draft) => {\r\n                        delete draft.options[name];\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <DeleteForeverIcon color=\"action\" />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n          <ListItem id=\"add_fr\" key=\"add_fr\">\r\n            <Button\r\n              aria-label=\"Add option\"\r\n              onClick={() => {\r\n                setCurrentOption(emptyOption);\r\n                setCurrentOptionName('Name');\r\n                setOptionsOpen(true);\r\n              }}\r\n              startIcon={<AddCircleIcon />}\r\n            >\r\n              Add option\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n        <OptionsForm\r\n          open={optionsOpen}\r\n          handleClose={() => setOptionsOpen(false)}\r\n          name={currentOptionName}\r\n          option={currentOption}\r\n          unit={unit}\r\n          changeOption={setCurrentOption}\r\n          changeName={setCurrentOptionName}\r\n          changeState={changeState}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\r\n          Okay\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default UnitsForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { addUnit, removeUnit } from 'store/dataSlice';\r\nimport { AppDispatch, DataUnit, RootState } from 'store/types';\r\nimport { PanelProps } from './CustomizeMenu';\r\nimport CustomizePanel from './CustomizePanel';\r\nimport UnitsForm from './UnitsForm';\r\n\r\nfunction UnitsPanel(props: PanelProps) {\r\n  const { expanded, handleChange } = props;\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const customData = useSelector((state: RootState) => state.data.customData.unitData);\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n\r\n  const removeFunc = (name: string) => {\r\n    if (Object.values(units).some((unit) => unit.name === name)) {\r\n      dispatch(showFeedback(`You can't delete a unit currently in use!`, 'error'));\r\n    } else dispatch(removeUnit(name));\r\n  };\r\n  const addFunc = (unit: DataUnit) => dispatch(addUnit(unit));\r\n\r\n  return (\r\n    <CustomizePanel<DataUnit>\r\n      name=\"Units\"\r\n      id=\"units\"\r\n      expanded={expanded}\r\n      handleChange={handleChange}\r\n      data={customData}\r\n      CustomForm={UnitsForm}\r\n      emptyState={{\r\n        name: 'Name',\r\n        type: 'foot',\r\n        points: 4,\r\n        stats: {\r\n          attack: 5,\r\n          move: 6,\r\n          shoot: 0,\r\n          courage: 4,\r\n          armour: 0,\r\n          attackValue: 5,\r\n          defenceValue: 5,\r\n          shootValue: 0,\r\n          shootRange: 0,\r\n          movement: 6,\r\n          strengthPoints: 12,\r\n        },\r\n        rules: [],\r\n        options: {},\r\n        fantasticalRules: [],\r\n      }}\r\n      removeFunc={removeFunc}\r\n      addFunc={addFunc}\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.memo(UnitsPanel);\r\n","import { Box, Button, ButtonGroup, DialogTitle } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport React, { useCallback, useState } from 'react';\r\nimport ExportCustomData from './ExportCustomData';\r\nimport FantasticalRulesPanel from './FantasticalRulesPanel';\r\nimport ImportCustomData from './ImportCustomData';\r\nimport RulesPanel from './RulesPanel';\r\nimport SpellsPanel from './SpellsPanel';\r\nimport UnitsPanel from './UnitsPanel';\r\n\r\nconst CustomizeMenuContent = () => {\r\n  const [expanded, setExpanded] = useState<string>('');\r\n  const [openImExport, setOpenImExport] = useState<string>('');\r\n\r\n  const handleChange = useCallback(\r\n    (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\r\n      setExpanded(isExpanded ? panel : '');\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleImExportClose = useCallback(() => setOpenImExport(''), []);\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>Customize</DialogTitle>\r\n      <UnitsPanel expanded={expanded} handleChange={handleChange} />\r\n      <FantasticalRulesPanel expanded={expanded} handleChange={handleChange} />\r\n      <RulesPanel expanded={expanded} handleChange={handleChange} />\r\n      <SpellsPanel expanded={expanded} handleChange={handleChange} />\r\n      <Box m={2} mx=\"auto\">\r\n        <ButtonGroup color=\"primary\" variant=\"outlined\">\r\n          <Button\r\n            aria-label=\"Import custom data\"\r\n            startIcon={<GetAppIcon />}\r\n            onClick={() => setOpenImExport('import')}\r\n          >\r\n            Import\r\n          </Button>\r\n          <Button\r\n            aria-label=\"Export custom data\"\r\n            startIcon={<ShareIcon />}\r\n            onClick={() => setOpenImExport('export')}\r\n          >\r\n            Export\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n      <ImportCustomData\r\n        open={openImExport === 'import'}\r\n        handleClose={handleImExportClose}\r\n      />\r\n      <ExportCustomData\r\n        open={openImExport === 'export'}\r\n        handleClose={handleImExportClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CustomizeMenuContent);\r\n"],"sourceRoot":""}