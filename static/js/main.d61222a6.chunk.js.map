{"version":3,"sources":["utils/copyToClipboard.ts","store/appStateSlice.tsx","store/rosterSlice.tsx","store/uiSlice.tsx","store/store.tsx","hooks/useUserTheme.tsx","components/ListDialog.tsx","components/ListDialogMenu.tsx","components/Unit/buildUnit.tsx","components/ExpandIcon.tsx","components/TextInputDialog.tsx","components/Unit/Actions.tsx","components/Unit/FantasticalRules.tsx","components/Unit/Options.tsx","components/Unit/SpecialRules.tsx","components/Unit/StatBlock.tsx","components/Unit/UnitSelector.tsx","components/Unit/Unit.tsx","components/Roster.tsx","components/LoadList.tsx","components/SaveList.tsx","components/About.tsx","components/Backup.tsx","components/DarkMode.tsx","components/DeleteList.tsx","components/ExportList.tsx","components/ImportList.tsx","components/Restore.tsx","components/SideMenu.tsx","components/AppBar/ToggleViewMode.tsx","components/AppBar/TotalPoints.tsx","components/AppBar/AppBar.tsx","components/Customize/CustomizeMenu.tsx","components/ListName.tsx","components/RulesSummary.tsx","components/ShowFeedback.tsx","components/SpellTable.tsx","components/Statistics/Statistics.tsx","components/Validation.tsx","components/App.tsx","serviceWorker.js","index.tsx","store/persistantStorage.tsx","store/dataSlice.tsx","hooks/useOpen.tsx","utils/range.ts","utils/statData.ts"],"names":["copyToClipboard","text","navigator","clipboard","writeText","appStateSlice","createSlice","name","initialState","feedback","open","message","severity","inputUpdate","autoDarkMode","customizeMode","reducers","toggleForceInputUpdate","state","closeFeedback","showFeedback","reducer","action","payload","Severity","prepare","setAutoDarkMode","setCustomizeMode","actions","rosterInitialState","nextID","units","rosterSlice","newRoster","setRoster","_","updateRoster","_addUnit","data","unit","index","unitData","Unit","options","fantasticalRules","push","splice","_setUnit","id","updateUnit","newAttributes","removeUnit","renameUnit","customName","moveUnit","nextIndex","length","direction","addUnit","dispatch","getState","getTotalPoints","createSelector","Object","values","reduce","acc","points","getSpecialRules","rulesData","selectAllRules","store","rules","rule","description","sort","filter","ary","uiSlice","localStorage","getItem","JSON","parse","error","console","log","viewMode","editMode","darkMode","validationExpanded","rulesSummaryExpanded","spellsExpanded","statisticsExpanded","getInitialState","_setUI","_toggleUIOption","option","_updateUI","toggleUIOption","ui","uiStore","setItem","catch","err","updateUI","rootReducer","combineReducers","uiReducer","roster","rosterReducer","appState","appStateReducer","dataReducer","configureStore","useUserTheme","useDispatch","prefersDarkMode","useMediaQuery","hasDarkMode","useSelector","undefined","React","useMemo","createTheme","palette","type","ListDialog","anchor","title","onClose","onOpen","useOpen","handleOpen","handleClose","opts","map","o","Box","display","alignItems","onClick","Dialog","DialogTitle","List","icon","ListItem","button","handleOnClick","key","ListItemIcon","ListDialogMenu","showText","Tooltip","IconButton","color","aria-label","Typography","buildUnit","unitToBuild","fantasticalRulesData","opt","setStats","entries","val","stats","add","remove","fantasticRule","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","memo","expanded","classes","className","clsx","TextInputDialog","label","defaultValue","cancelText","okayText","margin","useState","value","setValue","DialogContent","TextField","autoFocus","fullWidth","onChange","e","target","onKeyPress","DialogActions","Button","disabled","Actions","style","position","bottom","width","paddingRight","height","flexGrow","FantasticalRules","keys","exclude_units","includes","FormLabel","component","FormControlLabel","control","Checkbox","checked","v","FormControl","marginTop","Select","IconComponent","multiple","input","Input","renderValue","MenuItem","indexOf","Options","optionsData","handleChange","newUnit","FormGroup","summary","SpecialRules","Container","variant","r","StatCells","stat","isPhone","overrideValue","statData","suffix","TableCell","shortName","StatBlock","useTheme","cellProps","breakpoints","down","shootingValue","shoot","shootValue","shootRange","TableContainer","marginBottom","Table","size","TableBody","TableRow","UnitSelector","Chip","unitNames","selectUnitNames","setExpanded","Card","maxWidth","CardHeader","setUnit","Collapse","in","timeout","unmountOnExit","CardContent","packRoster","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","savedRosters","setSavedRosters","loadList","a","rosterStore","then","saveRoster","finally","textAlign","href","clickable","customData","backup","backupState","rosters","iterate","file","Blob","stringify","date","Date","offsetMs","getTimezoneOffset","getTime","dateText","toISOString","slice","replace","saveAs","handleClick","removeList","removeItem","armyCost","funcs","join","exportFunc","i","list","fileReader","fileDialog","useRef","restore","content","result","hasOwnProperty","Promise","all","importCustomData","openFileDialog","current","click","ref","accept","event","FileReader","onloadend","files","readAsText","setOpen","showCustomizeMenu","toggleDrawer","useCallback","Drawer","Divider","DarkMode","ToggleViewMode","Icon","optionState","notClicked","fontSize","TotalPoints","Hidden","smDown","mdUp","AppBar","Toolbar","xsDown","VisibilityIcon","EditIcon","CustomizeMenuContent","lazy","fallback","CircularProgress","root","backgroundColor","background","default","primary","border","ListName","rosterName","toString","RulesSummary","specialRules","Accordion","AccordionSummary","expandIcon","AccordionDetails","ListItemText","secondary","ShowFeedback","reason","Snackbar","autoHideDuration","Alert","elevation","SpellTable","spellData","Array","spellcasterInRoster","minWidth","TableHead","align","spell","scope","difficulty","effect","newOpen","handleSpellClick","dense","paddingLeft","PointDistributionChart","UnitDistributionChart","Statistics","totalPoints","chipSize","optionPoints","accumulator","fantasticalPoints","COLORS","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","colors","main","contrastText","details","light","Validation","warnings","App","useEffect","hydrateData","ThemeProvider","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","localforage","createInstance","driver","LOCALSTORAGE","storeName","dataStore","getEmptyCustomData","initialData","createAsyncThunk","dataSlice","_setData","extraReducers","builder","addCase","fulfilled","produce","draft","forEach","targetState","elem","addAndDispatch","removeAndDispatch","addFantasticalRule","removeFantasticalRule","addSpell","removeSpell","addRule","removeRule","range","start","end","fill","x","y","attack","attackValue","move","defenceValue","courage","armour","movement","strengthPoints"],"mappings":"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","file":"static/js/main.d61222a6.chunk.js","sourcesContent":["const copyToClipboard = (text: string) => navigator.clipboard.writeText(text);\r\n\r\nexport default copyToClipboard;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppState, Severity } from './types';\r\n\r\nconst appStateSlice = createSlice({\r\n  name: 'appState',\r\n  initialState: {\r\n    feedback: {\r\n      open: false,\r\n      message: '',\r\n      severity: 'info',\r\n    },\r\n    inputUpdate: false,\r\n    autoDarkMode: false,\r\n    customizeMode: false,\r\n  } as AppState,\r\n\r\n  reducers: {\r\n    toggleForceInputUpdate: (state) => {\r\n      state.inputUpdate = !state.inputUpdate;\r\n    },\r\n    closeFeedback: (state) => {\r\n      state.feedback.open = false;\r\n    },\r\n    showFeedback: {\r\n      reducer: (state, action: PayloadAction<[string, Severity]>) => {\r\n        const [message, Severity] = action.payload;\r\n        state.feedback = { open: true, message: message, severity: Severity };\r\n      },\r\n      prepare: (\r\n        message: string,\r\n        severity: Severity\r\n      ): { payload: [string, Severity] } => ({\r\n        payload: [message, severity],\r\n      }),\r\n    },\r\n    setAutoDarkMode: (state, action) => {\r\n      state.autoDarkMode = action.payload;\r\n    },\r\n    setCustomizeMode: (state, action) => {\r\n      state.customizeMode = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleForceInputUpdate,\r\n  closeFeedback,\r\n  showFeedback,\r\n  setAutoDarkMode,\r\n  setCustomizeMode,\r\n} = appStateSlice.actions;\r\nexport default appStateSlice.reducer;\r\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { selectAllRules } from 'store/dataSlice';\r\nimport store from './store';\r\nimport { Data, RosterState, RosterUnits, Thunk, Unit } from './types';\r\n\r\nconst rosterInitialState: RosterState = {\r\n  name: 'New List',\r\n  nextID: 0,\r\n  units: [],\r\n};\r\n\r\nconst rosterSlice = createSlice({\r\n  name: 'roster',\r\n  initialState: rosterInitialState,\r\n  reducers: {\r\n    newRoster: () => ({ ...rosterInitialState }),\r\n    setRoster: (_, action: PayloadAction<RosterState>) => ({ ...action.payload }),\r\n    updateRoster: (state, action: PayloadAction<Partial<RosterState>>) => ({\r\n      ...state,\r\n      ...action.payload,\r\n    }),\r\n    _addUnit: (state: RosterState, action: PayloadAction<[Data, Unit?, number?]>) => {\r\n      let [data, unit, index] = action.payload;\r\n      unit = unit ? unit : { ...data.unitData.Unit, options: [], fantasticalRules: [] };\r\n      index == null ? state.units.push(unit) : state.units.splice(index + 1, 0, unit);\r\n    },\r\n    _setUnit: (state, action: PayloadAction<[Data, number, string]>) => {\r\n      const [data, id, name] = action.payload;\r\n      state.units[id] = { ...data.unitData[name], options: [], fantasticalRules: [] };\r\n    },\r\n    updateUnit: {\r\n      reducer: (state, action: PayloadAction<[number, Partial<Unit>]>) => {\r\n        const [id, newAttributes] = action.payload;\r\n        state.units[id] = { ...state.units[id], ...newAttributes };\r\n      },\r\n      prepare: (\r\n        id: number,\r\n        newAttributes: Partial<Unit>\r\n      ): { payload: [number, Partial<Unit>] } => ({ payload: [id, newAttributes] }),\r\n    },\r\n    removeUnit: (state, action: PayloadAction<number>) => {\r\n      const id = action.payload;\r\n      state.units.splice(id, 1);\r\n    },\r\n    renameUnit: {\r\n      reducer: (state, action: PayloadAction<[number, string]>) => {\r\n        const [id, name] = action.payload;\r\n        state.units[id].customName = name;\r\n      },\r\n      prepare: (id: number, name: string): { payload: [number, string] } => ({\r\n        payload: [id, name],\r\n      }),\r\n    },\r\n    moveUnit: {\r\n      reducer: (state, action: PayloadAction<[number, 'left' | 'right']>) => {\r\n        const [index, direction] = action.payload;\r\n        const nextIndex = direction === 'left' ? index - 1 : index + 1;\r\n        if (nextIndex < 0 || nextIndex >= state.units.length) return state;\r\n        [state.units[nextIndex], state.units[index]] = [\r\n          state.units[index],\r\n          state.units[nextIndex],\r\n        ];\r\n      },\r\n      prepare: (\r\n        id: number,\r\n        direction: 'left' | 'right'\r\n      ): { payload: [number, 'left' | 'right'] } => ({ payload: [id, direction] }),\r\n    },\r\n  },\r\n});\r\n\r\nconst { _addUnit, _setUnit } = rosterSlice.actions;\r\n\r\nexport const addUnit =\r\n  (unit?: Unit, index?: number): Thunk =>\r\n  (dispatch, getState) => {\r\n    const data = getState().data;\r\n    dispatch(_addUnit([data, unit, index]));\r\n  };\r\n\r\nexport const setUnit =\r\n  (id: number, name: string): Thunk =>\r\n  (dispatch, getState) => {\r\n    const data = getState().data;\r\n    dispatch(_setUnit([data, id, name]));\r\n  };\r\n\r\nconst getTotalPoints = createSelector(\r\n  (units: RosterUnits) => units,\r\n  (units) => Object.values(units).reduce((acc, unit) => acc + unit.points, 0)\r\n);\r\n\r\nconst getSpecialRules = createSelector(\r\n  (units: RosterUnits) => units,\r\n  (units) => {\r\n    const rulesData = selectAllRules(store.getState());\r\n    return Object.values(units)\r\n      .reduce(\r\n        (acc: string[], unit) =>\r\n          unit.rules.reduce(\r\n            (acc, rule) =>\r\n              rulesData[rulesData[rule].description]\r\n                ? [...acc, rulesData[rule].description]\r\n                : [...acc, rule],\r\n            acc\r\n          ),\r\n        []\r\n      )\r\n      .sort()\r\n      .filter((rule, index, ary) => !index || rule !== ary[index - 1]);\r\n  }\r\n);\r\n\r\nexport { getTotalPoints, getSpecialRules };\r\n\r\nexport const {\r\n  newRoster,\r\n  setRoster,\r\n  updateRoster,\r\n  updateUnit,\r\n  removeUnit,\r\n  renameUnit,\r\n  moveUnit,\r\n} = rosterSlice.actions;\r\n\r\nexport default rosterSlice.reducer;\r\n","import { Action, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { uiStore } from './persistantStorage';\r\nimport { UIState } from './types';\r\n\r\nconst getInitialState = () => {\r\n  try {\r\n    const initialState = localStorage.getItem('localforage/uiOptions');\r\n    if (initialState !== null) {\r\n      return JSON.parse(initialState) as UIState;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return {\r\n    viewMode: false,\r\n    editMode: false,\r\n    darkMode: null,\r\n    validationExpanded: true,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true,\r\n  };\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: getInitialState(),\r\n  reducers: {\r\n    _setUI: (_, action: PayloadAction<UIState>) => {\r\n      return { ...action.payload };\r\n    },\r\n    _toggleUIOption: (state: UIState, action: PayloadAction<keyof UIState>) => {\r\n      const option = action.payload;\r\n      state[option] = !state[option];\r\n    },\r\n    _updateUI: (state, action: PayloadAction<Partial<UIState>>) => {\r\n      return { ...state, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nconst { _setUI, _toggleUIOption, _updateUI } = uiSlice.actions;\r\n\r\ntype UIThunk = ThunkAction<void, any, unknown, Action<string>>;\r\n\r\nexport const setUI =\r\n  (newState: UIState): UIThunk =>\r\n  (dispatch) => {\r\n    uiStore.setItem('uiOptions', { ...newState }).catch((err) => console.log(err));\r\n    dispatch(_setUI(newState));\r\n  };\r\n\r\nexport const toggleUIOption =\r\n  (option: keyof UIState): UIThunk =>\r\n  (dispatch, getState) => {\r\n    const state: UIState = getState().ui;\r\n    uiStore\r\n      .setItem('uiOptions', { ...state, [option]: !state[option] })\r\n      .catch((err) => console.log(err));\r\n    dispatch(_toggleUIOption(option));\r\n  };\r\n\r\nexport const updateUI =\r\n  (options: Partial<UIState>): UIThunk =>\r\n  (dispatch, getState) => {\r\n    const state: UIState = getState().ui;\r\n    uiStore\r\n      .setItem('uiOptions', { ...state, ...options })\r\n      .catch((err) => console.log(err));\r\n    dispatch(_updateUI(options));\r\n  };\r\n\r\nexport default uiSlice.reducer;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport appStateReducer from './appStateSlice';\r\nimport dataReducer from './dataSlice';\r\nimport rosterReducer from './rosterSlice';\r\nimport uiReducer from './uiSlice';\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  roster: rosterReducer,\r\n  appState: appStateReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import { createTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAutoDarkMode } from 'store/appStateSlice';\r\nimport { AppDispatch, RootState } from 'store/types';\r\n\r\nconst useUserTheme = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const hasDarkMode = useSelector((state: RootState) => state.ui.darkMode);\r\n  const darkMode = hasDarkMode === undefined ? prefersDarkMode : hasDarkMode;\r\n  dispatch(setAutoDarkMode(darkMode));\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          type: darkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [darkMode]\r\n  );\r\n  return theme;\r\n};\r\n\r\nexport default useUserTheme;\r\n","import {\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport useOpen from '../hooks/useOpen';\r\n\r\nconst ListDialog: React.FC<{\r\n  anchor: JSX.Element;\r\n  action: (text: string) => void;\r\n  options: [string, JSX.Element | null][] | string[];\r\n  title: string;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({ anchor, action, options, title, onClose, onOpen }) => {\r\n  const [open, handleOpen, handleClose] = useOpen(false, onOpen, onClose);\r\n\r\n  const handleOnClick = (text: string) => {\r\n    action(text);\r\n    handleClose();\r\n  };\r\n\r\n  const opts: [string, JSX.Element | null][] =\r\n    typeof (options as string[])[0] === 'string'\r\n      ? (options as string[]).map((o: string) => [o, null])\r\n      : (options as [string, JSX.Element | null][]);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" onClick={handleOpen}>\r\n        {anchor}\r\n      </Box>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <List>\r\n          {opts.map(([text, icon]) => (\r\n            <ListItem button onClick={() => handleOnClick(text)} key={text}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              {text}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListDialog;\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ListDialog from './ListDialog';\r\n\r\nconst ListDialogMenu: React.FC<{\r\n  action: (text: string) => void;\r\n  options: [string, JSX.Element | null][] | string[];\r\n  title: string;\r\n  text: string;\r\n  icon: JSX.Element;\r\n  showText?: boolean;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({ action, options, title, text, icon, showText, onClose, onOpen }) => {\r\n  return (\r\n    <ListDialog\r\n      action={action}\r\n      onOpen={onOpen}\r\n      anchor={\r\n        <>\r\n          <Tooltip title={text}>\r\n            <IconButton color=\"inherit\" aria-label={text}>\r\n              {icon}\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography>{text}</Typography>}\r\n        </>\r\n      }\r\n      options={options}\r\n      title={title}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ListDialogMenu;\r\n","import store from 'store/store';\r\nimport { CompactUnit, Unit } from 'store/types';\r\n\r\nconst buildUnit = (unitToBuild: CompactUnit | Unit) => {\r\n  const unitData = store.getState().data.unitData[unitToBuild.name];\r\n  const fantasticalRulesData = store.getState().data.fantasticalRulesData;\r\n\r\n  let unit: Unit = {\r\n    ...unitData,\r\n    customName: unitToBuild.customName || '',\r\n    options: [...unitToBuild.options],\r\n    fantasticalRules: [...unitToBuild.fantasticalRules],\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (const opt of unit.options) {\r\n    const option = unitData.options[opt];\r\n    points += option.points || 0;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter((val) => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (const fant of unit.fantasticalRules) {\r\n    const fantasticRule = fantasticalRulesData[fant];\r\n    points += fantasticRule.points;\r\n    unit.rules = [...unit.rules, fantasticRule.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nexport default buildUnit;\r\n","import { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nconst ExpandIcon: React.FC<{\r\n  expanded: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\r\n}> = ({ expanded, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      className={clsx(classes.expand, {\r\n        [classes.expandOpen]: expanded,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      <ExpandMoreIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExpandIcon);\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport useOpen from '../hooks/useOpen';\r\n\r\nconst TextInputDialog: React.FC<{\r\n  anchor: JSX.Element;\r\n  action: (text: string) => void;\r\n  title?: string;\r\n  label?: string;\r\n  defaultValue?: string;\r\n  cancelText?: string;\r\n  okayText?: string;\r\n  margin?: 'none' | 'dense' | 'normal' | undefined;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({\r\n  anchor,\r\n  action,\r\n  title = '',\r\n  label = '',\r\n  defaultValue = '',\r\n  cancelText = 'Cancel',\r\n  okayText = 'Okay',\r\n  margin = 'dense',\r\n  onClose,\r\n  onOpen,\r\n}) => {\r\n  const [open, handleOpen, handleClose] = useOpen(false, onOpen, onClose);\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const handleKeyPressed = (key: string) => {\r\n    if (key === 'Enter') {\r\n      action(value);\r\n      handleClose();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n  const handleAction = () => {\r\n    action(value);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" onClick={handleOpen}>\r\n        {anchor}\r\n      </Box>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin={margin}\r\n            label={label}\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={defaultValue || value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            onKeyPress={(e) => handleKeyPressed(e.key)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {cancelText}\r\n          </Button>\r\n          <Button onClick={handleAction} disabled={!value} color=\"primary\">\r\n            {okayText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInputDialog;\r\n","import { Box, IconButton, Tooltip } from '@material-ui/core';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addUnit, moveUnit, renameUnit } from 'store/rosterSlice';\r\nimport { AppDispatch, Unit } from 'store/types';\r\nimport TextInputDialog from '../TextInputDialog';\r\n\r\nconst Actions: React.FC<{ id: number; unit: Unit }> = ({ id, unit }) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  const moveLeft = () => dispatch(moveUnit(id, 'left'));\r\n  const moveRight = () => dispatch(moveUnit(id, 'right'));\r\n  const cloneUnit = () => dispatch(addUnit(unit, id));\r\n  const rename = (value: string) => dispatch(renameUnit(id, value));\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: 'absolute',\r\n        bottom: 5,\r\n        width: '95%',\r\n        paddingRight: 15,\r\n      }}\r\n    >\r\n      <Box display=\"flex\" style={{ height: 25 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextInputDialog\r\n            anchor={\r\n              <Tooltip title=\"Rename unit\">\r\n                <IconButton>\r\n                  <TextFieldsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            }\r\n            action={rename}\r\n            title=\"Enter the name for the unit\"\r\n            label=\"Unit name\"\r\n            defaultValue={unit.customName}\r\n            okayText=\"Rename\"\r\n          />\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import {\r\n  Box,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Input,\r\n  MenuItem,\r\n  Select,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllRules } from 'store/dataSlice';\r\nimport { RootState, Unit } from 'store/types';\r\nimport useOpen from '../../hooks/useOpen';\r\n\r\nconst FantasticalRules: React.FC<{ unit: Unit; onChange: (unit: Unit) => void }> = ({\r\n  unit,\r\n  onChange,\r\n}) => {\r\n  const [open, handleOpen, handleClose] = useOpen();\r\n  const fantasticalRulesData = useSelector(\r\n    (state: RootState) => state.data.fantasticalRulesData\r\n  );\r\n  const rulesData = useSelector((state: RootState) => selectAllRules(state));\r\n\r\n  let fantasticalRules = Object.keys(fantasticalRulesData).filter(\r\n    (rule) => !fantasticalRulesData[rule].exclude_units.includes(unit.name)\r\n  );\r\n\r\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) =>\r\n    onChange({ ...unit, fantasticalRules: [...(e.target.value as string[])] });\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map((name) => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onChange={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter((v) => v !== name),\r\n                      ],\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Tooltip title={rulesData[name].description}>\r\n                  <Typography>\r\n                    {name}{' '}\r\n                    <Typography color=\"secondary\" component=\"span\">\r\n                      @{fantasticalRulesData[name].points}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Tooltip>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Tooltip title={rulesData[name].description}>\r\n                  <Typography>\r\n                    {name}{' '}\r\n                    <Typography color=\"secondary\" component=\"span\">\r\n                      @{fantasticalRulesData[name].points}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Tooltip>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Tooltip title={rulesData[name].description}>\r\n                  <Typography color=\"primary\">\r\n                    {name}{' '}\r\n                    <Typography color=\"secondary\" component=\"span\">\r\n                      @{fantasticalRulesData[name].points}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Tooltip>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FantasticalRules;\r\n","import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState, Unit } from 'store/types';\r\n\r\nconst Options: React.FC<{ unit: Unit; onChange: (unit: Unit) => void }> = ({\r\n  unit,\r\n  onChange,\r\n}) => {\r\n  const optionsData = useSelector(\r\n    (state: RootState) => state.data.unitData[unit.name].options\r\n  );\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = (option: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter((val) => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map((option) => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Tooltip title={optionsData[option].summary || ''}>\r\n                <Typography>\r\n                  {option}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{optionsData[option].points}\r\n                  </Typography>\r\n                </Typography>\r\n              </Tooltip>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import { Container, List, ListItem, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst SpecialRules: React.FC<{ rules: string[] }> = ({ rules }) => {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\">Special Rules</Typography>\r\n        <List>\r\n          {rules.map((r) => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default SpecialRules;\r\n","import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport React from 'react';\r\nimport { UnitStats } from 'store/types';\r\nimport statData from 'utils/statData';\r\n\r\nconst StatCells: React.FC<{\r\n  stat: keyof UnitStats;\r\n  stats: UnitStats;\r\n  isPhone: boolean;\r\n  overrideValue?: string;\r\n}> = ({ stat, stats, isPhone, overrideValue }) => {\r\n  const data = statData[stat];\r\n  const value = overrideValue || (stats[stat] ? stats[stat] + data.suffix : '-');\r\n\r\n  return (\r\n    <>\r\n      <TableCell>{isPhone ? data.shortName : data.name}</TableCell>\r\n      <TableCell>{value}</TableCell>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StatBlock: React.FC<{ stats: UnitStats }> = ({ stats }) => {\r\n  const theme = useTheme();\r\n  const isPhone = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const cellProps = { stats: stats, isPhone: isPhone };\r\n\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer style={{ marginBottom: 20 }}>\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          <TableRow>\r\n            <StatCells stat=\"attack\" {...cellProps} />\r\n            <StatCells stat=\"attackValue\" {...cellProps} />\r\n          </TableRow>\r\n          <TableRow>\r\n            <StatCells stat=\"move\" {...cellProps} />\r\n            <StatCells stat=\"defenceValue\" {...cellProps} />\r\n          </TableRow>\r\n          <TableRow>\r\n            <StatCells stat=\"shoot\" {...cellProps} />\r\n            <StatCells stat=\"shootValue\" overrideValue={shootingValue} {...cellProps} />\r\n          </TableRow>\r\n          <TableRow>\r\n            <StatCells stat=\"courage\" {...cellProps} />\r\n            <StatCells stat=\"movement\" {...cellProps} />\r\n          </TableRow>\r\n          <TableRow>\r\n            <StatCells stat=\"armour\" {...cellProps} />\r\n            <StatCells stat=\"strengthPoints\" {...cellProps} />\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default StatBlock;\r\n","import { Chip, Typography } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport React from 'react';\r\nimport { Unit } from 'store/types';\r\nimport ListDialog from '../ListDialog';\r\n\r\nconst UnitSelector: React.FC<{\r\n  unit: Unit;\r\n  options: string[];\r\n  onClose: (name: string) => void;\r\n}> = ({ unit, options, onClose }) => {\r\n  const name = unit.customName ? unit.customName : unit.name;\r\n\r\n  const setSelectedUnit = (value: string) => {\r\n    if (value !== unit.name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={setSelectedUnit}\r\n      anchor={\r\n        <>\r\n          <Typography variant=\"h5\">\r\n            <Chip label={unit.points} color=\"primary\" />\r\n            &nbsp;&nbsp;\r\n            {name}\r\n            <ArrowDropDownIcon />\r\n          </Typography>\r\n          {unit.customName && (\r\n            <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n              {unit.name}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      }\r\n      options={options}\r\n      title=\"Choose unit type\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnitSelector;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Collapse,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUnitNames } from 'store/dataSlice';\r\nimport { removeUnit, setUnit, updateUnit } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState, Unit as UnitType } from 'store/types';\r\nimport ExpandIcon from '../ExpandIcon';\r\nimport Actions from './Actions';\r\nimport buildUnit from './buildUnit';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport Options from './Options';\r\nimport SpecialRules from './SpecialRules';\r\nimport StatBlock from './StatBlock';\r\nimport UnitSelector from './UnitSelector';\r\n\r\nconst Unit: React.FC<{ id: number }> = ({ id }) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const unit = useSelector((state: RootState) => state.roster.units[id]);\r\n  const viewMode = useSelector((state: RootState) => state.ui.viewMode);\r\n  const editMode = useSelector((state: RootState) => state.ui.editMode);\r\n  const unitNames = useSelector((state: RootState) => selectUnitNames(state));\r\n\r\n  const [expanded, setExpanded] = React.useState(true);\r\n  const handleExpandClick = () => setExpanded(!expanded);\r\n\r\n  const changeUnit = (name: string) => dispatch(setUnit(id, name));\r\n\r\n  const handleChange = (unit: UnitType) => {\r\n    unit = buildUnit(unit);\r\n    dispatch(updateUnit(id, { ...unit }));\r\n  };\r\n\r\n  const handleRemove = () => dispatch(removeUnit(id));\r\n\r\n  return (\r\n    <Card\r\n      style={{ marginBottom: 25, maxWidth: 400, width: '100%', position: 'relative' }}\r\n    >\r\n      {viewMode ? (\r\n        <CardHeader\r\n          title={\r\n            <>\r\n              <Typography variant=\"h5\">\r\n                <Chip label={unit.points} color=\"primary\" />\r\n                &nbsp;&nbsp;\r\n                {unit.customName ? unit.customName : unit.name}\r\n              </Typography>\r\n              {unit.customName &&\r\n                (expanded ? (\r\n                  <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n                    {unit.name}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography style={{ marginLeft: 45 }}>{unit.name}</Typography>\r\n                ))}\r\n            </>\r\n          }\r\n          action={<ExpandIcon expanded={expanded} onClick={handleExpandClick} />}\r\n        />\r\n      ) : (\r\n        <CardHeader\r\n          title={<UnitSelector unit={unit} onClose={changeUnit} options={unitNames} />}\r\n          action={\r\n            <Button onClick={handleRemove}>\r\n              <CloseIcon />\r\n            </Button>\r\n          }\r\n        />\r\n      )}\r\n      <Collapse in={!viewMode || expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!editMode && (\r\n            <>\r\n              <StatBlock stats={unit.stats} />\r\n              <SpecialRules rules={unit.rules} />\r\n            </>\r\n          )}\r\n          {!viewMode && (\r\n            <>\r\n              <Options onChange={handleChange} unit={unit} />\r\n              <FantasticalRules onChange={handleChange} unit={unit} />\r\n              <Actions id={id} unit={unit} />\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(Unit);\r\n","import { Box, Fab, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addUnit } from 'store/rosterSlice';\r\nimport {\r\n  AppDispatch,\r\n  CompactRosterState,\r\n  CompactUnit,\r\n  RootState,\r\n  RosterState,\r\n} from 'store/types';\r\nimport buildUnit from './Unit/buildUnit';\r\nimport Unit from './Unit/Unit';\r\n\r\nconst packRoster = (roster: RosterState): CompactRosterState => {\r\n  const units: CompactUnit[] = roster.units.map((unit) => ({\r\n    name: unit.name,\r\n    customName: unit.customName || '',\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules,\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = (compactRoster: CompactRosterState): RosterState => {\r\n  const units = Object.values(compactRoster.units).map((unit) => buildUnit(unit));\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n  const viewMode = useSelector((state: RootState) => state.ui.viewMode);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.units.map((unit, id) => (\r\n          <Unit id={id} key={id} />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={() => dispatch(addUnit())}\r\n          aria-label=\"Add unit\"\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { CompactRosterState } from 'store/types';\r\nimport ListDialogMenu from './ListDialogMenu';\r\nimport { unpackRoster } from './Roster';\r\n\r\nconst LoadList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [savedRosters, setSavedRosters] = useState<string[]>([]);\r\n\r\n  const handleOpen = () => rosterStore.keys().then((keys) => setSavedRosters(keys));\r\n\r\n  const loadList = async (name: string) => {\r\n    try {\r\n      const compactRoster = await rosterStore.getItem<CompactRosterState>(name);\r\n      const roster = unpackRoster(compactRoster!);\r\n      dispatch(setRoster({ ...roster }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`${name} loaded!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not load ${name}!`, 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialogMenu\r\n      action={loadList}\r\n      onOpen={handleOpen}\r\n      options={savedRosters}\r\n      title=\"Choose List to load\"\r\n      text=\"Load List\"\r\n      icon={<SaveOutlinedIcon />}\r\n      showText={showText}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadList);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\nimport { AppDispatch, RootState } from 'store/types';\r\nimport { packRoster } from './Roster';\r\n\r\nconst SaveList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n\r\n  const saveRoster = () => {\r\n    if (roster.name === 'New List') {\r\n      dispatch(showFeedback('You have to give the list a name!', 'error'));\r\n      return;\r\n    }\r\n    rosterStore\r\n      .setItem(roster.name, { ...packRoster(roster) })\r\n      .then(() => dispatch(showFeedback('Saved!', 'success')))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(showFeedback('Could not save!', 'error'));\r\n      })\r\n      .finally(() => {\r\n        if (onClose) onClose();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" aria-label=\"Save List\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SaveList);\r\n","import {\r\n  Box,\r\n  Chip,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport React from 'react';\r\nimport useOpen from '../hooks/useOpen';\r\n\r\nconst About: React.FC<{ onClose?: () => void }> = ({ onClose = undefined }) => {\r\n  const [open, handleOpen, handleClose] = useOpen(false, undefined, onClose);\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load List\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {<Typography onClick={handleOpen}>About</Typography>}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={{ textAlign: 'center' }}>About</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body1\">\r\n            A simple Army Builder for the tabletop game{' '}\r\n            {<a href=\"https://ospreypublishing.com/dragon-rampant\">Dragon Rampant</a>}.\r\n          </Typography>\r\n          <Box display=\"flex\" style={{ marginTop: 25 }}>\r\n            <Chip\r\n              label=\"View on Github\"\r\n              icon={<GitHubIcon />}\r\n              component=\"a\"\r\n              href=\"#chip\"\r\n              clickable\r\n            />\r\n            <Box flexGrow={1}></Box>\r\n            <Chip label=\"License: MIT\" />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(About);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { saveAs } from 'file-saver';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { rosterStore } from 'store/persistantStorage';\r\nimport { RootState } from 'store/types';\r\n\r\nconst Backup: React.FC<{ showText: boolean; onClose?: () => void }> = ({\r\n  showText = false,\r\n  onClose = undefined,\r\n}) => {\r\n  const customData = useSelector((state: RootState) => state.data.customData);\r\n\r\n  const backup = async () => {\r\n    const backupState: any = {\r\n      rosters: {},\r\n      customData: customData,\r\n    };\r\n\r\n    await rosterStore.iterate((val, key) => {\r\n      backupState.rosters[key] = val;\r\n    });\r\n\r\n    const file = new Blob([JSON.stringify(backupState)], {\r\n      type: 'text/plain;charset=utf-8',\r\n    });\r\n\r\n    let date = new Date();\r\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\r\n    date = new Date(date.getTime() - offsetMs);\r\n    const dateText = date.toISOString().slice(0, 10).replace(/-/g, '/');\r\n\r\n    saveAs(file, `${dateText}_DRAB.sav`);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={backup}>\r\n          <BackupIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={backup}>Backup</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Backup);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store/types';\r\nimport { updateUI } from 'store/uiSlice';\r\n\r\nconst Darkmode: React.FC<{ showText?: boolean }> = ({ showText }) => {\r\n  let darkMode = useSelector((state: RootState) => state.ui.darkMode);\r\n  const autoDarkMode = useSelector((state: RootState) => state.appState.autoDarkMode);\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => {\r\n    if (darkMode === undefined) darkMode = autoDarkMode;\r\n    dispatch(updateUI({ darkMode: !darkMode }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Dark Mode\">\r\n        <IconButton onClick={handleClick} aria-label=\"Toggle Dark mode\">\r\n          <BrightnessHighIcon color={darkMode ? 'inherit' : 'disabled'} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && (\r\n        <Typography\r\n          color={darkMode ? 'inherit' : 'textSecondary'}\r\n          onClick={handleClick}\r\n        >\r\n          Dark Mode\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Darkmode);\r\n","import DeleteIcon from '@material-ui/icons/Delete';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\nimport ListDialogMenu from './ListDialogMenu';\r\n\r\nconst DeleteList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [savedRosters, setSavedRosters] = useState<string[]>([]);\r\n\r\n  const handleOpen = () => rosterStore.keys().then((keys) => setSavedRosters(keys));\r\n\r\n  const removeList = async (name: string) => {\r\n    await rosterStore.removeItem(name);\r\n    dispatch(showFeedback('Deleted!', 'success'));\r\n  };\r\n\r\n  return (\r\n    <ListDialogMenu\r\n      action={removeList}\r\n      onOpen={handleOpen}\r\n      options={savedRosters}\r\n      title=\"Choose List to delete\"\r\n      text=\"Delete List\"\r\n      icon={<DeleteIcon />}\r\n      showText={showText}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(DeleteList);\r\n","import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState } from 'store/types';\r\nimport copyToClipboard from 'utils/copyToClipboard';\r\nimport ListDialogMenu from './ListDialogMenu';\r\nimport { packRoster } from './Roster';\r\n\r\nconst ExportList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n  const getImportableString = () => JSON.stringify(packRoster(roster));\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const armyCost = getTotalPoints(units);\r\n\r\n  const getListAsText = () => {\r\n    let text: string[] = [];\r\n    text.push(`${roster.name} @${armyCost} points`);\r\n    text.push('=====================================');\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n      text.push('-----------------------------------');\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        for (const option of options) text.push(`- ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const getListAsMarkdown = () => {\r\n    let text: string[] = [];\r\n    text.push(`**${roster.name} @${armyCost} points**`);\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `* ${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        text.push('');\r\n        for (const option of options) text.push(`    - ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const options: [string, JSX.Element][] = [\r\n    ['As an importable String', <ArrowDownwardIcon />],\r\n    ['As text', <FormatAlignLeftIcon />],\r\n    ['As markdown text', <FormatAlignJustifyIcon />],\r\n  ];\r\n\r\n  const funcs = [getImportableString, getListAsText, getListAsMarkdown];\r\n\r\n  const exportList = (text: string) => {\r\n    let exportFunc: () => string =\r\n      funcs[options.reduce((acc, opt, i) => (opt[0] === text ? i : acc), 0)];\r\n\r\n    try {\r\n      const list = exportFunc();\r\n      copyToClipboard(list);\r\n      dispatch(showFeedback('List copied to clipboard!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not export the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialogMenu\r\n      action={exportList}\r\n      options={options}\r\n      title=\"Chose how to export\"\r\n      text=\"Export\"\r\n      icon={<ShareIcon />}\r\n      showText={showText}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(ExportList);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { unpackRoster } from './Roster';\r\nimport TextInputDialog from './TextInputDialog';\r\n\r\nconst ImportList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImport = (value?: string) => {\r\n    if (!value) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(value));\r\n      dispatch(setRoster({ ...list }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback('List imported!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not import the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextInputDialog\r\n      anchor={\r\n        <>\r\n          <Tooltip title=\"Import list\">\r\n            <IconButton color=\"inherit\" aria-label=\"Import List\">\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography>Import list</Typography>}\r\n        </>\r\n      }\r\n      action={handleImport}\r\n      title=\"Enter the import string\"\r\n      label=\"Import String\"\r\n      okayText=\"Import\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(ImportList);\r\n","import { IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\nimport { importCustomData } from 'store/dataSlice';\r\nimport { rosterStore } from 'store/persistantStorage';\r\n\r\nconst Restore: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  showText,\r\n  onClose,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let fileReader: FileReader;\r\n  const fileDialog = React.useRef<HTMLInputElement>(null);\r\n\r\n  const restore = async () => {\r\n    try {\r\n      const content = fileReader.result as string;\r\n      const data: any = JSON.parse(content);\r\n\r\n      // check if the new format with customData is used\r\n      if (data.hasOwnProperty('rosters')) {\r\n        await Promise.all(\r\n          Object.entries(data.rosters).map(([key, val]) =>\r\n            rosterStore.setItem(key, val)\r\n          )\r\n        );\r\n        dispatch(importCustomData(data.customData));\r\n      }\r\n      // old data\r\n      else {\r\n        await Promise.all(\r\n          Object.entries(data).map(([key, val]) => rosterStore.setItem(key, val))\r\n        );\r\n      }\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`Restored!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not restore!`, 'error'));\r\n      console.log(err);\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const handleFileChosen = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = restore;\r\n    if (event.target.files) fileReader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const openFileDialog = () => {\r\n    if (fileDialog.current) fileDialog.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={openFileDialog}>\r\n          <RestorePageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={openFileDialog}>Restore</Typography>}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileDialog}\r\n        style={{ display: 'none' }}\r\n        id=\"restoreFile\"\r\n        accept=\".sav\"\r\n        onChange={handleFileChosen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Restore);\r\n","import {\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCustomizeMode } from 'store/appStateSlice';\r\nimport About from './About';\r\nimport Backup from './Backup';\r\nimport DarkMode from './DarkMode';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\nimport LoadList from './LoadList';\r\nimport Restore from './Restore';\r\nimport SaveList from './SaveList';\r\n\r\nconst SideMenu = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const showCustomizeMenu = () => {\r\n    dispatch(setCustomizeMode(true));\r\n    setOpen(false);\r\n  };\r\n\r\n  const toggleDrawer = (open: boolean) => (event: any) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = useCallback(() => setOpen(false), []);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Backup'}>\r\n            <Backup onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Restore'}>\r\n            <Restore onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'FR'}>\r\n            <Tooltip title=\"Customize\">\r\n              <IconButton color=\"inherit\" onClick={showCustomizeMenu}>\r\n                <ColorLensIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Typography onClick={showCustomizeMenu}>Customize</Typography>\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'DarkMode'}>\r\n            <DarkMode showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'About'}>\r\n            <About onClose={handleClose} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SideMenu);\r\n","import { IconButton, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState, UIState } from 'store/types';\r\nimport { updateUI } from 'store/uiSlice';\r\n\r\nconst ToggleViewMode: React.FC<{\r\n  option: keyof UIState;\r\n  Icon: any;\r\n  title: string;\r\n}> = ({ option, Icon, title }) => {\r\n  const optionState = useSelector((state: RootState) => state.ui[option]);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeViewMode = () => {\r\n    const notClicked = option === 'viewMode' ? 'editMode' : 'viewMode';\r\n    optionState\r\n      ? dispatch(updateUI({ [option]: !optionState }))\r\n      : dispatch(updateUI({ [option]: !optionState, [notClicked]: false }));\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={title}>\r\n      <IconButton color=\"inherit\" aria-label={title} onClick={changeViewMode}>\r\n        <Icon fontSize=\"small\" color={optionState ? 'inherit' : 'disabled'} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ToggleViewMode;\r\n","import { Fab, Hidden, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\nimport { RootState } from 'store/types';\r\n\r\nconst TotalPoints = () => {\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const armyCost = getTotalPoints(units);\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown>\r\n        <Typography variant=\"h6\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n          <Fab color=\"secondary\" size=\"small\">\r\n            <Typography variant=\"h6\">{armyCost}</Typography>\r\n          </Fab>\r\n        </Typography>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <Typography variant=\"h6\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <Fab color=\"secondary\" size=\"small\">\r\n            <Typography variant=\"h6\">{armyCost}</Typography>\r\n          </Fab>\r\n        </Typography>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TotalPoints;\r\n","import {\r\n  AppBar as AppBarMaterial,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { newRoster } from 'store/rosterSlice';\r\nimport LoadList from '../LoadList';\r\nimport SaveList from '../SaveList';\r\nimport SideMenu from '../SideMenu';\r\nimport ToggleViewMode from './ToggleViewMode';\r\nimport TotalPoints from './TotalPoints';\r\n\r\nconst AppBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"reload\"\r\n              onClick={() => dispatch(newRoster())}\r\n            >\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList />\r\n            <LoadList />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleViewMode option=\"viewMode\" Icon={VisibilityIcon} title=\"View mode\" />\r\n            <ToggleViewMode option=\"editMode\" Icon={EditIcon} title=\"Edit mode\" />\r\n            <TotalPoints />\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import { CircularProgress, Dialog } from '@material-ui/core';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCustomizeMode } from 'store/appStateSlice';\r\nimport { AppDispatch, RootState } from 'store/types';\r\nconst CustomizeMenuContent = lazy(() => import('./CustomizeMenuContent'));\r\n\r\nexport interface PanelProps {\r\n  expanded: string;\r\n  handleChange: (\r\n    name: string\r\n  ) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => void;\r\n}\r\n\r\nconst CustomizeMenu = () => {\r\n  const open = useSelector((state: RootState) => state.appState.customizeMode);\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => dispatch(setCustomizeMode(false))}>\r\n      <Suspense fallback={<CircularProgress />}>\r\n        <CustomizeMenuContent />\r\n      </Suspense>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(CustomizeMenu);\r\n","import { FormControl, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateRoster } from 'store/rosterSlice';\r\nimport { AppDispatch, RootState } from 'store/types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    border: 0,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst ListName = () => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const rosterName = useSelector((state: RootState) => state.roster.name);\r\n  const inputUpdate = useSelector((state: RootState) => state.appState.inputUpdate);\r\n\r\n  return (\r\n    <FormControl>\r\n      <Typography\r\n        className={classes.root}\r\n        aria-label=\"List name\"\r\n        variant=\"h4\"\r\n        key={inputUpdate.toString()}\r\n        component=\"input\"\r\n        value={rosterName}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          dispatch(updateRoster({ name: e.target.value }))\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ListName;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAllRules } from 'store/dataSlice';\r\nimport { getSpecialRules } from 'store/rosterSlice';\r\nimport { RootState } from 'store/types';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\n\r\nconst RulesSummary = () => {\r\n  const dispatch = useDispatch();\r\n  const rulesData = useSelector((state: RootState) => selectAllRules(state));\r\n  const rulesSummaryExpanded = useSelector(\r\n    (state: RootState) => state.ui.rulesSummaryExpanded\r\n  );\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const specialRules = getSpecialRules(units);\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() => dispatch(toggleUIOption('rulesSummaryExpanded'))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map((rule) => (\r\n            <ListItem key={rule}>\r\n              <ListItemText\r\n                primary={rule}\r\n                secondary={rulesData[rule].description || ''}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RulesSummary;\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeFeedback } from 'store/appStateSlice';\r\nimport { AppDispatch, RootState } from 'store/types';\r\n\r\nconst ShowFeedback = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const feedback = useSelector((state: RootState) => state.appState.feedback);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch(closeFeedback());\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert\r\n        onClose={handleClose}\r\n        severity={feedback.severity}\r\n        variant=\"filled\"\r\n        elevation={6}\r\n      >\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Box,\r\n  Collapse,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSpecialRules } from 'store/rosterSlice';\r\nimport { RootState } from 'store/types';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\n\r\nconst SpellTable = () => {\r\n  const dispatch = useDispatch();\r\n  const spellData = useSelector((state: RootState) => state.data.spellData);\r\n  const spellsExpanded = useSelector((state: RootState) => state.ui.spellsExpanded);\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const [open, setOpen] = useState([...Array(Object.keys(spellData))].map(() => false));\r\n  const specialRules = getSpecialRules(units);\r\n\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleSpellClick = (index: number) => {\r\n    const newOpen = [...open];\r\n    newOpen[index] = !open[index];\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <Accordion\r\n          expanded={spellsExpanded}\r\n          onChange={() => dispatch(toggleUIOption('spellsExpanded'))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails style={{ maxWidth: 800 }}>\r\n            <Hidden smDown>\r\n              <TableContainer>\r\n                <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headspelltable\">\r\n                      <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                      <Hidden smDown>\r\n                        <TableCell align=\"center\">Difficulty</TableCell>\r\n                      </Hidden>\r\n                      <Hidden mdUp>\r\n                        <TableCell align=\"center\">Dif</TableCell>\r\n                      </Hidden>\r\n                      <TableCell>Target</TableCell>\r\n                      <TableCell>Duration</TableCell>\r\n                      <TableCell>Effect</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.values(spellData).map((spell) => (\r\n                      <TableRow key={spell.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {spell.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                        <TableCell>{spell.target}</TableCell>\r\n                        <TableCell>{spell.duration}</TableCell>\r\n                        <TableCell>{spell.effect}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <List>\r\n                {Object.values(spellData).map((spell, index) => (\r\n                  <Box key={index}>\r\n                    <ListItem\r\n                      key={spell.name + 'small'}\r\n                      button\r\n                      onClick={() => handleSpellClick(index)}\r\n                    >\r\n                      <ListItemText primary={spell.name} />\r\n                      <Box width={25}></Box>\r\n                      {open[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </ListItem>\r\n                    <Collapse in={open[index]} timeout=\"auto\" unmountOnExit>\r\n                      <List key={spell.name + 'list'} dense style={{ paddingLeft: 20 }}>\r\n                        <ListItem key={spell.name + spell.difficulty}>\r\n                          <ListItemText\r\n                            primary=\"Difficulty: \"\r\n                            secondary={spell.difficulty}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.target}>\r\n                          <ListItemText primary=\"Target: \" secondary={spell.target} />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.duration}>\r\n                          <ListItemText\r\n                            primary=\"Duration: \"\r\n                            secondary={spell.duration}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.effect}>\r\n                          <ListItemText primary=\"Effect: \" secondary={spell.effect} />\r\n                        </ListItem>\r\n                      </List>\r\n                    </Collapse>\r\n                  </Box>\r\n                ))}\r\n              </List>\r\n            </Hidden>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpellTable;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Chip,\r\n  CircularProgress,\r\n  Typography,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\nimport { RootState } from 'store/types';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\nconst PointDistributionChart = lazy(() => import('./PointDistributionChart'));\r\nconst UnitDistributionChart = lazy(() => import('./UnitDistributionChart'));\r\n\r\nconst Statistics = () => {\r\n  const dispatch = useDispatch();\r\n  const unitData = useSelector((state: RootState) => state.data.unitData);\r\n  const fantasticalRulesData = useSelector(\r\n    (state: RootState) => state.data.fantasticalRulesData\r\n  );\r\n  const statisticsExpanded = useSelector(\r\n    (state: RootState) => state.ui.statisticsExpanded\r\n  );\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const totalPoints = getTotalPoints(units);\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + (unitData[unit.name].options[option].points || 0),\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = Object.values(units).filter((u) => u.type === 'mounted');\r\n  const foot = Object.values(units).filter((u) => u.type === 'foot');\r\n  const ranged = Object.values(units).filter((u) => u.stats.shoot > 0);\r\n  const unitsCost = Object.values(units).reduce(\r\n    (acc, u) => acc + unitData[u.name].points,\r\n    0\r\n  );\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: Object.values(mounted).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: Object.values(foot).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: Object.values(ranged).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints },\r\n  ];\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={statisticsExpanded}\r\n      onChange={() => dispatch(toggleUIOption('statisticsExpanded'))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <Suspense fallback={<CircularProgress />}>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </Suspense>\r\n          )}\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store/types';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    backgroundColor: theme.palette.error.main,\r\n    color: theme.palette.error.contrastText,\r\n  },\r\n  details: {\r\n    backgroundColor: theme.palette.error.light,\r\n    color: theme.palette.error.contrastText,\r\n  },\r\n}));\r\n\r\nconst Validation = () => {\r\n  const dispatch = useDispatch();\r\n  const validationExpanded = useSelector(\r\n    (state: RootState) => state.ui.validationExpanded\r\n  );\r\n  const classes = useStyles();\r\n  const units = Object.values(useSelector((state: RootState) => state.roster.units));\r\n\r\n  const warnings = [];\r\n  for (const unit of units) {\r\n    if (unit.points > 10)\r\n      warnings.push([unit.name, 'No Unit may cost more than 10 points!']);\r\n    if (unit.name !== 'Unit' && unit.points <= 0)\r\n      warnings.push([unit.name, 'No Unit may cost 0 or less points!']);\r\n    if (\r\n      unit.options.includes('Short range missiles') &&\r\n      unit.options.includes('Mixed Weapons')\r\n    )\r\n      warnings.push([\r\n        unit.name,\r\n        'Short range missiles and Mixed Weapons may not be used together!',\r\n      ]);\r\n    if (\r\n      unit.fantasticalRules.includes('Unstoppable March of the Dead') &&\r\n      !unit.fantasticalRules.includes('Leader')\r\n    )\r\n      warnings.push([\r\n        unit.name,\r\n        'Only a leader can take \"Unstoppable March of the Dead\"',\r\n      ]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {warnings.length !== 0 && (\r\n        <Accordion\r\n          expanded={validationExpanded}\r\n          onChange={() => dispatch(toggleUIOption('validationExpanded'))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <AccordionSummary\r\n            className={classes.title}\r\n            expandIcon={<ExpandMoreIcon className={classes.title} />}\r\n          >\r\n            <Typography variant=\"h5\">Warnings</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails className={classes.details}>\r\n            <List>\r\n              {warnings.map(([name, text], index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemIcon className={classes.details}>\r\n                    <ErrorIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={name} secondary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Validation;\r\n","import { Container, CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport useUserTheme from 'hooks/useUserTheme';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hydrateData } from 'store/dataSlice';\r\nimport AppBar from './AppBar';\r\nimport CustomizeMenu from './Customize/CustomizeMenu';\r\nimport ListName from './ListName';\r\nimport Roster from './Roster';\r\nimport RulesSummary from './RulesSummary';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Validation from './Validation';\r\n\r\nconst App = () => {\r\n  const theme = useUserTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(hydrateData());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container>\r\n        <AppBar />\r\n        <ListName />\r\n        <Roster />\r\n        <Validation />\r\n        <RulesSummary />\r\n        <SpellTable />\r\n        <Statistics />\r\n        <ShowFeedback />\r\n        <CustomizeMenu />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/store';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import localforage from 'localforage';\r\n\r\nexport const uiStore = localforage.createInstance({\r\n  driver: localforage.LOCALSTORAGE,\r\n});\r\n\r\nexport const rosterStore = localforage.createInstance({\r\n  name: 'drabDB',\r\n  storeName: 'rosterStore',\r\n});\r\n\r\nexport const dataStore = localforage.createInstance({\r\n  name: 'drabDB',\r\n  storeName: 'dataStore',\r\n});\r\n","import {\r\n  createAsyncThunk,\r\n  createSelector,\r\n  createSlice,\r\n  PayloadAction,\r\n} from '@reduxjs/toolkit';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\nimport unitData from 'assets/dragonRampantData/units.json';\r\nimport produce from 'immer';\r\nimport { dataStore } from './persistantStorage';\r\nimport {\r\n  CustomData,\r\n  CustomDataElement,\r\n  Data,\r\n  DataUnit,\r\n  FantasticalRule,\r\n  RootState,\r\n  Rule,\r\n  Spell,\r\n  Thunk,\r\n} from './types';\r\n\r\nexport const getEmptyCustomData = (): CustomData => ({\r\n  unitData: {},\r\n  fantasticalRulesData: {},\r\n  rulesData: {},\r\n  spellData: {},\r\n});\r\n\r\nconst initialData: Data = {\r\n  unitData: unitData,\r\n  fantasticalRulesData: fantasticalRulesData,\r\n  rulesData: rulesData,\r\n  spellData: spellData,\r\n  customData: getEmptyCustomData(),\r\n};\r\n\r\nexport const hydrateData = createAsyncThunk('data/hydrateData', async () => {\r\n  const customData = await dataStore.getItem('data');\r\n  if (customData !== null) {\r\n    return customData as CustomData;\r\n  }\r\n  return null;\r\n});\r\n\r\nconst dataSlice = createSlice({\r\n  name: 'data',\r\n  initialState: initialData,\r\n  reducers: {\r\n    _setData: (_, action: PayloadAction<Data>) => ({ ...action.payload }),\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(hydrateData.fulfilled, (state, action) => {\r\n      const customData = action.payload;\r\n      if (customData === null) {\r\n        return state;\r\n      }\r\n      return {\r\n        unitData: { ...initialData.unitData, ...customData.unitData },\r\n        fantasticalRulesData: {\r\n          ...initialData.fantasticalRulesData,\r\n          ...customData.fantasticalRulesData,\r\n        },\r\n        rulesData: { ...initialData.rulesData, ...customData.rulesData },\r\n        spellData: { ...initialData.spellData, ...customData.spellData },\r\n        customData: customData,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nconst { _setData } = dataSlice.actions;\r\n\r\nexport const selectUnitNames = createSelector(\r\n  [(state: RootState) => state.data.unitData],\r\n  (unitData) => Object.keys(unitData).slice(1)\r\n);\r\n\r\nexport const selectAllRules = createSelector(\r\n  [\r\n    (state: RootState) => state.data.rulesData,\r\n    (state: RootState) => state.data.fantasticalRulesData,\r\n  ],\r\n  (rules, fantasticalRules) => ({\r\n    ...rules,\r\n    ...fantasticalRules,\r\n  })\r\n);\r\n\r\nexport const importCustomData =\r\n  (data: CustomData): Thunk =>\r\n  (dispatch, getState) => {\r\n    const state = produce(getState().data, (draft) => {\r\n      (Object.keys(data) as Array<keyof CustomData>).forEach((targetState) => {\r\n        Object.values(data[targetState]).forEach((elem) => {\r\n          draft[targetState][elem.name] = elem;\r\n          draft.customData[targetState][elem.name] = elem;\r\n        });\r\n      });\r\n    });\r\n    dataStore.setItem('data', state.customData).catch((err) => console.log(err));\r\n    dispatch(_setData(state));\r\n  };\r\n\r\nconst addAndDispatch =\r\n  <T extends CustomDataElement>(targetState: keyof CustomData) =>\r\n  (target: T): Thunk => {\r\n    const data = getEmptyCustomData();\r\n    data[targetState][target.name] = target;\r\n    return importCustomData(data);\r\n  };\r\n\r\nconst removeAndDispatch =\r\n  (targetState: keyof CustomData) =>\r\n  (target: string): Thunk =>\r\n  (dispatch, getState) => {\r\n    const state = produce(getState().data, (draft) => {\r\n      delete draft[targetState][target];\r\n      delete draft.customData[targetState][target];\r\n    });\r\n    dataStore.setItem('data', state.customData).catch((err) => console.log(err));\r\n    dispatch(_setData(state));\r\n  };\r\n\r\nexport const addUnit = addAndDispatch<DataUnit>('unitData');\r\nexport const removeUnit = removeAndDispatch('unitData');\r\n\r\nexport const addFantasticalRule =\r\n  addAndDispatch<FantasticalRule>('fantasticalRulesData');\r\nexport const removeFantasticalRule = removeAndDispatch('fantasticalRulesData');\r\n\r\nexport const addSpell = addAndDispatch<Spell>('spellData');\r\nexport const removeSpell = removeAndDispatch('spellData');\r\n\r\nexport const addRule = addAndDispatch<Rule>('rulesData');\r\nexport const removeRule = removeAndDispatch('rulesData');\r\n\r\nexport default dataSlice.reducer;\r\n","import React from 'react';\r\n\r\nconst useOpen = (\r\n  isOpen = false,\r\n  onOpen?: () => void,\r\n  onClose?: () => void\r\n): [boolean, () => void, () => void] => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  return [open, handleOpen, handleClose];\r\n};\r\n\r\nexport default useOpen;\r\n","const range = (start: number, end: number) =>\r\n  Array(end + 1 - start)\r\n    .fill(start)\r\n    .map((x, y) => x + y);\r\n\r\nexport default range;\r\n","import range from './range';\r\n\r\nconst statData: {\r\n  [stat: string]: { name: string; shortName: string; range: number[]; suffix: string };\r\n} = {\r\n  attack: {\r\n    name: 'Attack',\r\n    shortName: 'A',\r\n    range: range(2, 12),\r\n    suffix: '+',\r\n  },\r\n  attackValue: {\r\n    name: 'Attack Value',\r\n    shortName: 'AV',\r\n    range: range(2, 6),\r\n    suffix: '+',\r\n  },\r\n  move: {\r\n    name: 'Move',\r\n    shortName: 'M',\r\n    range: range(2, 12),\r\n    suffix: '+',\r\n  },\r\n  defenceValue: {\r\n    name: 'Defence Value',\r\n    shortName: 'DV',\r\n    range: range(2, 6),\r\n    suffix: '+',\r\n  },\r\n  shoot: {\r\n    name: 'Shoot',\r\n    shortName: 'S',\r\n    range: [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\r\n    suffix: '+',\r\n  },\r\n  shootValue: {\r\n    name: 'Shoot Value',\r\n    shortName: 'SV',\r\n    range: [0, 2, 3, 4, 5, 6],\r\n    suffix: '+',\r\n  },\r\n  courage: {\r\n    name: 'Courage',\r\n    shortName: 'C',\r\n    range: range(2, 12),\r\n    suffix: '+',\r\n  },\r\n  shootRange: {\r\n    name: 'Shooting Range',\r\n    shortName: 'SR',\r\n    range: [0, 6, 12, 18],\r\n    suffix: '',\r\n  },\r\n  armour: {\r\n    name: 'Armour',\r\n    shortName: 'Ar',\r\n    range: range(0, 6),\r\n    suffix: '',\r\n  },\r\n  movement: {\r\n    name: 'Movement',\r\n    shortName: 'MR',\r\n    range: [2, 4, 6, 8, 10, 12, 14, 16, 18],\r\n    suffix: '\"',\r\n  },\r\n  strengthPoints: {\r\n    name: 'Strength Points',\r\n    shortName: 'SP',\r\n    range: [6, 12],\r\n    suffix: '',\r\n  },\r\n};\r\n\r\nexport default statData;\r\n"],"sourceRoot":""}