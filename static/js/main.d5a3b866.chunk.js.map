{"version":3,"sources":["components/ShowFeedback.js","components/SimpleDialog.js","components/Unit/UnitSelector.js","components/Unit/Options.js","components/Unit/FantasticalRules.js","components/Unit/StatBlock.js","components/Unit/SpecialRules.js","components/Unit/Actions.js","components/Unit/Unit.js","helpers/utils.js","components/Roster.js","components/LoadList.js","components/SaveList.js","components/DeleteList.js","components/ExportList.js","components/ImportList.js","components/SideMenu.js","components/AppBar.js","components/RulesSummary.js","components/SpellTable.js","components/Statistics/UnitDistributionChart.js","components/Statistics/PointDistributionChart.js","components/Statistics/Statistics.js","components/App.js","serviceWorker.js","index.js"],"names":["Alert","props","elevation","variant","ShowFeedback","feedback","setFeetback","handleClose","event","reason","open","Snackbar","autoHideDuration","onClose","severity","message","SimpleDialog","selectedValue","options","title","Dialog","DialogTitle","List","map","value","ListItem","button","onClick","handleListItemClick","key","UnitSelector","unit","React","useState","setOpen","name","customName","Typography","Chip","label","points","color","style","marginLeft","marginBottom","Options","optionsData","onChange","Object","keys","length","handleChange","option","e","newUnit","target","checked","filter","val","FormControl","component","marginTop","FormLabel","FormGroup","FormControlLabel","control","Checkbox","includes","FantasticalRules","unitData","fantasticalRulesData","fantasticalRules","toCheck","slice","excluded","handleOpen","v","width","height","Select","onOpen","IconComponent","Box","multiple","input","Input","renderValue","MenuItem","indexOf","StatBlock","stats","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","size","Hidden","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","SpecialRules","rules","Container","r","Actions","id","roster","updateRoster","updateUnit","renameString","setRenameString","moveUnit","dir","unitOrder","index","nextIndex","renameUnit","display","alignItems","Tooltip","IconButton","flexGrow","DialogContent","TextField","autoFocus","margin","type","fullWidth","defaultValue","onKeyPress","DialogActions","Button","nextId","nextID","units","buildUnit","data","setStats","entries","add","rule","remove","fant","Unit","setUnit","removeUnit","ui","newAttributes","Card","maxWidth","CardHeader","unitName","unitNames","action","CardContent","editMode","viewMode","objFilter","obj","fun","filtered","k","objMap","fn","fromEntries","objReduce","acc","reduce","packRoster","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","LoadList","setRoster","setForceInputUpdate","showFeedback","showText","handleClickOpen","loadList","store","get","savedLists","list","push","getSavedLists","SaveList","saveRoster","set","saveList","DeleteList","removeList","ExportList","armyCost","exportList","exportFunc","text","navigator","clipboard","writeText","err","getImportableString","JSON","stringify","getListAsText","values","join","getListAsMarkdown","ListItemIcon","ImportList","listString","setListString","parse","SideMenu","toggleDrawer","Drawer","Divider","AppBar","setUIOption","updateUI","reload","changeViewMode","clicked","newState","notClicked","newStates","ToggleUIButton","Icon","fontSize","position","Toolbar","smDown","mdUp","VisibilityIcon","EditIcon","RulesSummary","specialRules","rulesData","rulesSummaryExpanded","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","primary","secondary","SpellTable","spellsExpanded","spellData","spellcasterInRoster","minWidth","TableHead","align","spell","scope","difficulty","duration","effect","UnitDistributionChart","colors","top","right","left","bottom","strokeDasharray","dataKey","fill","minPointSize","PointDistributionChart","renderCustomizedLabel","labelLine","outerRadius","entry","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","x","cos","y","sin","percentValue","toFixed","textAnchor","dominantBaseline","Statistics","statisticsExpanded","theme","useTheme","chipSize","useMediaQuery","breakpoints","down","optionPoints","accumulator","fantasticalPoints","COLORS","totalPoints","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","App","initialRoster","0","setUI","useReducer","state","forceInputUpdate","setFeedback","useEffect","Set","sort","getSpecialRules","border","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d5a3b866.chunk.js","sourcesContent":["import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Alert = props => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\nconst ShowFeedback = ({ feedback, setFeetback }) => {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setFeetback({ ...feedback, open: false });\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={feedback.severity}>\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nexport default function SimpleDialog(props) {\r\n  const { onClose, selectedValue, open, options, title } = props;\r\n\r\n  const handleClose = () => onClose(selectedValue);\r\n  const handleListItemClick = value => onClose(value);\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <List>\r\n        {options.map(value => (\r\n          <ListItem button onClick={() => handleListItemClick(value)} key={value}>\r\n            {value}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Typography, Chip } from '@material-ui/core';\r\nimport SimpleDialog from '../SimpleDialog';\r\n\r\nexport default function UnitSelector({ unit, options, onClose }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value !== unit.name) onClose(value);\r\n  };\r\n\r\n  const name = unit.customName ? unit.customName : unit.name;\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" onClick={handleClickOpen}>\r\n        <Chip label={unit.points} color=\"primary\" />\r\n        &nbsp;&nbsp;\r\n        {name}\r\n        <ArrowDropDownIcon />\r\n      </Typography>\r\n      {unit.customName && (\r\n        <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n          {unit.name}\r\n        </Typography>\r\n      )}\r\n      <SimpleDialog\r\n        selectedValue={unit.name}\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={options}\r\n        title=\"Choose unit type\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Options({ unit, optionsData, onChange }) {\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = option => e => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter(val => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map(option => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Typography>\r\n                {option}{' '}\r\n                <Typography color=\"secondary\" component=\"span\">\r\n                  @{optionsData[option].points}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Typography, Box, Select, MenuItem } from '@material-ui/core';\r\n\r\nfunction FantasticalRules({ unitData, onChange, fantasticalRulesData, unit }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter(val => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map(name => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onClick={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter(v => v !== name)\r\n                      ]\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}}\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={e => onChange({ ...unit, fantasticalRules: [...e.target.value] })}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Typography color=\"primary\">\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FantasticalRules;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nexport default function StatBlock({ stats }) {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, List, Container, ListItem } from '@material-ui/core';\r\n\r\nexport default function SpecialRules({ rules }) {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map(r => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","import React from 'react';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport {\r\n  IconButton,\r\n  Box,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst Actions = ({ id, unit, roster, updateRoster, updateUnit }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [renameString, setRenameString] = React.useState();\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const moveUnit = dir => {\r\n    const unitOrder = [...roster.unitOrder];\r\n    const index = roster.unitOrder.indexOf(id);\r\n    const nextIndex = dir ? index - 1 : index + 1;\r\n    if (nextIndex < 0 || nextIndex >= unitOrder.length) return;\r\n    unitOrder[nextIndex] = roster.unitOrder[index];\r\n    unitOrder[index] = roster.unitOrder[nextIndex];\r\n    updateRoster({ ...roster, unitOrder: unitOrder });\r\n  };\r\n  const moveLeft = () => moveUnit(1);\r\n  const moveRight = () => moveUnit(0);\r\n\r\n  const renameUnit = () => {\r\n    updateUnit({ customName: renameString });\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleKeyPressed = (value, key) => {\r\n    if (key === 'Enter') {\r\n      setRenameString(value);\r\n      renameUnit();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n\r\n  const cloneUnit = () => {\r\n    const nextId = roster.nextID;\r\n\r\n    updateRoster({\r\n      nextID: nextId + 1,\r\n      units: {\r\n        ...roster.units,\r\n        [nextId]: { ...unit }\r\n      },\r\n      unitOrder: [...roster.unitOrder, nextId]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" width=\"97%\" style={{ height: 25, marginTop: 10 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\" Rename unit\">\r\n            <IconButton onClick={handleOpen}>\r\n              <TextFieldsIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Enter the name for the unit</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"importstring\"\r\n                label=\"Unit name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                defaultValue={unit.customName}\r\n                onChange={e => setRenameString(e.target.value)}\r\n                onKeyPress={e => handleKeyPressed(e.target.value, e.key)}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={renameUnit} color=\"primary\">\r\n                Rename\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, CardHeader } from '@material-ui/core';\r\nimport UnitSelector from './UnitSelector';\r\nimport Options from './Options';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport StatBlock from './StatBlock';\r\nimport SpecialRules from './SpecialRules';\r\nimport Actions from './Actions';\r\n\r\nconst buildUnit = (name, customName, options, fantasticalRules, data) => {\r\n  const unitData = data.unitData[name];\r\n  let unit = {\r\n    ...unitData,\r\n    customName: customName || '',\r\n    options: [...options],\r\n    fantasticalRules: [...fantasticalRules]\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (let option of unit.options) {\r\n    option = unitData.options[option];\r\n    points += option.points;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter(val => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (let fant of unit.fantasticalRules) {\r\n    fant = data.fantasticalRulesData[fant];\r\n    points += fant.points;\r\n    unit.rules = [...unit.rules, fant.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nfunction Unit({ id, unit, roster, updateRoster, data, setUnit, removeUnit, ui }) {\r\n  const changeUnit = unitName => setUnit(id, unitName);\r\n\r\n  const updateUnit = newAttributes => {\r\n    updateRoster({\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...roster.units[id], ...newAttributes }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = unit => {\r\n    unit = buildUnit(\r\n      unit.name,\r\n      unit.customName,\r\n      unit.options,\r\n      unit.fantasticalRules,\r\n      data\r\n    );\r\n    updateUnit({ ...unit });\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" style={{ marginBottom: 25, maxWidth: 400, width: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <UnitSelector unit={unit} onClose={changeUnit} options={data.unitNames} />\r\n        }\r\n        action={\r\n          <Button onClick={() => removeUnit(id)}>\r\n            <CloseIcon />\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        {!ui.editMode && (\r\n          <>\r\n            <StatBlock stats={unit.stats} />\r\n            <SpecialRules rules={unit.rules} />\r\n          </>\r\n        )}\r\n        {!ui.viewMode && (\r\n          <>\r\n            <Options\r\n              onChange={handleChange}\r\n              optionsData={data.unitData[unit.name].options}\r\n              unit={unit}\r\n            />\r\n            <FantasticalRules\r\n              onChange={handleChange}\r\n              unitData={data.unitData[unit.name]}\r\n              fantasticalRulesData={data.fantasticalRulesData}\r\n              unit={unit}\r\n            />\r\n            <Actions\r\n              id={id}\r\n              unit={unit}\r\n              roster={roster}\r\n              updateRoster={updateRoster}\r\n              updateUnit={updateUnit}\r\n            />\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Unit;\r\nexport { buildUnit };\r\n","/**\r\n * Filter an object\r\n * @param {Object} obj The object that should be filtered\r\n * @param {function} fun A function accepting two arguments, the value and the key. must returns a boolean. (val, key) => bool\r\n * @return {Object} Returns a new Object, containing the filtered entries\r\n */\r\nconst objFilter = (obj, fun) => {\r\n  let filtered = {};\r\n  for (const k in obj) {\r\n    if (fun(obj[k], k)) filtered = { ...filtered, [k]: obj[k] };\r\n  }\r\n  return filtered;\r\n};\r\n\r\n/**\r\n * Map over an object\r\n * @param {Object} obj The object that should be filtered\r\n * @param {function} fun A function accepting two arguments, the value and the key. (val, key) => any\r\n * @return {Object} Returns a new Object, containing the maped over entries\r\n */\r\nconst objMap = (obj, fn) =>\r\n  Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, fn(v, k)]));\r\n\r\n/**\r\n * Reduce an object\r\n * @param {Object} obj The object that should be reduced\r\n * @param {function} fun A function accepting three arguments, the accumulator, value and the key. must returns a new accumulator. (acc, val, key) => acc\r\n * @return {Object} Returns the accumulator\r\n */\r\nconst objReduce = (obj, fun, acc) =>\r\n  Object.entries(obj).reduce((acc, [k, v]) => fun(acc, v, k), acc);\r\n\r\nexport { objFilter, objMap, objReduce };\r\n","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Fab, Box, Typography } from '@material-ui/core';\r\nimport Unit, { buildUnit } from './Unit';\r\nimport { objMap } from 'helpers/utils';\r\n\r\nconst packRoster = roster => {\r\n  let units = { ...roster.units };\r\n  units = objMap(units, unit => ({\r\n    name: unit.name,\r\n    customName: unit.customName || '',\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = (compactRoster, data) => {\r\n  const units = objMap(compactRoster.units, unit =>\r\n    buildUnit(unit.name, unit.customName, unit.options, unit.fantasticalRules, data)\r\n  );\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = ({ roster, updateRoster, ui, data }) => {\r\n  const addUnit = () => {\r\n    const id = roster.nextID;\r\n\r\n    updateRoster({\r\n      nextID: id + 1,\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...data.unitData.Unit, options: [], fantasticalRules: [] }\r\n      },\r\n      unitOrder: [...roster.unitOrder, id]\r\n    });\r\n  };\r\n\r\n  const setUnit = (id, name) => {\r\n    updateRoster({\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...data.unitData[name], options: [], fantasticalRules: [] }\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeUnit = id => {\r\n    const units = { ...roster.units };\r\n    delete units[id];\r\n    updateRoster({\r\n      units: { ...units },\r\n      unitOrder: roster.unitOrder.filter(val => val !== id)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map(id => (\r\n          <Unit\r\n            id={id}\r\n            key={id}\r\n            unit={roster.units[id]}\r\n            roster={roster}\r\n            updateRoster={updateRoster}\r\n            removeUnit={removeUnit}\r\n            setUnit={setUnit}\r\n            data={data}\r\n            ui={ui}\r\n            unitOrder={roster.unitOrder}\r\n          />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !ui.viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!ui.viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={addUnit}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import React from 'react';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SimpleDialog from './SimpleDialog';\r\nimport store from 'store';\r\nimport { unpackRoster } from './Roster';\r\n\r\nexport default function LoadList({\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  showFeedback,\r\n  onClose = null,\r\n  showText = false,\r\n  data\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value) loadList(value);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const loadList = name => {\r\n    const roster = unpackRoster(store.get('savedRosters')[name], data);\r\n    setRoster({ ...roster });\r\n    setForceInputUpdate();\r\n    showFeedback(`${name} loaded!`, 'success');\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load List\">\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n          <SaveOutlinedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleClickOpen}>Load List</Typography>}\r\n      <SimpleDialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={getSavedLists()}\r\n        title=\"Choose List to load\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport store from 'store';\r\nimport { packRoster } from './Roster';\r\n\r\nexport default function SaveList({\r\n  roster,\r\n  showFeedback,\r\n  onClose = null,\r\n  showText = false\r\n}) {\r\n  const saveList = () => {\r\n    if (roster.name === 'New List') return false;\r\n    let savedLists = store.get('savedRosters') || [];\r\n    savedLists = {\r\n      ...savedLists,\r\n      [roster.name]: { ...packRoster(roster) }\r\n    };\r\n    store.set('savedRosters', savedLists);\r\n    return true;\r\n  };\r\n\r\n  const saveRoster = () => {\r\n    if (saveList()) showFeedback('Saved!', 'success');\r\n    else showFeedback('You have to give the list a name!', 'error');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport SimpleDialog from './SimpleDialog';\r\n\r\nexport default function DeleteList({ showFeedback, onClose = null, showText = false }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    removeList(value);\r\n    if (value) showFeedback('Deleted!', 'success');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const removeList = name => {\r\n    if (name === 'Delete all') store.set('savedRosters', []);\r\n    else {\r\n      let savedLists = store.get('savedRosters');\r\n      delete savedLists[name];\r\n      store.set('savedRosters', savedLists);\r\n    }\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    savedLists.push('Delete all');\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Delete List\">\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleClickOpen}>Delete List</Typography>}\r\n      <SimpleDialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={getSavedLists()}\r\n        title=\"Choose List to delete\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport {\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon\r\n} from '@material-ui/core';\r\nimport { packRoster } from './Roster';\r\n\r\nconst copyToClipboard = text => navigator.clipboard.writeText(text);\r\n\r\nconst ExportList = ({\r\n  roster,\r\n  armyCost,\r\n  showFeedback,\r\n  onClose = null,\r\n  showText = false\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onClose();\r\n  };\r\n\r\n  const exportList = exportFunc => {\r\n    try {\r\n      const list = exportFunc(roster);\r\n      copyToClipboard(list);\r\n      showFeedback('List copied to clipboard!', 'success');\r\n    } catch (err) {\r\n      showFeedback('Could not export the list!', 'error');\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const getImportableString = () => JSON.stringify(packRoster(roster));\r\n\r\n  const getListAsText = () => {\r\n    let text = [];\r\n    text.push(`${roster.name} @${armyCost} points`);\r\n    text.push('=====================================');\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n      text.push('-----------------------------------');\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        for (const option of options) text.push(`- ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const getListAsMarkdown = () => {\r\n    let text = [];\r\n    text.push(`**${roster.name} @${armyCost} points**`);\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `* ${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        text.push('');\r\n        for (const option of options) text.push(`    - ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Export\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleOpen}>Export List</Typography>}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>Chose how to export</DialogTitle>\r\n        <List>\r\n          <ListItem key={'str'} button onClick={() => exportList(getImportableString)}>\r\n            <ListItemIcon>\r\n              <ArrowDownwardIcon />\r\n            </ListItemIcon>\r\n            As an importable String\r\n          </ListItem>\r\n          <ListItem key={'text'} button onClick={() => exportList(getListAsText)}>\r\n            <ListItemIcon>\r\n              <FormatAlignLeftIcon />\r\n            </ListItemIcon>\r\n            As text\r\n          </ListItem>\r\n          <ListItem key={'md'} button onClick={() => exportList(getListAsMarkdown)}>\r\n            <ListItemIcon>\r\n              <FormatAlignJustifyIcon />\r\n            </ListItemIcon>\r\n            As markdown text\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportList;\r\n","import React from 'react';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { unpackRoster } from './Roster';\r\n\r\nconst ImportList = ({\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  showFeedback,\r\n  data,\r\n  onClose = null,\r\n  showText = false\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [listString, setListString] = React.useState();\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleImport = () => {\r\n    if (!listString) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(listString), data);\r\n      setRoster({ ...list });\r\n      setForceInputUpdate();\r\n      showFeedback('List imported!', 'success');\r\n    } catch (err) {\r\n      showFeedback('Could not import the list!', 'error');\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Import list\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <GetAppIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleOpen}>Import list</Typography>}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>Enter the import string</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"importstring\"\r\n            label=\"Exported String\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e => setListString(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleImport} color=\"primary\">\r\n            Import\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportList;\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { List, ListItem, Drawer, Divider } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\n\r\nexport default function SideMenu({\r\n  roster,\r\n  setRoster,\r\n  data,\r\n  armyCost,\r\n  setForceInputUpdate,\r\n  showFeedback\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList\r\n              roster={roster}\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList\r\n              setRoster={setRoster}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              showFeedback={showFeedback}\r\n              data={data}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList\r\n              roster={roster}\r\n              armyCost={armyCost}\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList\r\n              setRoster={setRoster}\r\n              data={data}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppBar as AppBarMaterial, Box } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton, Fab, Tooltip, Hidden } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport SideMenu from './SideMenu';\r\n\r\nexport default function AppBar({\r\n  roster,\r\n  ui,\r\n  setUIOption,\r\n  updateUI,\r\n  armyCost,\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  showFeedback,\r\n  reload,\r\n  data\r\n}) {\r\n  const changeViewMode = (clicked, newState) => {\r\n    const notClicked = clicked === 'viewMode' ? 'editMode' : 'viewMode';\r\n    let newStates = { [clicked]: newState };\r\n    if (newState) newStates = { ...newStates, [notClicked]: false };\r\n    updateUI(newStates);\r\n  };\r\n\r\n  const ToggleUIButton = ({ option, Icon, title, onClick = setUIOption }) => {\r\n    return (\r\n      <Tooltip title={title}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => {\r\n            onClick(option, !ui[option]);\r\n          }}\r\n        >\r\n          <Icon fontSize=\"small\" color={ui[option] ? 'inherit' : 'disabled'} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu\r\n              roster={roster}\r\n              setRoster={setRoster}\r\n              data={data}\r\n              armyCost={armyCost}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              showFeedback={showFeedback}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton color=\"inherit\" onClick={reload}>\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList roster={roster} showFeedback={showFeedback} />\r\n            <LoadList\r\n              setRoster={setRoster}\r\n              showFeedback={showFeedback}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              data={data}\r\n            />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleUIButton\r\n              option=\"viewMode\"\r\n              Icon={VisibilityIcon}\r\n              title=\"View mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <ToggleUIButton\r\n              option=\"editMode\"\r\n              Icon={EditIcon}\r\n              title=\"Edit mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\n\r\nexport default function RulesSummary({\r\n  specialRules,\r\n  setUIOption,\r\n  rulesData,\r\n  rulesSummaryExpanded\r\n}) {\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() => setUIOption('rulesSummaryExpanded', !rulesSummaryExpanded)}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map(rule => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Hidden\r\n} from '@material-ui/core';\r\n\r\nexport default function SpellTable({\r\n  setUIOption,\r\n  specialRules,\r\n  spellsExpanded,\r\n  spellData\r\n}) {\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => setUIOption('spellsExpanded', !spellsExpanded)}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <TableContainer>\r\n              <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                  <TableRow key=\"headspelltable\">\r\n                    <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                    <Hidden smDown>\r\n                      <TableCell align=\"center\">Difficulty</TableCell>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                      <TableCell align=\"center\">Dif</TableCell>\r\n                    </Hidden>\r\n                    <TableCell>Target</TableCell>\r\n                    <TableCell>Duration</TableCell>\r\n                    <TableCell>Effect</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.values(spellData).map(spell => (\r\n                    <TableRow key={spell.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {spell.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                      <TableCell>{spell.target}</TableCell>\r\n                      <TableCell>{spell.duration}</TableCell>\r\n                      <TableCell>{spell.effect}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  LabelList,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nexport default function UnitDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Legend />\r\n        <Bar dataKey=\"Units\" fill={colors[0]} minPointSize={3}>\r\n          <LabelList dataKey=\"Units\" position=\"top\" />\r\n        </Bar>\r\n        <Bar dataKey=\"Points\" fill={colors[1]} minPointSize={3}>\r\n          <LabelList dataKey=\"Points\" position=\"top\" />\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Cell, Tooltip, Legend, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  useMediaQuery\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { objFilter, objReduce } from '../../helpers/utils';\r\nimport UnitDistributionChart from './UnitDistributionChart';\r\nimport PointDistributionChart from './PointDistributionChart';\r\n\r\nexport default function Statistics({\r\n  armyCost,\r\n  units,\r\n  unitData,\r\n  fantasticalRulesData,\r\n  statisticsExpanded,\r\n  setUIOption\r\n}) {\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = objReduce(\r\n    units,\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + unitData[unit.name].options[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = objReduce(\r\n    units,\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const totalPoints = armyCost;\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = objFilter(units, u => u.type === 'mounted');\r\n  const foot = objFilter(units, u => u.type === 'foot');\r\n  const ranged = objFilter(units, u => u.stats.shoot > 0);\r\n  const unitsCost = objReduce(units, (acc, u) => acc + unitData[u.name].points, 0);\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: objReduce(mounted, (acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: objReduce(foot, (acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: objReduce(ranged, (acc, u) => acc + u.points, 0)\r\n    }\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints }\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => setUIOption('statisticsExpanded', !statisticsExpanded)}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport store from 'store';\r\nimport { Box, Typography, Container, FormControl } from '@material-ui/core';\r\nimport unitData from 'assets/dragonRampantData/units.json';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport AppBar from './AppBar';\r\nimport Roster from './Roster';\r\nimport RulesSummary from './RulesSummary';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport { objReduce } from 'helpers/utils';\r\n\r\nconst App = () => {\r\n  const [data] = useState({\r\n    unitData: unitData,\r\n    unitNames: Object.keys(unitData).slice(1),\r\n    fantasticalRulesData: fantasticalRulesData,\r\n    rulesData: rulesData,\r\n    spellData: spellData\r\n  });\r\n\r\n  const initialRoster = {\r\n    name: 'New List',\r\n    nextID: 1,\r\n    units: {\r\n      0: { ...data.unitData.Unit, options: [], fantasticalRules: [] }\r\n    },\r\n    unitOrder: [0]\r\n  };\r\n\r\n  const [roster, setRoster] = useState({ ...initialRoster });\r\n\r\n  const [ui, setUI] = useState({\r\n    viewMode: false,\r\n    editMode: false,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true\r\n  });\r\n\r\n  const [forceInputUpdate, setForceInputUpdate] = useReducer(\r\n    state => (state ? 0 : 1),\r\n    0\r\n  );\r\n\r\n  const [feedback, setFeedback] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: ''\r\n  });\r\n\r\n  useEffect(ui => {\r\n    setUI({ ...ui, ...store.get('uiOptions') });\r\n  }, []);\r\n\r\n  const updateUI = newAttributes => {\r\n    setUI({ ...ui, ...newAttributes });\r\n    store.set('uiOptions', { ...ui, ...newAttributes });\r\n  };\r\n\r\n  const setUIOption = (option, value) => {\r\n    setUI({ ...ui, [option]: value });\r\n    store.set('uiOptions', { ...ui, [option]: value });\r\n  };\r\n\r\n  const updateRoster = newAttributes => setRoster({ ...roster, ...newAttributes });\r\n\r\n  const showFeedback = (message, severity) =>\r\n    setFeedback({ open: true, message: message, severity: severity });\r\n\r\n  const reload = () => {\r\n    setRoster({ ...initialRoster });\r\n    setForceInputUpdate();\r\n  };\r\n\r\n  const getSpecialRules = () => {\r\n    let specialRules = new Set();\r\n    for (const unit of Object.values(roster.units)) {\r\n      for (const rule of unit.rules) {\r\n        data.rulesData[data.rulesData[rule]]\r\n          ? specialRules.add(data.rulesData[rule])\r\n          : specialRules.add(rule);\r\n      }\r\n    }\r\n    return [...specialRules].sort();\r\n  };\r\n  const specialRules = getSpecialRules();\r\n\r\n  const totalPoints = objReduce(\r\n    Object.values(roster.units),\r\n    (acc, unit) => acc + unit.points,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar\r\n        setUIOption={setUIOption}\r\n        updateUI={updateUI}\r\n        ui={ui}\r\n        roster={roster}\r\n        setRoster={setRoster}\r\n        armyCost={totalPoints}\r\n        showFeedback={showFeedback}\r\n        reload={reload}\r\n        setForceInputUpdate={setForceInputUpdate}\r\n        data={data}\r\n      />\r\n      <Box>\r\n        <FormControl>\r\n          <Typography\r\n            style={{ border: 0, marginBottom: 25, width: '100%' }}\r\n            variant=\"h4\"\r\n            key={forceInputUpdate}\r\n            component=\"Input\"\r\n            value={roster.name}\r\n            onChange={e => updateRoster({ name: e.target.value })}\r\n          />\r\n        </FormControl>\r\n        <Roster roster={roster} updateRoster={updateRoster} ui={ui} data={data} />\r\n        <RulesSummary\r\n          specialRules={specialRules}\r\n          rulesData={data.rulesData}\r\n          rulesSummaryExpanded={ui.rulesSummaryExpanded}\r\n          setUIOption={setUIOption}\r\n        />\r\n        <SpellTable\r\n          specialRules={specialRules}\r\n          spellsExpanded={ui.spellsExpanded}\r\n          setUIOption={setUIOption}\r\n          spellData={data.spellData}\r\n        />\r\n        <Statistics\r\n          armyCost={totalPoints}\r\n          units={roster.units}\r\n          unitData={data.unitData}\r\n          fantasticalRulesData={data.fantasticalRulesData}\r\n          statisticsExpanded={ui.statisticsExpanded}\r\n          setUIOption={setUIOption}\r\n        />\r\n      </Box>\r\n      <ShowFeedback feedback={feedback} setFeetback={setFeedback} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}