{"version":3,"sources":["store/utils.js","store/appStateSlice.js","components/ShowFeedback.js","components/ListDialog.js","components/Unit/UnitSelector.js","store/getData.js","components/Unit/Options.js","components/Unit/FantasticalRules.js","components/Unit/StatBlock.js","components/Unit/SpecialRules.js","components/TextInputDialog.js","store/rosterSlice.js","components/Unit/Actions.js","components/ExpandIcon.js","components/Unit/buildUnit.js","components/Unit/Unit.js","components/Roster.js","components/LoadList.js","components/SaveList.js","components/DeleteList.js","components/ExportList.js","components/ImportList.js","components/Backup.js","components/Restore.js","store/uiSlice.js","components/DarkMode.js","components/About.js","components/SideMenu.js","components/AppBar.js","components/ListName.js","components/RulesSummary.js","components/SpellTable.js","components/Statistics/UnitDistributionChart.js","components/Statistics/PointDistributionChart.js","components/Statistics/Statistics.js","hooks/useUserTheme.js","components/App.js","store/store.js","serviceWorker.js","index.js"],"names":["spreadArgs","args","payload","multipleArgsReducer","reducer","prepare","appStateSlice","createSlice","name","initialState","feedback","open","message","severity","inputUpdate","autoDarkMode","savedRosters","reducers","toggleForceInputUpdate","state","closeFeedback","showFeedback","action","setAutoDarkMode","setSavedLists","addSavedLists","includes","push","deleteSavedLists","splice","indexOf","actions","Alert","props","elevation","variant","ShowFeedback","dispatch","useDispatch","useSelector","appState","handleClose","event","reason","Snackbar","autoHideDuration","onClose","ListDialog","anchor","options","title","onOpen","React","useState","setOpen","opts","map","o","Dialog","DialogTitle","List","text","icon","ListItem","button","onClick","handleOnClick","key","ListItemIcon","UnitSelector","unit","customName","value","openFunc","Typography","Chip","label","points","color","style","marginLeft","marginBottom","getData","type","data","unitData","unitNames","Object","keys","slice","fantasticalRulesData","rulesData","spellData","Options","onChange","optionsData","length","handleChange","option","e","newUnit","target","checked","filter","val","FormControl","component","marginTop","FormLabel","FormGroup","FormControlLabel","control","Checkbox","FantasticalRules","fantasticalRules","toCheck","excluded","handleOpen","v","width","height","Select","IconComponent","Box","multiple","input","Input","renderValue","MenuItem","StatBlock","stats","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","size","Hidden","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","SpecialRules","rules","Container","r","TextInputDialog","defaultValue","cancelText","okayText","margin","setValue","DialogContent","TextField","autoFocus","fullWidth","onKeyPress","handleKeyPressed","DialogActions","Button","rosterInitialState","totalPoints","nextID","units","unitOrder","getTotalPoints","values","reduce","acc","withPoints","rosterSlice","newRoster","setRoster","updateRoster","addUnit","index","Unit","id","setUnit","updateUnit","newAttributes","removeUnit","renameUnit","moveUnit","direction","nextIndex","Actions","roster","display","alignItems","Tooltip","IconButton","flexGrow","useStyles","makeStyles","theme","expand","transform","transition","transitions","create","duration","shortest","expandOpen","ExpandIcon","expanded","classes","className","clsx","buildUnit","setStats","entries","add","rule","remove","fant","ui","setExpanded","Card","maxWidth","viewMode","CardHeader","Collapse","in","timeout","unmountOnExit","CardContent","editMode","packRoster","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","LoadList","showText","store","get","err","SaveList","saveRoster","savedLists","set","saveList","DeleteList","list","getSavedLists","ExportList","armyCost","JSON","stringify","join","exportFunc","opt","navigator","clipboard","writeText","copyToClipboard","ImportList","parse","Backup","backup","file","Blob","date","Date","offsetMs","getTimezoneOffset","getTime","toISOString","replace","saveAs","Restore","fileReader","fileDialog","useRef","restore","content","result","openFileDialog","current","click","ref","accept","FileReader","onloadend","readAsText","files","uiSlice","darkMode","rulesSummaryExpanded","spellsExpanded","statisticsExpanded","setUI","setUIOption","updateUI","Darkmode","handleClick","About","textAlign","href","clickable","SideMenu","toggleDrawer","Drawer","Divider","DarkMode","AppBar","changeViewMode","clicked","newState","notClicked","newStates","ToggleUIButton","Icon","fontSize","position","Toolbar","smDown","mdUp","VisibilityIcon","EditIcon","root","backgroundColor","palette","background","default","primary","border","ListName","rosterName","RulesSummary","specialRules","Set","sort","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","secondary","SpellTable","Array","spellcasterInRoster","mdDown","minWidth","TableHead","align","spell","scope","difficulty","effect","newOpen","handleSpellClick","dense","paddingLeft","CustomLabel","x","y","useTheme","fill","textAnchor","CustomXAxis","UnitDistributionChart","colors","top","right","left","bottom","strokeDasharray","dataKey","tick","wrapperStyle","minPointSize","PointDistributionChart","renderCustomizedLabel","labelLine","outerRadius","entry","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","cos","sin","percentValue","toFixed","dominantBaseline","Statistics","chipSize","useMediaQuery","breakpoints","down","optionPoints","accumulator","fantasticalPoints","COLORS","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","useUserTheme","prefersDarkMode","hasDarkMode","useMemo","createMuiTheme","App","useEffect","ThemeProvider","CssBaseline","configureStore","uiReducer","rosterReducer","appStateReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"g+lBAAMA,EAAa,sCAAIC,EAAJ,yBAAIA,EAAJ,sBAAc,CAAEC,QAAQ,GAAD,OAAMD,KAE1CE,EAAsB,SAAAC,GAAO,MAAK,CAAEA,QAASA,EAASC,QAASL,ICC/DM,EAAgBC,YAAY,CAChCC,KAAM,WACNC,aAAc,CACZC,SAAU,CACRC,MAAM,EACNC,QAAS,GACTC,SAAU,IAEZC,YAAa,EACbC,aAAc,EACdC,aAAc,IAEhBC,SAAU,CACRC,uBAAwB,SAAAC,GACtBA,EAAML,aAAeK,EAAML,aAE7BM,cAAe,SAAAD,GACbA,EAAMT,SAASC,MAAO,GAExBU,aAAclB,GAAoB,SAACgB,EAAOG,GAAY,IAAD,cACvBA,EAAOpB,QADgB,GAC5CU,EAD4C,KACnCC,EADmC,KAEnDM,EAAMT,SAAW,CAAEC,MAAM,EAAMC,QAASA,EAASC,SAAUA,MAE7DU,gBAAiB,SAACJ,EAAOG,GACvBH,EAAMJ,aAAeO,EAAOpB,SAE9BsB,cAAe,SAACL,EAAOG,GACrBH,EAAMH,aAAeM,EAAOpB,SAE9BuB,cAAe,SAACN,EAAOG,GAChBH,EAAMH,aAAaU,SAASJ,EAAOpB,UACtCiB,EAAMH,aAAaW,KAAKL,EAAOpB,UAEnC0B,iBAAkB,SAACT,EAAOG,GACL,eAAnBA,EAAOpB,QACFiB,EAAMH,aAAe,GACtBG,EAAMH,aAAaa,OAAOV,EAAMH,aAAac,QAAQR,EAAOpB,SAAU,O,EAa5EI,EAAcyB,QAPhBb,E,EAAAA,uBACAE,E,EAAAA,cACAC,E,EAAAA,aACAE,E,EAAAA,gBACAC,E,EAAAA,cACAC,E,EAAAA,cACAG,E,EAAAA,iBAEatB,IAAf,QC/CM0B,EAAQ,SAAAC,GAAK,OAAI,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,KAuBrDG,EArBM,WACnB,IAAMC,EAAWC,cACX5B,EAAW6B,aAAY,SAAApB,GAAK,OAAIA,EAAMqB,SAAS9B,YAE/C+B,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJN,EAASjB,MAGX,OACE,kBAACwB,EAAA,EAAD,CAAUjC,KAAMD,EAASC,KAAMkC,iBAAkB,IAAMC,QAASL,GAC9D,kBAAC,EAAD,CAAOK,QAASL,EAAa5B,SAAUH,EAASG,UAC7CH,EAASE,W,8UCyBHmC,GA7CI,SAAC,GAOb,IANLC,EAMI,EANJA,OACA1B,EAKI,EALJA,OACA2B,EAII,EAJJA,QACAC,EAGI,EAHJA,MAGI,IAFJJ,eAEI,MAFM,KAEN,MADJK,cACI,MADK,KACL,IACoBC,IAAMC,UAAS,GADnC,mBACG1C,EADH,KACS2C,EADT,KAOEb,EAAc,WACdK,GAASA,IACbQ,GAAQ,IAQJC,EACJN,GAAiC,kBAAfA,EAAQ,GAAkBA,EAAQO,KAAI,SAAAC,GAAC,MAAI,CAACA,EAAG,SAASR,EAE5E,OACE,oCACGD,GAnBc,WACjBM,GAAQ,GACJH,GAAQA,OAkBV,kBAACO,GAAA,EAAD,CAAQZ,QAASL,EAAa9B,KAAMA,GAClC,kBAACgD,GAAA,EAAD,KAAcT,GACd,kBAACU,GAAA,EAAD,KACGL,EAAKC,KAAI,mCAAEK,EAAF,KAAQC,EAAR,YACR,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAhBd,SAAAJ,GACpBvC,EAAOuC,GACHf,GAASA,IACbL,IAawCyB,CAAcL,IAAOM,IAAKN,GACvDC,GAAQ,kBAACM,GAAA,EAAD,KAAeN,GACvBD,UCHAQ,GA/BM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMrB,EAAuB,EAAvBA,QAASH,EAAc,EAAdA,QAC/BtC,EAAO8D,EAAKC,WAAaD,EAAKC,WAAaD,EAAK9D,KAMtD,OACE,kBAAC,GAAD,CACEc,OANoB,SAAAkD,GAClBA,IAAUF,EAAK9D,MAAMsC,EAAQ0B,IAM/BxB,OAAQ,SAAAyB,GAAQ,OACd,oCACE,kBAACC,EAAA,EAAD,CAAYvC,QAAQ,KAAK8B,QAASQ,GAChC,kBAACE,GAAA,EAAD,CAAMC,MAAON,EAAKO,OAAQC,MAAM,YADlC,WAGGtE,EACD,kBAAC,KAAD,OAED8D,EAAKC,YACJ,kBAACG,EAAA,EAAD,CAAYK,MAAO,CAAEC,WAAY,GAAIC,cAAe,KACjDX,EAAK9D,QAKdyC,QAASA,EACTC,MAAM,sB,mGCfGgC,GAXC,WAAkB,IAAjBC,EAAgB,uDAAT,KAChBC,EAAO,CACXC,SAAUA,GACVC,UAAWC,OAAOC,KAAKH,IAAUI,MAAM,GACvCC,qBAAsBA,GACtBC,UAAWA,GACXC,UAAWA,IAEb,OAAOT,EAAOC,EAAKD,GAAQC,GCJd,SAASS,GAAT,GAAsC,IAAnBvB,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,SAChCC,EAAcb,GAAQ,YAAYZ,EAAK9D,MAAMyC,QACnD,IAAK8C,IAAgBR,OAAOC,KAAKO,GAAaC,OAAQ,OAAO,8BAE7D,IAAMC,EAAe,SAAAC,GAAM,OAAI,SAAAC,GAC7B,IAAIC,EAAO,eAAQ9B,GAEf6B,EAAEE,OAAOC,QACXF,EAAQnD,QAAR,uBAAsBmD,EAAQnD,SAA9B,CAAuCiD,IAEvCE,EAAQnD,QAAUmD,EAAQnD,QAAQsD,QAAO,SAAAC,GAAG,OAAIA,IAAQN,KAG1DJ,EAASM,KAGX,OACE,kBAACK,GAAA,EAAD,CAAaC,UAAU,WAAW3B,MAAO,CAAE4B,UAAW,KACpD,kBAACC,GAAA,EAAD,CAAWF,UAAU,UAArB,WACA,kBAACG,GAAA,EAAD,KACGtB,OAAOC,KAAKO,GAAavC,KAAI,SAAA0C,GAAM,OAClC,kBAACY,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACElB,SAAUG,EAAaC,GACvBI,QAAShC,EAAKrB,QAAQvB,SAASwE,KAGnCtB,MACE,kBAACF,EAAA,EAAD,KACGwB,EAAQ,IACT,kBAACxB,EAAA,EAAD,CAAYI,MAAM,YAAY4B,UAAU,QAAxC,IACIX,EAAYG,GAAQrB,SAI5BV,IAAK+B,S,kCC0DFe,OA7Ff,YAA+C,IAAnB3C,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,SAAY,EACpB1C,IAAMC,UAAS,GADK,mBACrC1C,EADqC,KAC/B2C,EAD+B,KAEtC+B,EAAWH,GAAQ,YAAYZ,EAAK9D,MACpCkF,EAAuBR,GAAQ,wBAEjCgC,EAAmB7B,EAAS6B,iBAChC,IAAKA,IAAqBA,EAAiBlB,OAAQ,OAAO,8BAG1D,GAF4B,QAAxBkB,EAAiB,KACnBA,EAAmB3B,OAAOC,KAAKE,IACL,YAAxBwB,EAAiB,GAAkB,CACrC,IAAMC,EAAUD,EAAiBzB,MAAM,GACvCyB,EAAmB3B,OAAOC,KAAKE,GAFM,2BAGrC,IAHqC,IAGrC,EAHqC,iBAG1B0B,EAH0B,QAInCF,EAAmBA,EAAiBX,QAAO,SAAAC,GAAG,OAAIA,IAAQY,MAD5D,EAAuBD,EAAvB,+CAAiC,IAHI,mFAQvC,IACME,EAAa,kBAAM/D,GAAQ,IAEjC,OACE,oCACE,kBAACsD,GAAA,EAAD,CAAW3C,QAASoD,EAAYX,UAAU,UAA1C,qBACoB,kBAAC,KAAD,OAEnBpC,EAAK4C,kBACJ5C,EAAK4C,iBAAiBlB,OAAS,GAC/B1B,EAAK4C,iBAAiB1D,KAAI,SAAAhD,GAAI,OAC5B,yBAAK2D,IAAK3D,GACR,kBAACsG,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEV,SAAS,EACTrC,QAAS,kBACP6B,EAAS,eACJxB,EADG,CAEN4C,iBAAiB,aACZ5C,EAAK4C,iBAAiBX,QAAO,SAAAe,GAAC,OAAIA,IAAM9G,YAMrDoE,MACE,kBAACF,EAAA,EAAD,KACGlE,EAAM,IACP,kBAACkE,EAAA,EAAD,CAAYI,MAAM,YAAY4B,UAAU,QAAxC,IACIhB,EAAqBlF,GAAMqE,OAD/B,MAKJV,IAAK3D,QAIb,kBAACiG,GAAA,EAAD,CAAa1B,MAAO,CAAE4B,UAAW,GAAIY,MAAO,EAAGC,OAAQ,IACrD,kBAACC,GAAA,EAAD,CACE9G,KAAMA,EACNmC,QAzCY,kBAAMQ,GAAQ,IA0C1BH,OAAQkE,EACRK,cAAe,kBAAM,kBAACC,EAAA,EAAD,OACrBC,UAAQ,EACRpD,MAAOF,EAAK4C,iBACZpB,SAAU,SAAAK,GAAC,OAAIL,EAAS,eAAKxB,EAAN,CAAY4C,iBAAiB,aAAKf,EAAEE,OAAO7B,WAClEqD,MAAO,kBAACC,GAAA,EAAD,MACPC,YAAa,iBAAM,MAElBb,EAAiB1D,KAAI,SAAAhD,GAAI,OACxB,kBAACwH,GAAA,EAAD,CAAU7D,IAAK3D,EAAMgE,MAAOhE,GACzB8D,EAAK4C,iBAAiBpF,QAAQtB,GAAQ,GACrC,kBAACkE,EAAA,EAAD,KACGlE,EAAM,IACP,kBAACkE,EAAA,EAAD,CAAYI,MAAM,YAAY4B,UAAU,QAAxC,IACIhB,EAAqBlF,GAAMqE,SAIlCP,EAAK4C,iBAAiBpF,QAAQtB,IAAS,GACtC,kBAACkE,EAAA,EAAD,CAAYI,MAAM,WACftE,EAAM,IACP,kBAACkE,EAAA,EAAD,CAAYI,MAAM,YAAY4B,UAAU,QAAxC,IACIhB,EAAqBlF,GAAMqE,iB,kDCnFlC,SAASoD,GAAT,GAA+B,IAAVC,EAAS,EAATA,MAC9BC,EAAWD,EAAME,MAAN,UAAiBF,EAAME,MAAvB,KAAkC,IAC7CC,EAAgBH,EAAME,MAAN,UAAiBF,EAAMI,WAAvB,aAAsCJ,EAAMK,WAA5C,KAA4D,IAEhF,OACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,EAAA,EAAD,CAAQC,QAAM,GACZ,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,KAAYb,EAAMc,OAAlB,KACA,kBAACD,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,KAAYb,EAAMe,YAAlB,MAEF,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,KAAYb,EAAMgB,KAAlB,KACA,kBAACH,GAAA,EAAD,sBACA,kBAACA,GAAA,EAAD,KAAYb,EAAMiB,aAAlB,MAEF,kBAACL,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,KAAYZ,GACZ,kBAACY,GAAA,EAAD,oBACA,kBAACA,GAAA,EAAD,KAAYV,IAEd,kBAACS,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,gBACA,kBAACA,GAAA,EAAD,KAAYb,EAAMkB,QAAlB,KACA,kBAACL,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,KAAYb,EAAMmB,SAAlB,MAEF,kBAACP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,KAAYb,EAAMoB,QAClB,kBAACP,GAAA,EAAD,wBACA,kBAACA,GAAA,EAAD,KAAYb,EAAMqB,mBAIxB,kBAACZ,EAAA,EAAD,CAAQa,MAAI,GACV,kBAACX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,UACA,kBAACA,GAAA,EAAD,KAAYb,EAAMc,OAAlB,KACA,kBAACD,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,KAAYb,EAAMe,YAAlB,MAEF,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,UACA,kBAACA,GAAA,EAAD,KAAYb,EAAMgB,KAAlB,KACA,kBAACH,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,KAAYb,EAAMiB,aAAlB,MAEF,kBAACL,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,UACA,kBAACA,GAAA,EAAD,KAAYZ,GACZ,kBAACY,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,KAAYV,IAEd,kBAACS,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,UACA,kBAACA,GAAA,EAAD,KAAYb,EAAMkB,QAAlB,KACA,kBAACL,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,KAAYb,EAAMmB,SAAlB,MAEF,kBAACP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,KAAYb,EAAMoB,QAClB,kBAACP,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,KAAYb,EAAMqB,qBC5EjB,SAASE,GAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,OAAIA,GAASA,EAAM1D,OAEf,kBAAC2D,EAAA,EAAD,KACE,kBAACjF,EAAA,EAAD,CAAYvC,QAAQ,KAAK4C,MAAO,CAAE4B,UAAW,KAA7C,iBAGA,kBAAC/C,GAAA,EAAD,KACG8F,EAAMlG,KAAI,SAAAoG,GAAC,OACV,kBAAC7F,GAAA,EAAD,CAAUI,IAAKyF,GAAIA,QAMtB,qC,sHCyDMC,GAjES,SAAC,GAWlB,IAVL7G,EAUI,EAVJA,OACA1B,EASI,EATJA,OASI,IARJ4B,aAQI,MARI,GAQJ,MAPJ0B,aAOI,MAPI,GAOJ,MANJkF,oBAMI,MANW,GAMX,MALJC,kBAKI,MALS,SAKT,MAJJC,gBAII,MAJO,OAIP,MAHJC,cAGI,MAHK,QAGL,MAFJnH,eAEI,MAFM,KAEN,MADJK,cACI,MADK,KACL,IACoBC,IAAMC,UAAS,GADnC,mBACG1C,EADH,KACS2C,EADT,OAEsBF,IAAMC,WAF5B,mBAEGmB,EAFH,KAEU0F,EAFV,KAOEzH,EAAc,WACdK,GAASA,IACbQ,GAAQ,IAeV,OACE,oCACGN,GAvBc,WACjBM,GAAQ,GACJH,GAAQA,OAsBV,kBAACO,GAAA,EAAD,CAAQZ,QAASL,EAAa9B,KAAMA,GAClC,kBAACgD,GAAA,EAAD,KAAcT,GACd,kBAACiH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTJ,OAAQA,EACRrF,MAAOA,EACPO,KAAK,OACLmF,WAAS,EACTR,aAAcA,GAAgBtF,EAC9BsB,SAAU,SAAAK,GAAC,OAAI+D,EAAS/D,EAAEE,OAAO7B,QACjC+F,WAAY,SAAApE,GAAC,OA3BE,SAAC3B,EAAOL,GACnB,UAARA,GACF+F,EAAS1F,GACTlD,EAAOkD,GACP/B,KACiB,QAAR0B,GAAe1B,IAsBD+H,CAAiBrE,EAAEE,OAAO7B,MAAO2B,EAAEhC,SAGxD,kBAACsG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQzG,QAASxB,EAAaqC,MAAM,WACjCiF,GAEH,kBAACW,GAAA,EAAD,CAAQzG,QA3BK,WACnB3C,EAAOkD,GACH1B,GAASA,IACbL,KAwBqCqC,MAAM,WAClCkF,OC/DPW,GAAqB,CACzBnK,KAAM,WACNoK,YAAa,EACbC,OAAQ,EACRC,MAAO,GACPC,UAAW,IAGP3F,GAAOF,KAEP8F,GAAiB,SAAA7J,GAAK,OAC1BoE,OAAO0F,OAAO9J,EAAM2J,OAAOI,QAAO,SAACC,EAAK7G,GAAN,OAAe6G,EAAM7G,EAAKO,SAAQ,IAEhEuG,GAAa,SAAAjK,GAAK,sBACnBA,EADmB,CAEtByJ,YAAaI,GAAe7J,MAGxBkK,GAAc9K,YAAY,CAC9BC,KAAM,SACNC,aAAckK,GACd1J,SAAU,CACRqK,UAAW,iCAAYX,KACvBY,UAAW,SAACpK,EAAOG,GAAR,OAAmB8J,GAAW,eAAK9J,EAAOpB,WACrDsL,aAAc,SAACrK,EAAOG,GAAR,OAAmB8J,GAAW,eAAKjK,EAAN,GAAgBG,EAAOpB,WAClEuL,QAAStL,GAAoB,SAACgB,EAAOG,GAAY,IAAD,cAC1BA,EAAOpB,QADmB,GACzCoE,EADyC,KACnCoH,EADmC,KAE9CpH,EAAOA,GAAI,eAAec,GAAKC,SAASsG,KAA7B,CAAmC1I,QAAS,GAAIiE,iBAAkB,KAC7E,IAAM0E,EAAKzK,EAAM0J,OACR,MAATa,EACIvK,EAAM4J,UAAUpJ,KAAKiK,GACrBzK,EAAM4J,UAAUlJ,OAAO6J,EAAQ,EAAG,EAAGE,GACzCzK,EAAM0J,QAAU,EAChB1J,EAAM2J,MAAMc,GAAMtH,EAClBnD,EAAMyJ,YAAcI,GAAe7J,MAErC0K,QAAS1L,GAAoB,SAACgB,EAAOG,GAAY,IAAD,cAC3BA,EAAOpB,QADoB,GACvC0L,EADuC,KACnCpL,EADmC,KAE9CW,EAAM2J,MAAMc,GAAZ,eAAuBxG,GAAKC,SAAS7E,GAArC,CAA4CyC,QAAS,GAAIiE,iBAAkB,KAC3E/F,EAAMyJ,YAAcI,GAAe7J,MAErC2K,WAAY3L,GAAoB,SAACgB,EAAOG,GAAY,IAAD,cACrBA,EAAOpB,QADc,GAC1C0L,EAD0C,KACtCG,EADsC,KAEjD5K,EAAM2J,MAAMc,GAAZ,eAAuBzK,EAAM2J,MAAMc,GAAnC,GAA2CG,GAC3C5K,EAAMyJ,YAAcI,GAAe7J,MAErC6K,WAAY,SAAC7K,EAAOG,GAClB,IAAMsK,EAAKtK,EAAOpB,eACXiB,EAAM2J,MAAMc,GACnBzK,EAAMyJ,YAAcI,GAAe7J,GACnCA,EAAM4J,UAAUlJ,OAAOV,EAAM4J,UAAUjJ,QAAQ8J,GAAK,IAEtDK,WAAY9L,GAAoB,SAACgB,EAAOG,GAAY,IAAD,cAC9BA,EAAOpB,QADuB,GAC1C0L,EAD0C,KACtCpL,EADsC,KAEjDW,EAAM2J,MAAMc,GAAIrH,WAAa/D,KAE/B0L,SAAU/L,GAAoB,SAACgB,EAAOG,GAAY,IAAD,cACvBA,EAAOpB,QADgB,GACxC0L,EADwC,KACpCO,EADoC,KAEzCT,EAAQvK,EAAM4J,UAAUjJ,QAAQ8J,GAChCQ,EAA0B,SAAdD,EAAuBT,EAAQ,EAAIA,EAAQ,EAC7D,GAAIU,EAAY,GAAKA,GAAajL,EAAM4J,UAAU/E,OAAQ,OAAO7E,EAJlB,MAKQ,CACrDA,EAAM4J,UAAUW,GAChBvK,EAAM4J,UAAUqB,IAFjBjL,EAAM4J,UAAUqB,GAL8B,KAKlBjL,EAAM4J,UAAUW,GALE,W,GAuBjDL,GAAYtJ,QATduJ,G,GAAAA,UACAC,G,GAAAA,UACAC,G,GAAAA,aACAC,G,GAAAA,QACAI,G,GAAAA,QACAC,G,GAAAA,WACAE,G,GAAAA,WACAC,G,GAAAA,WACAC,G,GAAAA,SAEab,MAAf,QCvBegB,GAnDC,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,GAAItH,EAAW,EAAXA,KACfjC,EAAWC,cACXgK,EAAS/J,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,UAO1C,OACE,kBAAC3E,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAK4E,QAAQ,OAAOhF,MAAM,MAAMxC,MAAO,CAAEyC,OAAQ,GAAIb,UAAW,KAC9D,kBAACgB,EAAA,EAAD,CAAK4E,QAAQ,OAAOC,WAAW,UAC7B,kBAACC,EAAA,EAAD,CAASvJ,MAAM,aACb,kBAACwJ,EAAA,EAAD,CAAYzI,QAVL,kBAAM5B,EAAS6J,GAASN,EAAI,WAWjC,kBAAC,KAAD,QAGJ,kBAACa,EAAA,EAAD,CAASvJ,MAAM,gBACb,kBAACwJ,EAAA,EAAD,CAAYzI,QAdJ,kBAAM5B,EAAS6J,GAASN,EAAI,YAelC,kBAAC,KAAD,SAIN,kBAACjE,EAAA,EAAD,CAAKgF,SAAU,IACf,kBAAChF,EAAA,EAAD,CAAK4E,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,GAAD,CACExJ,OAAQ,SAAAyB,GAAQ,OACd,kBAACgI,EAAA,EAAD,CAASvJ,MAAM,eACb,kBAACwJ,EAAA,EAAD,CAAYzI,QAASQ,GACnB,kBAAC,KAAD,SAINnD,OA3BK,SAAAkD,GAAK,OAAInC,EAAS4J,GAAWL,EAAIpH,KA4BtCtB,MAAM,8BACN0B,MAAM,YACNkF,aAAcxF,EAAKC,WACnByF,SAAS,WAEX,kBAACyC,EAAA,EAAD,CAASvJ,MAAM,cACb,kBAACwJ,EAAA,EAAD,CAAYzI,QAnCJ,kBAAM5B,EAASoJ,GAAQnH,EAAMgI,EAAOvB,UAAUjJ,QAAQ8J,OAoC5D,kBAAC,KAAD,Y,sCC9CRgB,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,UAAW,eACXhI,WAAY,OACZiI,WAAYH,EAAMI,YAAYC,OAAO,YAAa,CAChDC,SAAUN,EAAMI,YAAYE,SAASC,YAGzCC,WAAY,CACVN,UAAW,sBAmBAO,GAfI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUvJ,EAAc,EAAdA,QACxBwJ,EAAUb,KAEhB,OACE,kBAACF,EAAA,EAAD,CACEgB,UAAWC,aAAKF,EAAQV,OAAT,eACZU,EAAQH,WAAaE,IAExBvJ,QAASA,GAET,kBAAC,KAAD,QCiBS2J,GA5CG,SAAAtJ,GAChB,IAAMc,EAAOF,KACPG,EAAWD,EAAKC,SAASf,EAAK9D,MAEpC8D,EAAI,eACCe,EADD,CAEFd,WAAYD,EAAKC,YAAc,GAC/BtB,QAAQ,aAAKqB,EAAKrB,SAClBiE,iBAAiB,aAAK5C,EAAK4C,oBAG7B,IAAIrC,EAASQ,EAASR,OAXE,uBAYxB,YAAmBP,EAAKrB,QAAxB,+CAAiC,CAAC,IAAzBiD,EAAwB,QAI/B,GAFArB,IADAqB,EAASb,EAASpC,QAAQiD,IACTrB,OAEbqB,EAAO2H,SACT,cAAyBtI,OAAOuI,QAAQ5H,EAAO2H,UAA/C,eAA0D,CAAC,IAAD,sBAA9C1J,EAA8C,KAAzCqC,EAAyC,KACxDlC,EAAI,eAAQA,EAAR,CAAc4D,MAAM,eAAM5D,EAAK4D,MAAZ,eAAoB/D,EAAMqC,MAIrD,GAAIN,EAAO6H,IAAK,CAAC,IAAD,uBACd,YAAmB7H,EAAO6H,IAA1B,+CAA+B,CAAC,IAArBC,EAAoB,QAC7B1J,EAAKoF,MAAL,uBAAiBpF,EAAKoF,OAAtB,CAA6BsE,KAFjB,mFAMhB,GAAI9H,EAAO+H,OAAQ,CAAC,IAAD,uBACjB,IADiB,IACjB,EADiB,iBACND,EADM,QAEf1J,EAAKoF,MAAQpF,EAAKoF,MAAMnD,QAAO,SAAAC,GAAG,OAAIA,IAAQwH,MADhD,EAAmB9H,EAAO+H,OAA1B,+CAAmC,IADlB,qFA5BG,6GAkCxB,YAAiB3J,EAAK4C,iBAAtB,+CAAwC,CAAC,IAAhCgH,EAA+B,QAEtCrJ,IADAqJ,EAAO9I,EAAKM,qBAAqBwI,IAClBrJ,OACfP,EAAKoF,MAAL,uBAAiBpF,EAAKoF,OAAtB,CAA6BwE,EAAK1N,QArCZ,kFAyCxB,OADA8D,EAAI,eAAQA,EAAR,CAAcO,OAAQA,KC+Cb8G,OAxEf,YAAuB,IAAPC,EAAM,EAANA,GACRxG,EAAOF,KACP7C,EAAWC,cACXgC,EAAO/B,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,OAAOxB,MAAMc,MAC/CuC,EAAK5L,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,MAJlB,EAMY/K,IAAMC,UAAS,GAN3B,mBAMbmK,EANa,KAMHY,EANG,KAWdnI,EAAe,SAAA3B,GACnBA,EAAOsJ,GAAUtJ,GACjBjC,EAASyJ,GAAWF,EAAD,eAAUtH,MAG/B,OACE,kBAAC+J,EAAA,EAAD,CAAMtJ,MAAO,CAAEE,aAAc,GAAIqJ,SAAU,IAAK/G,MAAO,SACpD4G,EAAGI,SACF,kBAACC,GAAA,EAAD,CACEtL,MACE,oCACE,kBAACwB,EAAA,EAAD,CAAYvC,QAAQ,MAClB,kBAACwC,GAAA,EAAD,CAAMC,MAAON,EAAKO,OAAQC,MAAM,YADlC,WAGGR,EAAKC,WAAaD,EAAKC,WAAaD,EAAK9D,MAE3C8D,EAAKC,aACHiJ,EACC,kBAAC9I,EAAA,EAAD,CAAYK,MAAO,CAAEC,WAAY,GAAIC,cAAe,KACjDX,EAAK9D,MAGR,kBAACkE,EAAA,EAAD,CAAYK,MAAO,CAAEC,WAAY,KAAOV,EAAK9D,QAIrDc,OAAQ,kBAAC,GAAD,CAAYkM,SAAUA,EAAUvJ,QA9BtB,kBAAMmK,GAAaZ,QAiCvC,kBAACgB,GAAA,EAAD,CACEtL,MACE,kBAAC,GAAD,CAAcoB,KAAMA,EAAMxB,QAjCjB,SAAAtC,GAAI,OAAI6B,EAASwJ,GAAQD,EAAIpL,KAiCSyC,QAASmC,EAAKE,YAE/DhE,OACE,kBAACoJ,GAAA,EAAD,CAAQzG,QAAS,kBAAM5B,EAAS2J,GAAWJ,MACzC,kBAAC,KAAD,SAKR,kBAAC6C,GAAA,EAAD,CAAUC,IAAKP,EAAGI,UAAYf,EAAUmB,QAAQ,OAAOC,eAAa,GAClE,kBAACC,EAAA,EAAD,MACIV,EAAGW,UACH,oCACE,kBAAC7G,GAAD,CAAWC,MAAO5D,EAAK4D,QACvB,kBAACuB,GAAD,CAAcC,MAAOpF,EAAKoF,UAG5ByE,EAAGI,UACH,oCACE,kBAAC1I,GAAD,CAASC,SAAUG,EAAc3B,KAAMA,IACvC,kBAAC,GAAD,CAAkBwB,SAAUG,EAAc3B,KAAMA,IAChD,kBAAC,GAAD,CAASsH,GAAIA,EAAItH,KAAMA,SCxE/ByK,GAAa,SAAAzC,GACjB,IAAIxB,EAAK,eAAQwB,EAAOxB,OAOxB,OANAA,EAAQvF,OAAO0F,OAAOH,GAAOtH,KAAI,SAAAc,GAAI,MAAK,CACxC9D,KAAM8D,EAAK9D,KACX+D,WAAYD,EAAKC,YAAc,GAC/BtB,QAASqB,EAAKrB,QACdiE,iBAAkB5C,EAAK4C,qBAElB,eAAKoF,EAAZ,CAAoBxB,MAAOA,KAGvBkE,GAAe,SAAAC,GACnB,IAAMnE,EAAQvF,OAAO0F,OAAOgE,EAAcnE,OAAOtH,KAAI,SAAAc,GAAI,OAAIsJ,GAAUtJ,MACvE,OAAO,eAAK2K,EAAZ,CAA2BnE,MAAOA,KAiCrBoE,GA9BA,WACb,IAAM7M,EAAWC,cACXgK,EAAS/J,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,UACpC6B,EAAK5L,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,MAEtC,OACE,oCACE,kBAACxG,EAAA,EAAD,CAAK4E,QAAQ,OAAO4C,cAAc,MAAMC,SAAS,QAC9C9C,EAAOvB,UAAUvH,KAAI,SAAAoI,GAAE,OACtB,kBAAC,GAAD,CAAMA,GAAIA,EAAIzH,IAAKyH,SAGrBrG,OAAOC,KAAK8G,EAAOxB,OAAO9E,SAAWmI,EAAGI,UACxC,kBAAC7J,EAAA,EAAD,CAAYvC,QAAQ,KAAK4C,MAAO,CAAEE,aAAc,KAAhD,6CAIAkJ,EAAGI,UACH,kBAACc,EAAA,EAAD,CACEvK,MAAM,YACNC,MAAO,CAAEC,WAAY,GAAIC,aAAc,IACvChB,QAAS,kBAAM5B,EAASoJ,QAExB,kBAAC,IAAD,SCrCK,SAAS6D,GAAT,GAAyD,IAAD,IAApCxM,eAAoC,MAA1B,KAA0B,MAApByM,gBAAoB,SAC/DlN,EAAWC,cACXtB,EAAeuB,aAAY,SAAApB,GAAK,OAAIA,EAAMqB,SAASxB,gBAazD,OACE,kBAAC,GAAD,CACEM,OAba,SAAAd,GACf,IACE,IAAM8L,EAAS0C,GAAaQ,IAAMC,IAAI,gBAAgBjP,IACtD6B,EAASkJ,GAAU,eAAKe,KACxBjK,EAASnB,KACTmB,EAAShB,EAAa,GAAD,OAAIb,EAAJ,YAAoB,YACzC,MAAOkP,GACPrN,EAAShB,EAAa,kBAAD,OAAmBb,EAAnB,KAA4B,YAOjDwC,OAAQ,SAAAyB,GAAQ,OACd,oCACE,kBAACgI,EAAA,EAAD,CAASvJ,MAAM,aACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAASQ,GACnC,kBAAC,IAAD,QAGH8K,GAAY,kBAAC7K,EAAA,EAAD,CAAYT,QAASQ,GAArB,eAGjBxB,QAASjC,EACTkC,MAAM,sBACNJ,QAASA,I,yBChCA,SAAS6M,GAAT,GAAyD,IAAD,IAApC7M,eAAoC,MAA1B,KAA0B,MAApByM,gBAAoB,SAC/DlN,EAAWC,cACXgK,EAAS/J,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,UAcpCsD,EAAa,YAZF,WACf,GAAoB,aAAhBtD,EAAO9L,KAAqB,OAAO,EACvC,IAAIqP,EAAaL,IAAMC,IAAI,iBAAmB,GAO9C,OANAI,EAAU,eACLA,EADK,eAEPvD,EAAO9L,KAFA,eAEYuO,GAAWzC,MAEjCkD,IAAMM,IAAI,eAAgBD,GAC1BxN,EAASZ,EAAc6K,EAAO9L,QACvB,EAIHuP,GACC1N,EAAShB,EAAa,oCAAqC,UADhDgB,EAAShB,EAAa,SAAU,YAE5CyB,GAASA,KAGf,OACE,oCACE,kBAAC2J,EAAA,EAAD,CAASvJ,MAAM,aACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAAS2L,GACnC,kBAAC,KAAD,QAGHL,GAAY,kBAAC7K,EAAA,EAAD,CAAYT,QAAS2L,GAArB,c,kEC7BJ,SAASI,GAAT,GAA2D,IAAD,IAApClN,eAAoC,MAA1B,KAA0B,MAApByM,gBAAoB,SACjElN,EAAWC,cAqBjB,OACE,kBAAC,GAAD,CACEhB,OArBe,SAAAd,GACjB,GAAa,eAATA,EACFgP,IAAMM,IAAI,eAAgB,QACrB,CACL,IAAID,EAAaL,IAAMC,IAAI,uBACpBI,EAAWrP,GAClBgP,IAAMM,IAAI,eAAgBD,GAE5BxN,EAAST,EAAiBpB,IAC1B6B,EAAShB,EAAa,WAAY,aAahC2B,OAAQ,SAAAyB,GAAQ,OACd,oCACE,kBAACgI,EAAA,EAAD,CAASvJ,MAAM,eACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAASQ,GACnC,kBAAC,KAAD,QAGH8K,GAAY,kBAAC7K,EAAA,EAAD,CAAYT,QAASQ,GAArB,iBAGjBxB,QApBkB,WACpB,IAAM4M,EAAa,GACnB,IAAK,IAAMI,KAAQT,IAAMC,IAAI,gBAAiBI,EAAWlO,KAAKsO,GAE9D,OADAJ,EAAWlO,KAAK,cACTkO,EAgBIK,GACThN,MAAM,wBACNJ,QAASA,I,wFC0DAqN,GA1FI,SAAC,GAA0C,IAAD,IAAvCrN,eAAuC,MAA7B,KAA6B,MAAvByM,gBAAuB,SACrDlN,EAAWC,cACXgK,EAAS/J,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,UAEpC8D,EAAW9D,EAAO1B,YA6ClB3H,EAAU,CACd,CAAC,0BAA2B,kBAAC,KAAD,MA/CF,kBAAMoN,KAAKC,UAAUvB,GAAWzC,MAgD1D,CAAC,UAAW,kBAAC,KAAD,MA7CQ,WACpB,IAAIzI,EAAO,GACXA,EAAKlC,KAAL,UAAa2K,EAAO9L,KAApB,aAA6B4P,EAA7B,YACAvM,EAAKlC,KAAK,yCACV,cAAmB4D,OAAO0F,OAAOqB,EAAOxB,OAAxC,eAAgD,CAA3C,IAAMxG,EAAI,KACbT,EAAKlC,KAAK,IACVkC,EAAKlC,KAAL,UACK2C,EAAKC,WAAaD,EAAKC,WAAa,KAAOD,EAAK9D,KAAO,IAAM8D,EAAK9D,KADvE,aAEI8D,EAAKO,OAFT,YAKAhB,EAAKlC,KAAK,uCAEV,IAAMsB,EAAO,uBAAOqB,EAAKrB,SAAZ,aAAwBqB,EAAK4C,mBAC1C,GAAIjE,EAAQ+C,OAAQ,CAAC,IAAD,uBAClB,YAAqB/C,EAArB,oDAAWiD,EAAX,QAA8BrC,EAAKlC,KAAL,YAAeuE,KAD3B,oFAKtB,OADArC,EAAKlC,KAAK,IACHkC,EAAK0M,KAAK,QA2BjB,CAAC,mBAAoB,kBAAC,KAAD,MAxBG,WACxB,IAAI1M,EAAO,GACXA,EAAKlC,KAAL,YAAe2K,EAAO9L,KAAtB,aAA+B4P,EAA/B,cACA,cAAmB7K,OAAO0F,OAAOqB,EAAOxB,OAAxC,eAAgD,CAA3C,IAAMxG,EAAI,KACbT,EAAKlC,KAAK,IACVkC,EAAKlC,KAAL,YACO2C,EAAKC,WAAaD,EAAKC,WAAa,KAAOD,EAAK9D,KAAO,IAAM8D,EAAK9D,KADzE,aAEI8D,EAAKO,OAFT,YAMA,IAAM5B,EAAO,uBAAOqB,EAAKrB,SAAZ,aAAwBqB,EAAK4C,mBAC1C,GAAIjE,EAAQ+C,OAAQ,CAClBnC,EAAKlC,KAAK,IADQ,2BAElB,YAAqBsB,EAArB,oDAAWiD,EAAX,QAA8BrC,EAAKlC,KAAL,gBAAmBuE,KAF/B,oFAMtB,OADArC,EAAKlC,KAAK,IACHkC,EAAK0M,KAAK,SAwBnB,OACE,kBAAC,GAAD,CACEjP,OAjBe,SAAAuC,GACjB,IAAI2M,EAAavN,EAAQiI,QACvB,SAACC,EAAKsF,GAAN,OAAeA,EAAI,KAAO5M,EAAO4M,EAAI,GAAKtF,IAC1C,MAGF,KA/DoB,SAAAtH,GAAQ6M,UAAUC,UAAUC,UAAU/M,GAiExDgN,CADaL,EAAWlE,IAExBjK,EAAShB,EAAa,4BAA6B,YACnD,MAAOqO,GACPrN,EAAShB,EAAa,6BAA8B,YAOpD2B,OAAQ,SAAAyB,GAAQ,OACd,oCACE,kBAACgI,EAAA,EAAD,CAASvJ,MAAM,UACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAASQ,GACnC,kBAAC,KAAD,QAGH8K,GAAY,kBAAC7K,EAAA,EAAD,CAAYT,QAASQ,GAArB,iBAGjBxB,QAASA,EACTC,MAAM,sBACNJ,QAASA,K,qBCnDAgO,GArCI,SAAC,GAA0C,IAAD,IAAvChO,eAAuC,MAA7B,KAA6B,MAAvByM,gBAAuB,SAErDlN,GADO6C,KACI5C,eAcjB,OACE,kBAAC,GAAD,CACEU,OAAQ,SAAAyB,GAAQ,OACd,oCACE,kBAACgI,EAAA,EAAD,CAASvJ,MAAM,eACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAASQ,GACnC,kBAAC,KAAD,QAGH8K,GAAY,kBAAC7K,EAAA,EAAD,CAAYT,QAASQ,GAArB,iBAGjBnD,OAxBiB,SAAAkD,GACnB,GAAKA,EACL,IACE,IAAMyL,EAAOjB,GAAaqB,KAAKU,MAAMvM,IACrCnC,EAASkJ,GAAU,eAAK0E,KACxB5N,EAASnB,KACTmB,EAAShB,EAAa,iBAAkB,YACxC,MAAOqO,GACPrN,EAAShB,EAAa,6BAA8B,YAiBpD6B,MAAM,0BACN0B,MAAM,kBACNoF,SAAS,SACTlH,QAASA,K,+BCPAkO,GA7BA,SAAC,GAAyC,IAAD,IAAtCzB,gBAAsC,MAA3B,KAA2B,MAArBzM,eAAqB,MAAX,KAAW,EAChDmO,EAAS,WACb,IAAMpB,EAAaQ,KAAKC,UAAUd,IAAMC,IAAI,iBAAmB,IACzDyB,EAAO,IAAIC,KAAK,CAACtB,GAAa,CAAE1K,KAAM,6BAExCiM,EAAO,IAAIC,KACTC,EAAsC,GAA3BF,EAAKG,oBAA2B,IAEjDH,GADAA,EAAO,IAAIC,KAAKD,EAAKI,UAAYF,IAE9BG,cACAhM,MAAM,EAAG,IACTiM,QAAQ,KAAM,KAEjBC,kBAAOT,EAAD,UAAUE,EAAV,cACFtO,GAASA,KAGf,OACE,oCACE,kBAAC2J,EAAA,EAAD,CAASvJ,MAAM,UACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAASgN,GACnC,kBAAC,KAAD,QAGH1B,GAAY,kBAAC7K,EAAA,EAAD,CAAYT,QAASgN,GAArB,Y,qBC+BJW,GAlDC,SAAC,GAAyC,IAGpDC,EAHmD,IAAtCtC,gBAAsC,MAA3B,KAA2B,MAArBzM,eAAqB,MAAX,KAAW,EACjDT,EAAWC,cAGXwP,EAAa1O,IAAM2O,SAEnBC,EAAU,WACd,IACE,IAAInC,EAAaL,IAAMC,IAAI,iBAAmB,GAC1CwC,EAAUJ,EAAWK,OACzBD,EAAU5B,KAAKU,MAAMkB,GACrBpC,EAAU,eAAQA,EAAR,GAAuBoC,GACjCzC,IAAMM,IAAI,eAAgBD,GAC1BxN,EAASb,EAAcqO,IACvBxN,EAASnB,KACTmB,EAAShB,EAAa,YAAa,YACnC,MAAOqO,GACPrN,EAAShB,EAAa,qBAAsB,UAE1CyB,GAASA,KASTqP,EAAiB,kBAAML,EAAWM,QAAQC,SAEhD,OACE,oCACE,kBAAC5F,EAAA,EAAD,CAASvJ,MAAM,UACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAASkO,GACnC,kBAAC,KAAD,QAGH5C,GAAY,kBAAC7K,EAAA,EAAD,CAAYT,QAASkO,GAArB,WACb,2BACEhN,KAAK,OACLmN,IAAKR,EACL/M,MAAO,CAAEwH,QAAS,QAClBX,GAAG,cACH2G,OAAO,OACPzM,SAtBmB,SAAApD,IACvBmP,EAAa,IAAIW,YACNC,UAAYT,EACvBH,EAAWa,WAAWhQ,EAAM2D,OAAOsM,MAAM,S,qBChCvCC,GAAUrS,YAAY,CAC1BC,KAAM,KACNC,aAAc,CACZ8N,UAAU,EACVO,UAAU,EACV+D,SAAU,KACVC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,GAEtB/R,SAAU,CACRgS,MAAO,SAAC9R,EAAOG,GAEb,OADAkO,IAAMM,IAAI,YAAV,eAA4BxO,EAAOpB,UAC5B,eAAKoB,EAAOpB,UAErBgT,YAAa/S,GAAoB,SAACgB,EAAOG,GAAY,IAAD,cAC1BA,EAAOpB,QADmB,GAC3CgG,EAD2C,KACnC1B,EADmC,KAElDgL,IAAMM,IAAI,YAAV,eAA4B3O,EAA5B,eAAoC+E,EAAS1B,KAC7CrD,EAAM+E,GAAU1B,KAElB2O,SAAU,SAAChS,EAAOG,GAEhB,OADAkO,IAAMM,IAAI,YAAV,eAA4B3O,EAA5B,GAAsCG,EAAOpB,UACtC,eAAKiB,EAAZ,GAAsBG,EAAOpB,a,GAKa0S,GAAQ7Q,QAAlCmR,I,GAAPD,M,GAAOC,aAAaC,G,GAAAA,SACpBP,MAAf,QCEeQ,GA5BE,SAAA7D,GACf,IAAIsD,EAAWtQ,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,GAAG0E,YACvC9R,EAAewB,aAAY,SAAApB,GAAK,OAAIA,EAAMqB,SAASzB,gBACnDsB,EAAWC,cACX+Q,EAAc,WACF,MAAZR,IAAkBA,EAAW9R,GACjCsB,EAAS8Q,GAAS,CAAEN,UAAWA,MAGjC,OACE,oCACE,kBAACpG,EAAA,EAAD,CAASvJ,MAAM,aACb,kBAACwJ,EAAA,EAAD,CAAYzI,QAASoP,GACnB,kBAAC,KAAD,CAAoBvO,MAAO+N,EAAW,UAAY,eAGrDtD,GACC,kBAAC7K,EAAA,EAAD,CACEI,MAAO+N,EAAW,UAAY,gBAC9B5O,QAASoP,GAFX,e,0CC+BOC,GAvCD,SAAC,GAAwB,IAAD,IAArBxQ,eAAqB,MAAX,KAAW,IACZO,oBAAS,GADG,mBAC7B1C,EAD6B,KACvB2C,EADuB,KAE9B+D,EAAa,kBAAM/D,GAAQ,IAKjC,OACE,oCACE,kBAACmJ,EAAA,EAAD,CAASvJ,MAAM,aACb,kBAACwJ,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAASoD,GACnC,kBAAC,KAAD,QAGH,kBAAC3C,EAAA,EAAD,CAAYT,QAASoD,GAArB,SACD,kBAAC3D,GAAA,EAAD,CAAQ/C,KAAMA,EAAMmC,QAZJ,WACdA,GAASA,IACbQ,GAAQ,KAWJ,kBAACK,GAAA,EAAD,CAAaoB,MAAO,CAAEwO,UAAW,WAAjC,SACA,kBAACpJ,GAAA,EAAD,KACE,kBAACzF,EAAA,EAAD,CAAYvC,QAAQ,SAApB,8CAC8C,IAC3C,uBAAGqR,KAAK,+CAAR,kBAFH,KAIA,kBAAC7L,EAAA,EAAD,CAAK4E,QAAQ,OAAOxH,MAAO,CAAE4B,UAAW,KACtC,kBAAChC,GAAA,EAAD,CACEC,MAAM,iBACNd,KAAM,kBAAC,KAAD,MACN4C,UAAU,IACV8M,KAAK,QACLC,WAAS,IAEX,kBAAC9L,EAAA,EAAD,CAAKgF,SAAU,IACf,kBAAChI,GAAA,EAAD,CAAMC,MAAM,sBCjCT,SAAS8O,KAAY,IAAD,EACTtQ,IAAMC,UAAS,GADN,mBAC1B1C,EAD0B,KACpB2C,EADoB,KAG3BqQ,EAAe,SAAAhT,GAAI,OAAI,SAAA+B,IACR,YAAfA,EAAMyC,MAAqC,QAAdzC,EAAMyB,KAA+B,UAAdzB,EAAMyB,MAG9Db,EAAQ3C,KAGJ8B,EAAc,kBAAMa,GAAQ,IAElC,OACE,oCACE,kBAAC,KAAD,CAAUW,QAAS0P,GAAa,KAChC,kBAACC,GAAA,EAAD,CAAQjT,KAAMA,EAAMmC,QAAS6Q,GAAa,IACxC,kBAAC/P,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,QACpB,kBAACwL,GAAD,CAAU7M,QAASL,EAAa8M,UAAU,KAE5C,kBAACxL,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,QACpB,kBAACmL,GAAD,CAAUxM,QAASL,EAAa8M,UAAU,KAE5C,kBAACxL,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,UACpB,kBAAC6L,GAAD,CAAYlN,QAASL,EAAa8M,UAAU,KAE9C,kBAACsE,GAAA,EAAD,MACA,kBAAC9P,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,UACpB,kBAAC,GAAD,CAAYrB,QAASL,EAAa8M,UAAU,KAE9C,kBAACxL,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,UACpB,kBAAC,GAAD,CAAYrB,QAASL,EAAa8M,UAAU,KAE9C,kBAACsE,GAAA,EAAD,MACA,kBAAC9P,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,UACpB,kBAAC,GAAD,CAAQrB,QAASL,EAAa8M,UAAU,KAE1C,kBAACxL,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,WACpB,kBAAC,GAAD,CAASrB,QAASL,EAAa8M,UAAU,KAE3C,kBAACsE,GAAA,EAAD,MACA,kBAAC9P,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,YACpB,kBAAC2P,GAAD,OAEF,kBAAC/P,GAAA,EAAD,CAAUC,QAAM,EAACG,IAAK,SACpB,kBAAC,GAAD,CAAOrB,QAASL,QC3Cb,SAASsR,KACtB,IAAM1R,EAAWC,cACX6L,EAAK5L,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,MAChCiC,EAAW7N,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,OAAO1B,eAE7CoJ,EAAiB,SAACC,EAASC,GAC/B,IAAMC,EAAyB,aAAZF,EAAyB,WAAa,WACrDG,EAAS,eAAMH,EAAUC,GACzBA,IAAUE,EAAS,eAAQA,EAAR,eAAoBD,GAAa,KACxD9R,EAAS8Q,GAASiB,KAGdC,EAAiB,SAAC,GAAD,IAAGnO,EAAH,EAAGA,OAAQoO,EAAX,EAAWA,KAAMpR,EAAjB,EAAiBA,MAAOe,EAAxB,EAAwBA,QAAxB,OACrB,kBAACwI,EAAA,EAAD,CAASvJ,MAAOA,GACd,kBAACwJ,EAAA,EAAD,CACE5H,MAAM,UACNb,QAAS,WACPA,EAAQiC,GAASiI,EAAGjI,MAGtB,kBAACoO,EAAD,CAAMC,SAAS,QAAQzP,MAAOqJ,EAAGjI,GAAU,UAAY,gBAK7D,OACE,kBAACyB,EAAA,EAAD,CAAK4E,QAAQ,QACX,kBAACwH,EAAA,EAAD,CAAgBS,SAAS,SACvB,kBAACC,EAAA,EAAD,KACE,kBAAC9M,EAAA,EAAD,CAAK4E,QAAQ,OAAOC,WAAW,UAC7B,kBAACkH,GAAD,MACA,kBAAC/K,EAAA,EAAD,CAAQ+L,QAAM,GACZ,kBAAChQ,EAAA,EAAD,CAAYvC,QAAQ,MAApB,gDAIF,kBAACwG,EAAA,EAAD,CAAQC,QAAM,EAAC+L,MAAI,GACjB,kBAACjQ,EAAA,EAAD,CAAYvC,QAAQ,MAApB,yBAEF,kBAACuK,EAAA,EAAD,CAAY5H,MAAM,UAAUb,QAAS,kBAAM5B,EAASiJ,QAClD,kBAAC,IAAD,OAEF,kBAACqE,GAAD,MACA,kBAACL,GAAD,OAEF,kBAAC3H,EAAA,EAAD,CAAKgF,SAAU,IACf,kBAAChF,EAAA,EAAD,CAAK4E,QAAQ,OAAOC,WAAW,UAC7B,kBAAC6H,EAAD,CACEnO,OAAO,WACPoO,KAAMM,IACN1R,MAAM,YACNe,QAAS+P,IAEX,kBAACK,EAAD,CACEnO,OAAO,WACPoO,KAAMO,IACN3R,MAAM,YACNe,QAAS+P,IAEX,kBAACrL,EAAA,EAAD,CAAQ+L,QAAM,GACZ,kBAAChQ,EAAA,EAAD,CAAYvC,QAAQ,MAApB,uCAEE,kBAACkN,EAAA,EAAD,CAAKvK,MAAM,YAAY4D,KAAK,SAC1B,kBAAChE,EAAA,EAAD,CAAYvC,QAAQ,MAAMiO,MAIhC,kBAACzH,EAAA,EAAD,CAAQgM,MAAI,GACV,kBAACjQ,EAAA,EAAD,CAAYvC,QAAQ,MAApB,mBAEE,kBAACkN,EAAA,EAAD,CAAKvK,MAAM,YAAY4D,KAAK,SAC1B,kBAAChE,EAAA,EAAD,CAAYvC,QAAQ,MAAMiO,SAOtC,kBAACqE,EAAA,EAAD,OCvFN,IAAM7H,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCgI,KAAM,CACJC,gBAAiBjI,EAAMkI,QAAQC,WAAWC,QAC1CpQ,MAAOgI,EAAMkI,QAAQnR,KAAKsR,QAC1BC,OAAQ,EACRzO,UAAW,GACX1B,aAAc,GACdsC,MAAO,YAwBI8N,GApBE,WACf,IAAM5H,EAAUb,KACVvK,EAAWC,cACXgT,EAAa/S,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,OAAO9L,QAC/CM,EAAcyB,aAAY,SAAApB,GAAK,OAAIA,EAAMqB,SAAS1B,eAExD,OACE,kBAAC2F,GAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,CACEgJ,UAAWD,EAAQqH,KACnB3S,QAAQ,KACRgC,IAAKrD,EACL4F,UAAU,QACVlC,MAAO8Q,EACPxP,SAAU,SAAAK,GAAC,OAAI9D,EAASmJ,GAAa,CAAEhL,KAAM2F,EAAEE,OAAO7B,c,wCChBxDmB,GAAYT,GAAQ,aAEX,SAASqQ,KACtB,IAAMlT,EAAWC,cACXwQ,EAAuBvQ,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,GAAG2E,wBACrDhI,EAAQvI,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,OAAOxB,SAC5C0K,EAAe,aACdjQ,OAAO0F,OAAOH,GAAOI,QACtB,SAACC,EAAK7G,GAAN,OACEA,EAAKoF,MAAMwB,QACT,SAACC,EAAK6C,GAAN,OACErI,GAAUA,GAAUqI,IAAS7C,EAAI4C,IAAIpI,GAAUqI,IAAS7C,EAAI4C,IAAIC,KAClE7C,KAEJ,IAAIsK,MAENC,OAEF,OACE,kBAACC,GAAA,EAAD,CACEnI,SAAUsF,EACVhN,SAAU,kBACRzD,EAAS6Q,GAAY,wBAAyBJ,KAEhD/N,MAAO,CAAEuJ,SAAU,OAEnB,kBAACsH,GAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OACjC,kBAACnR,EAAA,EAAD,CAAYvC,QAAQ,MAApB,kBAEF,kBAAC2T,GAAA,EAAD,CAAuB/Q,MAAO,CAAEuJ,SAAU,MACxC,kBAAC1K,GAAA,EAAD,KACG4R,EAAahS,KAAI,SAAAwK,GAAI,OACpB,kBAACjK,GAAA,EAAD,CAAUI,IAAK6J,GACb,kBAAC+H,GAAA,EAAD,CAAcZ,QAASnH,EAAMgI,UAAWrQ,GAAUqI,IAAS,Y,mCCvBnEpI,GAAYV,GAAQ,aACpBS,GAAYT,GAAQ,aAEX,SAAS+Q,KACtB,IAAM5T,EAAWC,cACXyQ,EAAiBxQ,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,GAAG4E,kBAC/CjI,EAAQvI,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,OAAOxB,SAHb,EAIXzH,mBAAS,aAAI6S,MAAM3Q,OAAOC,KAAKI,MAAapC,KAAI,kBAAM,MAJ3C,mBAI5B7C,EAJ4B,KAItB2C,EAJsB,KAK/BkS,EAAe,aACdjQ,OAAO0F,OAAOH,GAAOI,QACtB,SAACC,EAAK7G,GAAN,OACEA,EAAKoF,MAAMwB,QACT,SAACC,EAAK6C,GAAN,OACErI,GAAUA,GAAUqI,IAAS7C,EAAI4C,IAAIpI,GAAUqI,IAAS7C,EAAI4C,IAAIC,KAClE7C,KAEJ,IAAIsK,MAENC,OAeF,OACE,oCAd0B,WAAO,IAAD,uBAChC,YAAmBF,EAAnB,+CAAiC,CAAC,IAAvBxH,EAAsB,QAC/B,GAAa,gBAATA,GAAmC,gBAATA,EAAwB,OAAO,GAF/B,kFAIhC,OAAO,EAWJmI,IACC,kBAACR,GAAA,EAAD,CACEnI,SAAUuF,EACVjN,SAAU,kBAAMzD,EAAS6Q,GAAY,kBAAmBH,KACxDhO,MAAO,CAAEuJ,SAAU,OAEnB,kBAACsH,GAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OACjC,kBAACnR,EAAA,EAAD,CAAYvC,QAAQ,MAApB,gBAEF,kBAAC2T,GAAA,EAAD,CAAuB/Q,MAAO,CAAEuJ,SAAU,MACxC,kBAAC3F,EAAA,EAAD,CAAQyN,QAAM,GACZ,kBAAC5N,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,KAAK,QAAQ3D,MAAO,CAAEsR,SAAU,MACrC,kBAACC,GAAA,EAAD,KACE,kBAACxN,GAAA,EAAD,CAAU3E,IAAI,kBACZ,kBAAC4E,GAAA,EAAD,CAAWhE,MAAO,CAAEsR,SAAU,MAA9B,cACA,kBAAC1N,EAAA,EAAD,CAAQ+L,QAAM,GACZ,kBAAC3L,GAAA,EAAD,CAAWwN,MAAM,UAAjB,eAEF,kBAAC5N,EAAA,EAAD,CAAQgM,MAAI,GACV,kBAAC5L,GAAA,EAAD,CAAWwN,MAAM,UAAjB,QAEF,kBAACxN,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,iBAGJ,kBAACF,GAAA,EAAD,KACGtD,OAAO0F,OAAOrF,IAAWpC,KAAI,SAAAgT,GAAK,OACjC,kBAAC1N,GAAA,EAAD,CAAU3E,IAAKqS,EAAMhW,MACnB,kBAACuI,GAAA,EAAD,CAAWrC,UAAU,KAAK+P,MAAM,OAC7BD,EAAMhW,MAET,kBAACuI,GAAA,EAAD,CAAWwN,MAAM,UAAUC,EAAME,WAAjC,KACA,kBAAC3N,GAAA,EAAD,KAAYyN,EAAMnQ,QAClB,kBAAC0C,GAAA,EAAD,KAAYyN,EAAMpJ,UAClB,kBAACrE,GAAA,EAAD,KAAYyN,EAAMG,gBAO9B,kBAAChO,EAAA,EAAD,CAAQa,MAAI,GACV,kBAAC5F,GAAA,EAAD,KACG2B,OAAO0F,OAAOrF,IAAWpC,KAAI,SAACgT,EAAO9K,GAAR,OAC5B,kBAAC/D,EAAA,EAAD,CAAKxD,IAAKuH,GACR,kBAAC3H,GAAA,EAAD,CACEI,IAAKqS,EAAMhW,KAAO,QAClBwD,QAAM,EACNC,QAAS,kBA1DJ,SAAAyH,GACvB,IAAMkL,EAAO,aAAOjW,GACpBiW,EAAQlL,IAAU/K,EAAK+K,GACvBpI,EAAQsT,GAuDyBC,CAAiBnL,KAEhC,kBAACqK,GAAA,EAAD,CAAcZ,QAASqB,EAAMhW,OAC5BG,EAAK+K,GAAS,kBAAC,KAAD,MAAqB,kBAAC,KAAD,OAEtC,kBAAC+C,GAAA,EAAD,CAAUC,GAAI/N,EAAK+K,GAAQiD,QAAQ,OAAOC,eAAa,GACrD,kBAAChL,GAAA,EAAD,CAAMO,IAAKqS,EAAMhW,KAAO,OAAQsW,OAAK,EAAC/R,MAAO,CAAEgS,YAAa,KAC1D,kBAAChT,GAAA,EAAD,CAAUI,IAAKqS,EAAMhW,KAAOgW,EAAME,YAChC,kBAACX,GAAA,EAAD,CACEZ,QAAQ,eACRa,UAAWQ,EAAME,cAGrB,kBAAC3S,GAAA,EAAD,CAAUI,IAAKqS,EAAMhW,KAAOgW,EAAMnQ,QAChC,kBAAC0P,GAAA,EAAD,CAAcZ,QAAQ,WAAWa,UAAWQ,EAAMnQ,UAEpD,kBAACtC,GAAA,EAAD,CAAUI,IAAKqS,EAAMhW,KAAOgW,EAAMpJ,UAChC,kBAAC2I,GAAA,EAAD,CACEZ,QAAQ,aACRa,UAAWQ,EAAMpJ,YAGrB,kBAACrJ,GAAA,EAAD,CAAUI,IAAKqS,EAAMhW,KAAOgW,EAAMG,QAChC,kBAACZ,GAAA,EAAD,CAAcZ,QAAQ,WAAWa,UAAWQ,EAAMG,qB,gCCxHtEK,GAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,EAAGC,EAAsB,EAAtBA,EAAG3P,EAAmB,EAAnBA,MAAO/C,EAAY,EAAZA,MAC5BsI,EAAQqK,eACd,OACE,0BACEF,EAAGA,EAAI1P,EAAQ,EACf2P,EAAGA,EAAI,EACPE,KAAMtK,EAAMkI,QAAQnR,KAAKsR,QACzBkC,WAAW,UAEV7S,IAKD8S,GAAc,SAAC,GAAuB,IAArBL,EAAoB,EAApBA,EAAGC,EAAiB,EAAjBA,EAAGhX,EAAc,EAAdA,QACrB4M,EAAQqK,eACd,OACE,0BAAMF,EAAGA,EAAGC,EAAGA,EAAI,GAAIE,KAAMtK,EAAMkI,QAAQnR,KAAKsR,QAASkC,WAAW,UACjEnX,EAAQsE,QAKA,SAAS+S,GAAT,GAA0D,IAAzBnS,EAAwB,EAAxBA,KAAMoC,EAAkB,EAAlBA,OAAQgQ,EAAU,EAAVA,OAC5D,OACE,kBAAC,KAAD,CAAqBhQ,OAAQA,GAC3B,kBAAC,KAAD,CACEpC,KAAMA,EACN6E,OAAQ,CACNwN,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGV,kBAAC,KAAD,CAAeC,gBAAgB,QAC/B,kBAAC,KAAD,CAAOC,QAAQ,OAAOC,KAAM,kBAAC,GAAD,QAC5B,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAQC,aAAc,CAAEJ,OAAQ,EAAGD,KAAM,MACzC,kBAAC,KAAD,CAAKG,QAAQ,QAAQV,KAAMI,EAAO,GAAIS,aAAc,GAClD,kBAAC,KAAD,CAAWH,QAAQ,QAAQtD,SAAS,MAAMvC,QAAS,kBAAC,GAAD,SAErD,kBAAC,KAAD,CAAK6F,QAAQ,SAASV,KAAMI,EAAO,GAAIS,aAAc,GACnD,kBAAC,KAAD,CAAWH,QAAQ,SAAStD,SAAS,MAAMvC,QAAS,kBAAC,GAAD,WCrD/C,SAASiG,GAAT,GAA2D,IAAzB9S,EAAwB,EAAxBA,KAAMoC,EAAkB,EAAlBA,OAAQgQ,EAAU,EAAVA,OAC7D,OACE,kBAAC,KAAD,CAAqBhQ,OAAQA,GAC3B,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEpC,KAAMA,EACN0S,QAAQ,QACRlT,MAAOuT,GACPC,WAAW,EACXC,YAAa,IAEZjT,EAAK5B,KAAI,SAAC8U,EAAO5M,GAAR,OACR,kBAAC,KAAD,CAAMvH,IAAKmU,EAAOlB,KAAMI,EAAO9L,SAGnC,kBAAC,KAAD,MACA,kBAAC,KAAD,QAMR,IAAM6M,GAASC,KAAKC,GAAK,IACnBN,GAAwB,SAAC,GAOxB,IANLO,EAMI,EANJA,GACAC,EAKI,EALJA,GACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAR,EAEI,EAFJA,YACAS,EACI,EADJA,QAEMC,EAASF,EAA4C,IAA7BR,EAAcQ,GACtC5B,EAAIyB,EAAKK,EAASP,KAAKQ,KAAKJ,EAAWL,IACvCrB,EAAIyB,EAAKI,EAASP,KAAKS,KAAKL,EAAWL,IACvCW,GAA0B,IAAVJ,GAAeK,QAAQ,GAE7C,OACE,0BACElC,EAAGA,EACHC,EAAGA,EACHE,KAAK,QACLC,WAAYJ,EAAIyB,EAAK,QAAU,MAC/BU,iBAAiB,WAEhBF,EAAe,EAAf,UAAsBA,EAAtB,KAAwC,KC9BzC7T,GAAWH,GAAQ,YACnBQ,GAAuBR,GAAQ,wBAEtB,SAASmU,KACtB,IAAMhX,EAAWC,cACX0Q,EAAqBzQ,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,GAAG6E,sBACnDlI,EAAQvI,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,OAAOxB,SAC1CgC,EAAQqK,eACRmC,EAAWC,aAAczM,EAAM0M,YAAYC,KAAK,OAAS,QAAU,SAEnEC,EAAenU,OAAO0F,OAAOH,GAAOI,QACxC,SAACyO,EAAarV,GAAd,OACEA,EAAKrB,QAAQiI,QACX,SAACC,EAAKjF,GAAN,OAAiBiF,EAAM9F,GAASf,EAAK9D,MAAMyC,QAAQiD,GAAQrB,SAC3D8U,KAEJ,GAGIC,EAAoBrU,OAAO0F,OAAOH,GAAOI,QAC7C,SAACyO,EAAarV,GAAd,OACEA,EAAK4C,iBAAiBgE,QACpB,SAACC,EAAKjF,GAAN,OAAiBiF,EAAMzF,GAAqBQ,GAAQrB,SACpD8U,KAEJ,GAGIE,EAAS,CAAC,UAAW,UAAW,WAChCjP,EAAcrI,aAAY,SAAApB,GAAK,OAAIA,EAAMmL,OAAO1B,eAChDkP,EAAYvU,OAAOC,KAAKsF,GAAO9E,OAC/B+T,EAAUxU,OAAO0F,OAAOH,GAAOvE,QAAO,SAAAyT,GAAC,MAAe,YAAXA,EAAE7U,QAC7C8U,EAAO1U,OAAO0F,OAAOH,GAAOvE,QAAO,SAAAyT,GAAC,MAAe,SAAXA,EAAE7U,QAC1C+U,EAAS3U,OAAO0F,OAAOH,GAAOvE,QAAO,SAAAyT,GAAC,OAAIA,EAAE9R,MAAME,MAAQ,KAC1D+R,EAAY5U,OAAO0F,OAAOH,GAAOI,QACrC,SAACC,EAAK6O,GAAN,OAAY7O,EAAM9F,GAAS2U,EAAExZ,MAAMqE,SACnC,GAGIuV,EAAgB,CACpB,CACE5Z,KAAM,UACN6Z,MAAO9U,OAAOC,KAAKuU,GAAS/T,OAC5BsU,OAAQ/U,OAAO0F,OAAO8O,GAAS7O,QAAO,SAACC,EAAK6O,GAAN,OAAY7O,EAAM6O,EAAEnV,SAAQ,IAEpE,CACErE,KAAM,OACN6Z,MAAO9U,OAAOC,KAAKyU,GAAMjU,OACzBsU,OAAQ/U,OAAO0F,OAAOgP,GAAM/O,QAAO,SAACC,EAAK6O,GAAN,OAAY7O,EAAM6O,EAAEnV,SAAQ,IAEjE,CACErE,KAAM,SACN6Z,MAAO9U,OAAOC,KAAK0U,GAAQlU,OAC3BsU,OAAQ/U,OAAO0F,OAAOiP,GAAQhP,QAAO,SAACC,EAAK6O,GAAN,OAAY7O,EAAM6O,EAAEnV,SAAQ,KAI/D0V,EAAa,CACjB,CAAE/Z,KAAM,QAASgE,MAAO2V,GACxB,CAAE3Z,KAAM,UAAWgE,MAAOkV,EAAe,EAAI,EAAIA,GACjD,CAAElZ,KAAM,oBAAqBgE,MAAOoV,IAGtC,OACE,kBAACjE,GAAA,EAAD,CACEnI,SAAUwF,EACVlN,SAAU,kBAAMzD,EAAS6Q,GAAY,sBAAuBF,KAC5DjO,MAAO,CAAEuJ,SAAU,OAEnB,kBAACsH,GAAA,EAAD,CAAuBC,WAAY,kBAAC,KAAD,OACjC,kBAACnR,EAAA,EAAD,CAAYvC,QAAQ,MAApB,eAEF,kBAAC2T,GAAA,EAAD,KACE,6BACE,kBAACnR,GAAA,EAAD,CACEC,MAAOgG,EAAc,UACrB9F,MAAM,UACN4D,KAAM4Q,EACNvU,MAAO,CAAEyV,YAAa,GAAIvV,aAAc,MAE1C,kBAACN,GAAA,EAAD,CACEC,MAAOkV,EAAY,SACnBhV,MAAM,UACN4D,KAAM4Q,EACNvU,MAAO,CAAEyV,YAAa,GAAIvV,aAAc,MAE1C,kBAACN,GAAA,EAAD,CACEC,OACGgG,GAAekP,GAAwB,IAAIW,YAAY,GACxD,mBAEF3V,MAAM,UACN4D,KAAM4Q,EACNvU,MAAO,CAAEyV,YAAa,GAAIvV,aAAc,MAEzCkV,EAAY,GACX,oCACE,kBAACzV,EAAA,EAAD,CAAYvC,QAAQ,KAAK4C,MAAO,CAAE4B,UAAW,KAA7C,qBAGA,kBAAC4Q,GAAD,CACEnS,KAAMgV,EACN5S,OAAQ,IACRgQ,OAAQqC,IAEV,kBAACnV,EAAA,EAAD,CAAYvC,QAAQ,KAAK4C,MAAO,CAAE4B,UAAW,KAA7C,sBAGA,kBAACuR,GAAD,CAAwB9S,KAAMmV,EAAY/S,OAAQ,IAAKgQ,OAAQqC,Q,cCpG9Da,GAnBM,WACnB,IAAMrY,EAAWC,cACXqY,EAAkBpB,aAAc,gCAChCqB,EAAcrY,aAAY,SAAApB,GAAK,OAAIA,EAAMgN,GAAG0E,YAC5CA,EAA0B,MAAf+H,EAAsBD,EAAkBC,EAYzD,OAXAvY,EAASd,EAAgBsR,IAEXzP,IAAMyX,SAClB,kBACEC,aAAe,CACb9F,QAAS,CACP7P,KAAM0N,EAAW,OAAS,aAGhC,CAACA,KCsBUkI,GA1BH,WACV,IAAM1Y,EAAWC,cAEjB0Y,qBAAU,WACR3Y,EAAS8Q,GAAS,eAAK3D,IAAMC,IAAI,gBACjCpN,EAASb,EAAc+D,OAAOC,KAAKgK,IAAMC,IAAI,kBAAoB,OAChE,CAACpN,IAEJ,IAAMyK,EAAQ4N,KAEd,OACE,kBAACO,EAAA,EAAD,CAAenO,MAAOA,GACpB,kBAACoO,EAAA,EAAD,MACA,kBAACvR,EAAA,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC4L,GAAD,MACA,kBAACU,GAAD,MACA,kBAACoD,GAAD,MACA,kBAAC,EAAD,SC/BO8B,eAAe,CAC5B/a,QAAS,CACP+N,GAAIiN,GACJ9O,OAAQ+O,GACR7Y,SAAU8Y,KCGRC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BrL,UAAUsL,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlb,QACfuP,UAAUsL,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCzFjEC,IAASC,OACP,kBAAC,IAAD,CAAUxN,MAAOA,IACf,kBAAC,GAAD,OAEFyN,SAASC,eAAe,SDWnB,SAAkBnB,GACvB,GAA6C,kBAAmBrL,UAAW,CAGzE,GADkB,IAAIyM,IAAIC,0BAAwB3B,OAAOC,SAASlI,MACpD6J,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMsB,0BAAN,sBAEP7B,KAgEV,SAAiCO,EAAOC,GAEtCwB,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASD,QAAQ/N,IAAI,gBAEnB,MAApBgO,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAY5b,QAAQ,cAG5C4O,UAAUsL,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,GAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IACN,oEAvFAqB,CAAwBjC,EAAOC,GAI/BrL,UAAUsL,cAAc4B,MAAM1B,MAAK,WACjCO,QAAQC,IACN,iHAMJb,GAAgBC,EAAOC,OCjC/BC,K","file":"static/js/main.edaf829d.chunk.js","sourcesContent":["const spreadArgs = (...args) => ({ payload: [...args] });\r\n\r\nconst multipleArgsReducer = reducer => ({ reducer: reducer, prepare: spreadArgs });\r\n\r\nexport { multipleArgsReducer };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { multipleArgsReducer } from './utils';\r\n\r\nconst appStateSlice = createSlice({\r\n  name: 'appState',\r\n  initialState: {\r\n    feedback: {\r\n      open: false,\r\n      message: '',\r\n      severity: ''\r\n    },\r\n    inputUpdate: 0,\r\n    autoDarkMode: 0,\r\n    savedRosters: []\r\n  },\r\n  reducers: {\r\n    toggleForceInputUpdate: state => {\r\n      state.inputUpdate = !state.inputUpdate;\r\n    },\r\n    closeFeedback: state => {\r\n      state.feedback.open = false;\r\n    },\r\n    showFeedback: multipleArgsReducer((state, action) => {\r\n      const [message, severity] = action.payload;\r\n      state.feedback = { open: true, message: message, severity: severity };\r\n    }),\r\n    setAutoDarkMode: (state, action) => {\r\n      state.autoDarkMode = action.payload;\r\n    },\r\n    setSavedLists: (state, action) => {\r\n      state.savedRosters = action.payload;\r\n    },\r\n    addSavedLists: (state, action) => {\r\n      if (!state.savedRosters.includes(action.payload))\r\n        state.savedRosters.push(action.payload);\r\n    },\r\n    deleteSavedLists: (state, action) => {\r\n      action.payload === 'Delete all'\r\n        ? (state.savedRosters = [])\r\n        : state.savedRosters.splice(state.savedRosters.indexOf(action.payload), 1);\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  toggleForceInputUpdate,\r\n  closeFeedback,\r\n  showFeedback,\r\n  setAutoDarkMode,\r\n  setSavedLists,\r\n  addSavedLists,\r\n  deleteSavedLists\r\n} = appStateSlice.actions;\r\nexport default appStateSlice.reducer;\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeFeedback } from 'store/appStateSlice';\r\n\r\nconst Alert = props => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\nconst ShowFeedback = () => {\r\n  const dispatch = useDispatch();\r\n  const feedback = useSelector(state => state.appState.feedback);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    dispatch(closeFeedback());\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={feedback.severity}>\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, List, ListItem, ListItemIcon } from '@material-ui/core';\r\n\r\nconst ListDialog = ({\r\n  anchor,\r\n  action,\r\n  options,\r\n  title,\r\n  onClose = null,\r\n  onOpen = null\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleOnClick = text => {\r\n    action(text);\r\n    if (onClose) onClose();\r\n    handleClose();\r\n  };\r\n\r\n  const opts =\r\n    options && typeof options[0] === 'string' ? options.map(o => [o, null]) : options;\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <List>\r\n          {opts.map(([text, icon]) => (\r\n            <ListItem button onClick={() => handleOnClick(text)} key={text}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              {text}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListDialog;\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Typography, Chip } from '@material-ui/core';\r\nimport ListDialog from '../ListDialog';\r\n\r\nconst UnitSelector = ({ unit, options, onClose }) => {\r\n  const name = unit.customName ? unit.customName : unit.name;\r\n\r\n  const setSelectedUnit = value => {\r\n    if (value !== unit.name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={setSelectedUnit}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Typography variant=\"h5\" onClick={openFunc}>\r\n            <Chip label={unit.points} color=\"primary\" />\r\n            &nbsp;&nbsp;\r\n            {name}\r\n            <ArrowDropDownIcon />\r\n          </Typography>\r\n          {unit.customName && (\r\n            <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n              {unit.name}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Choose unit type\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnitSelector;\r\n","import unitData from 'assets/dragonRampantData/units.json';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\n\r\nconst getData = (type = null) => {\r\n  const data = {\r\n    unitData: unitData,\r\n    unitNames: Object.keys(unitData).slice(1),\r\n    fantasticalRulesData: fantasticalRulesData,\r\n    rulesData: rulesData,\r\n    spellData: spellData\r\n  };\r\n  return type ? data[type] : data;\r\n};\r\n\r\nexport default getData;\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\nimport getData from 'store/getData';\r\n\r\nexport default function Options({ unit, onChange }) {\r\n  const optionsData = getData('unitData')[unit.name].options;\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = option => e => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter(val => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map(option => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Typography>\r\n                {option}{' '}\r\n                <Typography color=\"secondary\" component=\"span\">\r\n                  @{optionsData[option].points}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Typography, Box, Select, MenuItem } from '@material-ui/core';\r\nimport getData from 'store/getData';\r\n\r\nfunction FantasticalRules({ unit, onChange }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const unitData = getData('unitData')[unit.name];\r\n  const fantasticalRulesData = getData('fantasticalRulesData');\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter(val => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map(name => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onClick={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter(v => v !== name)\r\n                      ]\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}}\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={e => onChange({ ...unit, fantasticalRules: [...e.target.value] })}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Typography color=\"primary\">\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FantasticalRules;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nexport default function StatBlock({ stats }) {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, List, Container, ListItem } from '@material-ui/core';\r\n\r\nexport default function SpecialRules({ rules }) {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map(r => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst TextInputDialog = ({\r\n  anchor,\r\n  action,\r\n  title = '',\r\n  label = '',\r\n  defaultValue = '',\r\n  cancelText = 'Cancel',\r\n  okayText = 'okay',\r\n  margin = 'dense',\r\n  onClose = null,\r\n  onOpen = null\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState();\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleKeyPressed = (value, key) => {\r\n    if (key === 'Enter') {\r\n      setValue(value);\r\n      action(value);\r\n      handleClose();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n  const handleAction = () => {\r\n    action(value);\r\n    if (onClose) onClose();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin={margin}\r\n            label={label}\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={defaultValue || value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyPress={e => handleKeyPressed(e.target.value, e.key)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {cancelText}\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {okayText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInputDialog;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport getData from 'store/getData';\r\nimport { multipleArgsReducer } from './utils';\r\n\r\nconst rosterInitialState = {\r\n  name: 'New List',\r\n  totalPoints: 0,\r\n  nextID: 0,\r\n  units: {},\r\n  unitOrder: []\r\n};\r\n\r\nconst data = getData();\r\n\r\nconst getTotalPoints = state =>\r\n  Object.values(state.units).reduce((acc, unit) => acc + unit.points, 0);\r\n\r\nconst withPoints = state => ({\r\n  ...state,\r\n  totalPoints: getTotalPoints(state)\r\n});\r\n\r\nconst rosterSlice = createSlice({\r\n  name: 'roster',\r\n  initialState: rosterInitialState,\r\n  reducers: {\r\n    newRoster: () => ({ ...rosterInitialState }),\r\n    setRoster: (state, action) => withPoints({ ...action.payload }),\r\n    updateRoster: (state, action) => withPoints({ ...state, ...action.payload }),\r\n    addUnit: multipleArgsReducer((state, action) => {\r\n      let [unit, index] = action.payload;\r\n      unit = unit ? unit : { ...data.unitData.Unit, options: [], fantasticalRules: [] };\r\n      const id = state.nextID;\r\n      index == null\r\n        ? state.unitOrder.push(id)\r\n        : state.unitOrder.splice(index + 1, 0, id);\r\n      state.nextID += 1;\r\n      state.units[id] = unit;\r\n      state.totalPoints = getTotalPoints(state);\r\n    }),\r\n    setUnit: multipleArgsReducer((state, action) => {\r\n      const [id, name] = action.payload;\r\n      state.units[id] = { ...data.unitData[name], options: [], fantasticalRules: [] };\r\n      state.totalPoints = getTotalPoints(state);\r\n    }),\r\n    updateUnit: multipleArgsReducer((state, action) => {\r\n      const [id, newAttributes] = action.payload;\r\n      state.units[id] = { ...state.units[id], ...newAttributes };\r\n      state.totalPoints = getTotalPoints(state);\r\n    }),\r\n    removeUnit: (state, action) => {\r\n      const id = action.payload;\r\n      delete state.units[id];\r\n      state.totalPoints = getTotalPoints(state);\r\n      state.unitOrder.splice(state.unitOrder.indexOf(id), 1);\r\n    },\r\n    renameUnit: multipleArgsReducer((state, action) => {\r\n      const [id, name] = action.payload;\r\n      state.units[id].customName = name;\r\n    }),\r\n    moveUnit: multipleArgsReducer((state, action) => {\r\n      const [id, direction] = action.payload;\r\n      const index = state.unitOrder.indexOf(id);\r\n      const nextIndex = direction === 'left' ? index - 1 : index + 1;\r\n      if (nextIndex < 0 || nextIndex >= state.unitOrder.length) return state;\r\n      [state.unitOrder[nextIndex], state.unitOrder[index]] = [\r\n        state.unitOrder[index],\r\n        state.unitOrder[nextIndex]\r\n      ];\r\n    })\r\n  }\r\n});\r\n\r\nexport const {\r\n  newRoster,\r\n  setRoster,\r\n  updateRoster,\r\n  addUnit,\r\n  setUnit,\r\n  updateUnit,\r\n  removeUnit,\r\n  renameUnit,\r\n  moveUnit\r\n} = rosterSlice.actions;\r\nexport default rosterSlice.reducer;\r\n","import React from 'react';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport { IconButton, Box, Tooltip } from '@material-ui/core';\r\nimport TextInputDialog from '../TextInputDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addUnit, moveUnit, renameUnit } from 'store/rosterSlice';\r\n\r\nconst Actions = ({ id, unit }) => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n\r\n  const moveLeft = () => dispatch(moveUnit(id, 'left'));\r\n  const moveRight = () => dispatch(moveUnit(id, 'right'));\r\n  const cloneUnit = () => dispatch(addUnit(unit, roster.unitOrder.indexOf(id)));\r\n  const rename = value => dispatch(renameUnit(id, value));\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" width=\"97%\" style={{ height: 25, marginTop: 10 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextInputDialog\r\n            anchor={openFunc => (\r\n              <Tooltip title=\"Rename unit\">\r\n                <IconButton onClick={openFunc}>\r\n                  <TextFieldsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            action={rename}\r\n            title=\"Enter the name for the unit\"\r\n            label=\"Unit name\"\r\n            defaultValue={unit.customName}\r\n            okayText=\"Rename\"\r\n          />\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)'\r\n  }\r\n}));\r\n\r\nconst ExpandIcon = ({ expanded, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      className={clsx(classes.expand, {\r\n        [classes.expandOpen]: expanded\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      <ExpandMoreIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ExpandIcon;\r\n","import getData from 'store/getData';\r\n\r\nconst buildUnit = unit => {\r\n  const data = getData();\r\n  const unitData = data.unitData[unit.name];\r\n\r\n  unit = {\r\n    ...unitData,\r\n    customName: unit.customName || '',\r\n    options: [...unit.options],\r\n    fantasticalRules: [...unit.fantasticalRules]\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (let option of unit.options) {\r\n    option = unitData.options[option];\r\n    points += option.points;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter(val => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (let fant of unit.fantasticalRules) {\r\n    fant = data.fantasticalRulesData[fant];\r\n    points += fant.points;\r\n    unit.rules = [...unit.rules, fant.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nexport default buildUnit;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, CardHeader, Typography, Chip, Collapse } from '@material-ui/core';\r\nimport UnitSelector from './UnitSelector';\r\nimport Options from './Options';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport StatBlock from './StatBlock';\r\nimport SpecialRules from './SpecialRules';\r\nimport Actions from './Actions';\r\nimport ExpandIcon from '../ExpandIcon';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUnit, updateUnit, removeUnit } from 'store/rosterSlice';\r\nimport buildUnit from './buildUnit';\r\n\r\nfunction Unit({ id }) {\r\n  const data = getData();\r\n  const dispatch = useDispatch();\r\n  const unit = useSelector(state => state.roster.units[id]);\r\n  const ui = useSelector(state => state.ui);\r\n\r\n  const [expanded, setExpanded] = React.useState(true);\r\n  const handleExpandClick = () => setExpanded(!expanded);\r\n\r\n  const changeUnit = name => dispatch(setUnit(id, name));\r\n\r\n  const handleChange = unit => {\r\n    unit = buildUnit(unit);\r\n    dispatch(updateUnit(id, { ...unit }));\r\n  };\r\n\r\n  return (\r\n    <Card style={{ marginBottom: 25, maxWidth: 400, width: '100%' }}>\r\n      {ui.viewMode ? (\r\n        <CardHeader\r\n          title={\r\n            <>\r\n              <Typography variant=\"h5\">\r\n                <Chip label={unit.points} color=\"primary\" />\r\n                &nbsp;&nbsp;\r\n                {unit.customName ? unit.customName : unit.name}\r\n              </Typography>\r\n              {unit.customName &&\r\n                (expanded ? (\r\n                  <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n                    {unit.name}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography style={{ marginLeft: 45 }}>{unit.name}</Typography>\r\n                ))}\r\n            </>\r\n          }\r\n          action={<ExpandIcon expanded={expanded} onClick={handleExpandClick} />}\r\n        />\r\n      ) : (\r\n        <CardHeader\r\n          title={\r\n            <UnitSelector unit={unit} onClose={changeUnit} options={data.unitNames} />\r\n          }\r\n          action={\r\n            <Button onClick={() => dispatch(removeUnit(id))}>\r\n              <CloseIcon />\r\n            </Button>\r\n          }\r\n        />\r\n      )}\r\n      <Collapse in={!ui.viewMode || expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!ui.editMode && (\r\n            <>\r\n              <StatBlock stats={unit.stats} />\r\n              <SpecialRules rules={unit.rules} />\r\n            </>\r\n          )}\r\n          {!ui.viewMode && (\r\n            <>\r\n              <Options onChange={handleChange} unit={unit} />\r\n              <FantasticalRules onChange={handleChange} unit={unit} />\r\n              <Actions id={id} unit={unit} />\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Unit;\r\n","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Fab, Box, Typography } from '@material-ui/core';\r\nimport Unit from './Unit';\r\nimport buildUnit from './Unit/buildUnit';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addUnit } from 'store/rosterSlice';\r\n\r\nconst packRoster = roster => {\r\n  let units = { ...roster.units };\r\n  units = Object.values(units).map(unit => ({\r\n    name: unit.name,\r\n    customName: unit.customName || '',\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = compactRoster => {\r\n  const units = Object.values(compactRoster.units).map(unit => buildUnit(unit));\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = () => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n  const ui = useSelector(state => state.ui);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map(id => (\r\n          <Unit id={id} key={id} />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !ui.viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!ui.viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={() => dispatch(addUnit())}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import React from 'react';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { unpackRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nexport default function LoadList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n  const savedRosters = useSelector(state => state.appState.savedRosters);\r\n\r\n  const loadList = name => {\r\n    try {\r\n      const roster = unpackRoster(store.get('savedRosters')[name]);\r\n      dispatch(setRoster({ ...roster }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`${name} loaded!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not load ${name}!`, 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={loadList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Load List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <SaveOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Load List</Typography>}\r\n        </>\r\n      )}\r\n      options={savedRosters}\r\n      title=\"Choose List to load\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport store from 'store';\r\nimport { packRoster } from './Roster';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showFeedback, addSavedLists } from 'store/appStateSlice';\r\n\r\nexport default function SaveList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n\r\n  const saveList = () => {\r\n    if (roster.name === 'New List') return false;\r\n    let savedLists = store.get('savedRosters') || [];\r\n    savedLists = {\r\n      ...savedLists,\r\n      [roster.name]: { ...packRoster(roster) }\r\n    };\r\n    store.set('savedRosters', savedLists);\r\n    dispatch(addSavedLists(roster.name));\r\n    return true;\r\n  };\r\n\r\n  const saveRoster = () => {\r\n    if (saveList()) dispatch(showFeedback('Saved!', 'success'));\r\n    else dispatch(showFeedback('You have to give the list a name!', 'error'));\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, deleteSavedLists } from 'store/appStateSlice';\r\n\r\nexport default function DeleteList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeList = name => {\r\n    if (name === 'Delete all') {\r\n      store.set('savedRosters', []);\r\n    } else {\r\n      let savedLists = store.get('savedRosters');\r\n      delete savedLists[name];\r\n      store.set('savedRosters', savedLists);\r\n    }\r\n    dispatch(deleteSavedLists(name));\r\n    dispatch(showFeedback('Deleted!', 'success'));\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    savedLists.push('Delete all');\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={removeList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Delete List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Delete List</Typography>}\r\n        </>\r\n      )}\r\n      options={getSavedLists()}\r\n      title=\"Choose List to delete\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { packRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\n\r\nconst copyToClipboard = text => navigator.clipboard.writeText(text);\r\n\r\nconst ExportList = ({ onClose = null, showText = false }) => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n  const getImportableString = () => JSON.stringify(packRoster(roster));\r\n  const armyCost = roster.totalPoints;\r\n\r\n  const getListAsText = () => {\r\n    let text = [];\r\n    text.push(`${roster.name} @${armyCost} points`);\r\n    text.push('=====================================');\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n      text.push('-----------------------------------');\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        for (const option of options) text.push(`- ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const getListAsMarkdown = () => {\r\n    let text = [];\r\n    text.push(`**${roster.name} @${armyCost} points**`);\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `* ${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        text.push('');\r\n        for (const option of options) text.push(`    - ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const options = [\r\n    ['As an importable String', <ArrowDownwardIcon />, getImportableString],\r\n    ['As text', <FormatAlignLeftIcon />, getListAsText],\r\n    ['As markdown text', <FormatAlignJustifyIcon />, getListAsMarkdown]\r\n  ];\r\n\r\n  const exportList = text => {\r\n    let exportFunc = options.reduce(\r\n      (acc, opt) => (opt[0] === text ? opt[2] : acc),\r\n      null\r\n    );\r\n\r\n    try {\r\n      const list = exportFunc(roster);\r\n      copyToClipboard(list);\r\n      dispatch(showFeedback('List copied to clipboard!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not export the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={exportList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Export\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Export List</Typography>}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Chose how to export\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExportList;\r\n","import React from 'react';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { unpackRoster } from './Roster';\r\nimport TextInputDialog from './TextInputDialog';\r\nimport getData from 'store/getData';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nconst ImportList = ({ onClose = null, showText = false }) => {\r\n  const data = getData();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImport = value => {\r\n    if (!value) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(value), data);\r\n      dispatch(setRoster({ ...list }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback('List imported!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not import the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextInputDialog\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Import list\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Import list</Typography>}\r\n        </>\r\n      )}\r\n      action={handleImport}\r\n      title=\"Enter the import string\"\r\n      label=\"Exported String\"\r\n      okayText=\"Import\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ImportList;\r\n","import React from 'react';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst Backup = ({ showText = null, onClose = null }) => {\r\n  const backup = () => {\r\n    const savedLists = JSON.stringify(store.get('savedRosters') || []);\r\n    const file = new Blob([savedLists], { type: 'text/plain;charset=utf-8' });\r\n\r\n    let date = new Date();\r\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\r\n    date = new Date(date.getTime() - offsetMs);\r\n    date = date\r\n      .toISOString()\r\n      .slice(0, 10)\r\n      .replace(/-/g, '/');\r\n\r\n    saveAs(file, `${date}_DRAB.sav`);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={backup}>\r\n          <BackupIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={backup}>Backup</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Backup;\r\n","import React from 'react';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  showFeedback,\r\n  toggleForceInputUpdate,\r\n  setSavedLists\r\n} from 'store/appStateSlice';\r\n\r\nconst Restore = ({ showText = null, onClose = null }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let fileReader;\r\n  const fileDialog = React.useRef();\r\n\r\n  const restore = () => {\r\n    try {\r\n      let savedLists = store.get('savedRosters') || [];\r\n      let content = fileReader.result;\r\n      content = JSON.parse(content);\r\n      savedLists = { ...savedLists, ...content };\r\n      store.set('savedRosters', savedLists);\r\n      dispatch(setSavedLists(savedLists));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`Restored!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not restore!`, 'error'));\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const handleFileChosen = event => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = restore;\r\n    fileReader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const openFileDialog = () => fileDialog.current.click();\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={openFileDialog}>\r\n          <RestorePageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={openFileDialog}>Restore</Typography>}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileDialog}\r\n        style={{ display: 'none' }}\r\n        id=\"restoreFile\"\r\n        accept=\".sav\"\r\n        onChange={handleFileChosen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Restore;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport store from 'store';\r\nimport { multipleArgsReducer } from './utils';\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: {\r\n    viewMode: false,\r\n    editMode: false,\r\n    darkMode: null,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true\r\n  },\r\n  reducers: {\r\n    setUI: (state, action) => {\r\n      store.set('uiOptions', { ...action.payload });\r\n      return { ...action.payload };\r\n    },\r\n    setUIOption: multipleArgsReducer((state, action) => {\r\n      const [option, value] = action.payload;\r\n      store.set('uiOptions', { ...state, [option]: value });\r\n      state[option] = value;\r\n    }),\r\n    updateUI: (state, action) => {\r\n      store.set('uiOptions', { ...state, ...action.payload });\r\n      return { ...state, ...action.payload };\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setUI, setUIOption, updateUI } = uiSlice.actions;\r\nexport default uiSlice.reducer;\r\n","import React from 'react';\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/uiSlice';\r\n\r\nconst Darkmode = showText => {\r\n  let darkMode = useSelector(state => state.ui.darkMode);\r\n  const autoDarkMode = useSelector(state => state.appState.autoDarkMode);\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => {\r\n    if (darkMode == null) darkMode = autoDarkMode;\r\n    dispatch(updateUI({ darkMode: !darkMode }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Dark Mode\">\r\n        <IconButton onClick={handleClick}>\r\n          <BrightnessHighIcon color={darkMode ? 'inherit' : 'disabled'} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && (\r\n        <Typography\r\n          color={darkMode ? 'inherit' : 'textSecondary'}\r\n          onClick={handleClick}\r\n        >\r\n          Dark Mode\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Darkmode;\r\n","import React from 'react';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {\r\n  Dialog,\r\n  Tooltip,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n  Box,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nconst About = ({ onClose = null }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load List\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {<Typography onClick={handleOpen}>About</Typography>}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={{ textAlign: 'center' }}>About</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body1\">\r\n            A simple Army Builder for the tabletop game{' '}\r\n            {<a href=\"https://ospreypublishing.com/dragon-rampant\">Dragon Rampant</a>}.\r\n          </Typography>\r\n          <Box display=\"flex\" style={{ marginTop: 25 }}>\r\n            <Chip\r\n              label=\"View on Github\"\r\n              icon={<GitHubIcon />}\r\n              component=\"a\"\r\n              href=\"#chip\"\r\n              clickable\r\n            />\r\n            <Box flexGrow={1}></Box>\r\n            <Chip label=\"License: MIT\" />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { List, ListItem, Drawer, Divider } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\nimport Backup from './Backup';\r\nimport Restore from './Restore';\r\nimport DarkMode from './DarkMode';\r\nimport About from './About';\r\n\r\nexport default function SideMenu() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Backup'}>\r\n            <Backup onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Restore'}>\r\n            <Restore onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'DarkMode'}>\r\n            <DarkMode />\r\n          </ListItem>\r\n          <ListItem button key={'About'}>\r\n            <About onClose={handleClose} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppBar as AppBarMaterial, Box } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton, Fab, Tooltip, Hidden } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport SideMenu from './SideMenu';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/uiSlice';\r\nimport { newRoster } from 'store/rosterSlice';\r\n\r\nexport default function AppBar() {\r\n  const dispatch = useDispatch();\r\n  const ui = useSelector(state => state.ui);\r\n  const armyCost = useSelector(state => state.roster.totalPoints);\r\n\r\n  const changeViewMode = (clicked, newState) => {\r\n    const notClicked = clicked === 'viewMode' ? 'editMode' : 'viewMode';\r\n    let newStates = { [clicked]: newState };\r\n    if (newState) newStates = { ...newStates, [notClicked]: false };\r\n    dispatch(updateUI(newStates));\r\n  };\r\n\r\n  const ToggleUIButton = ({ option, Icon, title, onClick }) => (\r\n    <Tooltip title={title}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        onClick={() => {\r\n          onClick(option, !ui[option]);\r\n        }}\r\n      >\r\n        <Icon fontSize=\"small\" color={ui[option] ? 'inherit' : 'disabled'} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton color=\"inherit\" onClick={() => dispatch(newRoster())}>\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList />\r\n            <LoadList />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleUIButton\r\n              option=\"viewMode\"\r\n              Icon={VisibilityIcon}\r\n              title=\"View mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <ToggleUIButton\r\n              option=\"editMode\"\r\n              Icon={EditIcon}\r\n              title=\"Edit mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateRoster } from 'store/rosterSlice';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    border: 0,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst ListName = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const rosterName = useSelector(state => state.roster.name);\r\n  const inputUpdate = useSelector(state => state.appState.inputUpdate);\r\n\r\n  return (\r\n    <FormControl>\r\n      <Typography\r\n        className={classes.root}\r\n        variant=\"h4\"\r\n        key={inputUpdate}\r\n        component=\"input\"\r\n        value={rosterName}\r\n        onChange={e => dispatch(updateRoster({ name: e.target.value }))}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ListName;\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/uiSlice';\r\n\r\nconst rulesData = getData('rulesData');\r\n\r\nexport default function RulesSummary() {\r\n  const dispatch = useDispatch();\r\n  const rulesSummaryExpanded = useSelector(state => state.ui.rulesSummaryExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  let specialRules = [\r\n    ...Object.values(units).reduce(\r\n      (acc, unit) =>\r\n        unit.rules.reduce(\r\n          (acc, rule) =>\r\n            rulesData[rulesData[rule]] ? acc.add(rulesData[rule]) : acc.add(rule),\r\n          acc\r\n        ),\r\n      new Set()\r\n    )\r\n  ].sort();\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() =>\r\n        dispatch(setUIOption('rulesSummaryExpanded', !rulesSummaryExpanded))\r\n      }\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map(rule => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n  Box\r\n} from '@material-ui/core';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/uiSlice';\r\n\r\nconst spellData = getData('spellData');\r\nconst rulesData = getData('rulesData');\r\n\r\nexport default function SpellTable() {\r\n  const dispatch = useDispatch();\r\n  const spellsExpanded = useSelector(state => state.ui.spellsExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  const [open, setOpen] = useState([...Array(Object.keys(spellData))].map(() => false));\r\n  let specialRules = [\r\n    ...Object.values(units).reduce(\r\n      (acc, unit) =>\r\n        unit.rules.reduce(\r\n          (acc, rule) =>\r\n            rulesData[rulesData[rule]] ? acc.add(rulesData[rule]) : acc.add(rule),\r\n          acc\r\n        ),\r\n      new Set()\r\n    )\r\n  ].sort();\r\n\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleSpellClick = index => {\r\n    const newOpen = [...open];\r\n    newOpen[index] = !open[index];\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => dispatch(setUIOption('spellsExpanded', !spellsExpanded))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <Hidden mdDown>\r\n              <TableContainer>\r\n                <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headspelltable\">\r\n                      <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                      <Hidden smDown>\r\n                        <TableCell align=\"center\">Difficulty</TableCell>\r\n                      </Hidden>\r\n                      <Hidden mdUp>\r\n                        <TableCell align=\"center\">Dif</TableCell>\r\n                      </Hidden>\r\n                      <TableCell>Target</TableCell>\r\n                      <TableCell>Duration</TableCell>\r\n                      <TableCell>Effect</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.values(spellData).map(spell => (\r\n                      <TableRow key={spell.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {spell.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                        <TableCell>{spell.target}</TableCell>\r\n                        <TableCell>{spell.duration}</TableCell>\r\n                        <TableCell>{spell.effect}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Hidden>\r\n            <Hidden smUp>\r\n              <List>\r\n                {Object.values(spellData).map((spell, index) => (\r\n                  <Box key={index}>\r\n                    <ListItem\r\n                      key={spell.name + 'small'}\r\n                      button\r\n                      onClick={() => handleSpellClick(index)}\r\n                    >\r\n                      <ListItemText primary={spell.name} />\r\n                      {open[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </ListItem>\r\n                    <Collapse in={open[index]} timeout=\"auto\" unmountOnExit>\r\n                      <List key={spell.name + 'list'} dense style={{ paddingLeft: 20 }}>\r\n                        <ListItem key={spell.name + spell.difficulty}>\r\n                          <ListItemText\r\n                            primary=\"Difficulty: \"\r\n                            secondary={spell.difficulty}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.target}>\r\n                          <ListItemText primary=\"Target: \" secondary={spell.target} />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.duration}>\r\n                          <ListItemText\r\n                            primary=\"Duration: \"\r\n                            secondary={spell.duration}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.effect}>\r\n                          <ListItemText primary=\"Effect: \" secondary={spell.effect} />\r\n                        </ListItem>\r\n                      </List>\r\n                    </Collapse>\r\n                  </Box>\r\n                ))}\r\n              </List>\r\n            </Hidden>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  LabelList,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst CustomLabel = ({ x, y, width, value }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <text\r\n      x={x + width / 2}\r\n      y={y - 5}\r\n      fill={theme.palette.text.primary}\r\n      textAnchor=\"middle\"\r\n    >\r\n      {value}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst CustomXAxis = ({ x, y, payload }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <text x={x} y={y + 10} fill={theme.palette.text.primary} textAnchor=\"middle\">\r\n      {payload.value}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport default function UnitDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" tick={<CustomXAxis />} />\r\n        <YAxis />\r\n        <Legend wrapperStyle={{ bottom: 0, left: 50 }} />\r\n        <Bar dataKey=\"Units\" fill={colors[0]} minPointSize={3}>\r\n          <LabelList dataKey=\"Units\" position=\"top\" content={<CustomLabel />} />\r\n        </Bar>\r\n        <Bar dataKey=\"Points\" fill={colors[1]} minPointSize={3}>\r\n          <LabelList dataKey=\"Points\" position=\"top\" content={<CustomLabel />} />\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Cell, Tooltip, Legend, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  useMediaQuery\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport UnitDistributionChart from './UnitDistributionChart';\r\nimport PointDistributionChart from './PointDistributionChart';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/uiSlice';\r\n\r\nconst unitData = getData('unitData');\r\nconst fantasticalRulesData = getData('fantasticalRulesData');\r\n\r\nexport default function Statistics() {\r\n  const dispatch = useDispatch();\r\n  const statisticsExpanded = useSelector(state => state.ui.statisticsExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + unitData[unit.name].options[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const totalPoints = useSelector(state => state.roster.totalPoints);\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = Object.values(units).filter(u => u.type === 'mounted');\r\n  const foot = Object.values(units).filter(u => u.type === 'foot');\r\n  const ranged = Object.values(units).filter(u => u.stats.shoot > 0);\r\n  const unitsCost = Object.values(units).reduce(\r\n    (acc, u) => acc + unitData[u.name].points,\r\n    0\r\n  );\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: Object.values(mounted).reduce((acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: Object.values(foot).reduce((acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: Object.values(ranged).reduce((acc, u) => acc + u.points, 0)\r\n    }\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints }\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => dispatch(setUIOption('statisticsExpanded', !statisticsExpanded))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAutoDarkMode } from 'store/appStateSlice';\r\n\r\nconst useUserTheme = () => {\r\n  const dispatch = useDispatch();\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const hasDarkMode = useSelector(state => state.ui.darkMode);\r\n  const darkMode = hasDarkMode == null ? prefersDarkMode : hasDarkMode;\r\n  dispatch(setAutoDarkMode(darkMode));\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: darkMode ? 'dark' : 'light'\r\n        }\r\n      }),\r\n    [darkMode]\r\n  );\r\n  return theme;\r\n};\r\n\r\nexport default useUserTheme;\r\n","import React, { useEffect } from 'react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Container, CssBaseline } from '@material-ui/core';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport AppBar from './AppBar';\r\nimport ListName from './ListName';\r\nimport Roster from './Roster';\r\nimport RulesSummary from './RulesSummary';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/uiSlice';\r\nimport { setSavedLists } from 'store/appStateSlice';\r\nimport useUserTheme from 'hooks/useUserTheme';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateUI({ ...store.get('uiOptions') }));\r\n    dispatch(setSavedLists(Object.keys(store.get('savedRosters')) || []));\r\n  }, [dispatch]);\r\n\r\n  const theme = useUserTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container>\r\n        <AppBar />\r\n        <ListName />\r\n        <Roster />\r\n        <RulesSummary />\r\n        <SpellTable />\r\n        <Statistics />\r\n        <ShowFeedback />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport uiReducer from './uiSlice';\r\nimport rosterReducer from './rosterSlice';\r\nimport appStateReducer from './appStateSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ui: uiReducer,\r\n    roster: rosterReducer,\r\n    appState: appStateReducer\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}