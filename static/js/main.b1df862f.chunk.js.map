{"version":3,"sources":["store/utils.js","store/appStateSlice.js","components/ShowFeedback.js","components/ListDialog.js","components/Unit/UnitSelector.js","store/getData.js","components/Unit/Options.js","components/Unit/FantasticalRules.js","components/Unit/StatBlock.js","components/Unit/SpecialRules.js","components/TextInputDialog.js","store/rosterSlice.js","components/Unit/Actions.js","components/ExpandIcon.js","components/Unit/buildUnit.js","components/Unit/Unit.js","components/Roster.js","components/LoadList.js","components/SaveList.js","components/DeleteList.js","components/ExportList.js","components/ImportList.js","components/Backup.js","components/Restore.js","components/About.js","components/SideMenu.js","store/uiSlice.js","components/AppBar.js","components/ListName.js","components/RulesSummary.js","components/SpellTable.js","components/Statistics/UnitDistributionChart.js","components/Statistics/PointDistributionChart.js","components/Statistics/Statistics.js","components/App.js","store/store.js","serviceWorker.js","index.js"],"names":["spreadArgs","args","payload","multipleArgsReducer","reducer","prepare","appStateSlice","createSlice","name","initialState","feedback","open","message","severity","inputUpdate","reducers","toggleForceInputUpdate","state","closeFeedback","showFeedback","action","actions","Alert","props","elevation","variant","ShowFeedback","dispatch","useDispatch","useSelector","appState","handleClose","event","reason","Snackbar","autoHideDuration","onClose","ListDialog","anchor","options","title","onOpen","React","useState","setOpen","opts","map","o","Dialog","DialogTitle","List","text","icon","ListItem","button","onClick","handleOnClick","key","ListItemIcon","UnitSelector","unit","customName","value","openFunc","Typography","Chip","label","points","color","style","marginLeft","marginBottom","getData","type","data","unitData","unitNames","Object","keys","slice","fantasticalRulesData","rulesData","spellData","Options","onChange","optionsData","length","handleChange","option","e","newUnit","target","checked","filter","val","FormControl","component","marginTop","FormLabel","FormGroup","FormControlLabel","control","Checkbox","includes","FantasticalRules","fantasticalRules","toCheck","excluded","handleOpen","v","width","height","Select","IconComponent","Box","multiple","input","Input","renderValue","MenuItem","indexOf","StatBlock","stats","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","size","Hidden","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","SpecialRules","rules","Container","r","TextInputDialog","defaultValue","cancelText","okayText","margin","setValue","DialogContent","TextField","autoFocus","fullWidth","onKeyPress","handleKeyPressed","DialogActions","Button","rosterInitialState","totalPoints","nextID","units","unitOrder","getTotalPoints","values","reduce","acc","setState","rosterSlice","newRoster","setRoster","updateRoster","addUnit","index","Unit","id","push","splice","setUnit","updateUnit","newAttributes","removeUnit","renameUnit","moveUnit","direction","nextIndex","Actions","roster","display","alignItems","Tooltip","IconButton","flexGrow","useStyles","makeStyles","theme","expand","transform","transition","transitions","create","duration","shortest","expandOpen","ExpandIcon","expanded","classes","className","clsx","buildUnit","setStats","entries","add","rule","remove","fant","ui","setExpanded","Card","maxWidth","viewMode","CardHeader","Collapse","in","timeout","unmountOnExit","CardContent","editMode","packRoster","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","LoadList","showText","store","get","err","savedLists","list","getSavedLists","SaveList","saveRoster","set","saveList","DeleteList","ExportList","armyCost","JSON","stringify","join","exportFunc","opt","navigator","clipboard","writeText","copyToClipboard","ImportList","parse","Backup","backup","file","Blob","date","Date","offsetMs","getTimezoneOffset","getTime","toISOString","replace","saveAs","Restore","fileReader","fileDialog","useRef","restore","content","result","openFileDialog","current","click","ref","accept","FileReader","onloadend","readAsText","files","About","textAlign","href","clickable","SideMenu","toggleDrawer","Drawer","Divider","uiSlice","rulesSummaryExpanded","spellsExpanded","statisticsExpanded","setUI","setUIOption","updateUI","AppBar","changeViewMode","clicked","newState","notClicked","newStates","ToggleUIButton","Icon","fontSize","position","Toolbar","smDown","mdUp","VisibilityIcon","EditIcon","ListName","rosterName","border","RulesSummary","specialRules","Set","sort","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","primary","secondary","SpellTable","Array","spellcasterInRoster","mdDown","minWidth","TableHead","align","spell","scope","difficulty","effect","newOpen","handleSpellClick","dense","paddingLeft","UnitDistributionChart","colors","top","right","left","bottom","strokeDasharray","dataKey","fill","minPointSize","PointDistributionChart","renderCustomizedLabel","labelLine","outerRadius","entry","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","x","cos","y","sin","percentValue","toFixed","textAnchor","dominantBaseline","Statistics","useTheme","chipSize","useMediaQuery","breakpoints","down","optionPoints","accumulator","fantasticalPoints","COLORS","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","App","useEffect","configureStore","uiReducer","rosterReducer","appStateReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b1df862f.chunk.js","sourcesContent":["const spreadArgs = (...args) => ({ payload: [...args] });\r\n\r\nconst multipleArgsReducer = reducer => ({ reducer: reducer, prepare: spreadArgs });\r\n\r\nexport { multipleArgsReducer };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { multipleArgsReducer } from './utils';\r\n\r\nconst appStateSlice = createSlice({\r\n  name: 'appState',\r\n  initialState: {\r\n    feedback: {\r\n      open: false,\r\n      message: '',\r\n      severity: ''\r\n    },\r\n    inputUpdate: 0\r\n  },\r\n  reducers: {\r\n    toggleForceInputUpdate: state => {\r\n      state.inputUpdate = !state.inputUpdate;\r\n    },\r\n    closeFeedback: state => {\r\n      state.feedback.open = false;\r\n    },\r\n    showFeedback: multipleArgsReducer((state, action) => {\r\n      const [message, severity] = action.payload;\r\n      state.feedback = { open: true, message: message, severity: severity };\r\n    })\r\n  }\r\n});\r\n\r\nexport const {\r\n  toggleForceInputUpdate,\r\n  closeFeedback,\r\n  showFeedback\r\n} = appStateSlice.actions;\r\nexport default appStateSlice.reducer;\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeFeedback } from 'store/appStateSlice';\r\n\r\nconst Alert = props => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\nconst ShowFeedback = () => {\r\n  const dispatch = useDispatch();\r\n  const feedback = useSelector(state => state.appState.feedback);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    dispatch(closeFeedback());\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={feedback.severity}>\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, List, ListItem, ListItemIcon } from '@material-ui/core';\r\n\r\nconst ListDialog = ({\r\n  anchor,\r\n  action,\r\n  options,\r\n  title,\r\n  onClose = null,\r\n  onOpen = null\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleOnClick = text => {\r\n    action(text);\r\n    if (onClose) onClose();\r\n    handleClose();\r\n  };\r\n\r\n  const opts = typeof options[0] === 'string' ? options.map(o => [o, null]) : options;\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <List>\r\n          {opts.map(([text, icon]) => (\r\n            <ListItem button onClick={() => handleOnClick(text)} key={text}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              {text}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListDialog;\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Typography, Chip } from '@material-ui/core';\r\nimport ListDialog from '../ListDialog';\r\n\r\nconst UnitSelector = ({ unit, options, onClose }) => {\r\n  const name = unit.customName ? unit.customName : unit.name;\r\n\r\n  const setSelectedUnit = value => {\r\n    if (value !== unit.name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={setSelectedUnit}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Typography variant=\"h5\" onClick={openFunc}>\r\n            <Chip label={unit.points} color=\"primary\" />\r\n            &nbsp;&nbsp;\r\n            {name}\r\n            <ArrowDropDownIcon />\r\n          </Typography>\r\n          {unit.customName && (\r\n            <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n              {unit.name}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Choose unit type\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnitSelector;\r\n","import unitData from 'assets/dragonRampantData/units.json';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\n\r\nconst getData = (type = null) => {\r\n  const data = {\r\n    unitData: unitData,\r\n    unitNames: Object.keys(unitData).slice(1),\r\n    fantasticalRulesData: fantasticalRulesData,\r\n    rulesData: rulesData,\r\n    spellData: spellData\r\n  };\r\n  return type ? data[type] : data;\r\n};\r\n\r\nexport default getData;\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\nimport getData from 'store/getData';\r\n\r\nexport default function Options({ unit, onChange }) {\r\n  const optionsData = getData('unitData')[unit.name].options;\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = option => e => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter(val => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map(option => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Typography>\r\n                {option}{' '}\r\n                <Typography color=\"secondary\" component=\"span\">\r\n                  @{optionsData[option].points}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Typography, Box, Select, MenuItem } from '@material-ui/core';\r\nimport getData from 'store/getData';\r\n\r\nfunction FantasticalRules({ unit, onChange }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const unitData = getData('unitData')[unit.name];\r\n  const fantasticalRulesData = getData('fantasticalRulesData');\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter(val => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map(name => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onClick={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter(v => v !== name)\r\n                      ]\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}}\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={e => onChange({ ...unit, fantasticalRules: [...e.target.value] })}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Typography color=\"primary\">\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FantasticalRules;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nexport default function StatBlock({ stats }) {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, List, Container, ListItem } from '@material-ui/core';\r\n\r\nexport default function SpecialRules({ rules }) {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map(r => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst TextInputDialog = ({\r\n  anchor,\r\n  action,\r\n  title = '',\r\n  label = '',\r\n  defaultValue = '',\r\n  cancelText = 'Cancel',\r\n  okayText = 'okay',\r\n  margin = 'dense',\r\n  onClose = null,\r\n  onOpen = null\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState();\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleKeyPressed = (value, key) => {\r\n    if (key === 'Enter') {\r\n      setValue(value);\r\n      action(value);\r\n      handleClose();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n  const handleAction = () => {\r\n    action(value);\r\n    if (onClose) onClose();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin={margin}\r\n            label={label}\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={defaultValue || value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyPress={e => handleKeyPressed(e.target.value, e.key)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {cancelText}\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {okayText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInputDialog;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport getData from 'store/getData';\r\nimport { multipleArgsReducer } from './utils';\r\n\r\nconst rosterInitialState = {\r\n  name: 'New List',\r\n  totalPoints: 0,\r\n  nextID: 0,\r\n  units: {},\r\n  unitOrder: []\r\n};\r\n\r\nconst data = getData();\r\n\r\nconst getTotalPoints = state =>\r\n  Object.values(state.units).reduce((acc, unit) => acc + unit.points, 0);\r\n\r\nconst setState = state => ({\r\n  ...state,\r\n  totalPoints: getTotalPoints(state)\r\n});\r\n\r\nconst rosterSlice = createSlice({\r\n  name: 'roster',\r\n  initialState: rosterInitialState,\r\n  reducers: {\r\n    newRoster: () => ({ ...rosterInitialState }),\r\n    setRoster: (state, action) => setState({ ...action.payload }),\r\n    updateRoster: (state, action) => setState({ ...state, ...action.payload }),\r\n    addUnit: multipleArgsReducer((state, action) => {\r\n      let [unit, index] = action.payload;\r\n      unit = unit ? unit : { ...data.unitData.Unit, options: [], fantasticalRules: [] };\r\n      const id = state.nextID;\r\n      index == null\r\n        ? state.unitOrder.push(id)\r\n        : state.unitOrder.splice(index + 1, 0, id);\r\n      state.nextID += 1;\r\n      state.units[id] = unit;\r\n      state.totalPoints = getTotalPoints(state);\r\n    }),\r\n    setUnit: multipleArgsReducer((state, action) => {\r\n      const [id, name] = action.payload;\r\n      state.units[id] = { ...data.unitData[name], options: [], fantasticalRules: [] };\r\n      state.totalPoints = getTotalPoints(state);\r\n    }),\r\n    updateUnit: multipleArgsReducer((state, action) => {\r\n      const [id, newAttributes] = action.payload;\r\n      state.units[id] = { ...state.units[id], ...newAttributes };\r\n      state.totalPoints = getTotalPoints(state);\r\n    }),\r\n    removeUnit: (state, action) => {\r\n      const id = action.payload;\r\n      delete state.units[id];\r\n      state.totalPoints = getTotalPoints(state);\r\n      state.unitOrder.splice(state.unitOrder.indexOf(id), 1);\r\n    },\r\n    renameUnit: multipleArgsReducer((state, action) => {\r\n      const [id, name] = action.payload;\r\n      state.units[id].customName = name;\r\n    }),\r\n    moveUnit: multipleArgsReducer((state, action) => {\r\n      const [id, direction] = action.payload;\r\n      const index = state.unitOrder.indexOf(id);\r\n      const nextIndex = direction === 'left' ? index - 1 : index + 1;\r\n      if (nextIndex < 0 || nextIndex >= state.unitOrder.length) return state;\r\n      [state.unitOrder[nextIndex], state.unitOrder[index]] = [\r\n        state.unitOrder[index],\r\n        state.unitOrder[nextIndex]\r\n      ];\r\n    })\r\n  }\r\n});\r\n\r\nexport const {\r\n  newRoster,\r\n  setRoster,\r\n  updateRoster,\r\n  addUnit,\r\n  setUnit,\r\n  updateUnit,\r\n  removeUnit,\r\n  renameUnit,\r\n  moveUnit\r\n} = rosterSlice.actions;\r\nexport default rosterSlice.reducer;\r\n","import React from 'react';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport { IconButton, Box, Tooltip } from '@material-ui/core';\r\nimport TextInputDialog from '../TextInputDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addUnit, moveUnit, renameUnit } from 'store/rosterSlice';\r\n\r\nconst Actions = ({ id, unit }) => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n\r\n  const moveLeft = () => dispatch(moveUnit(id, 'left'));\r\n  const moveRight = () => dispatch(moveUnit(id, 'right'));\r\n  const cloneUnit = () => dispatch(addUnit(unit, roster.unitOrder.indexOf(id)));\r\n  const rename = value => dispatch(renameUnit(id, value));\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" width=\"97%\" style={{ height: 25, marginTop: 10 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextInputDialog\r\n            anchor={openFunc => (\r\n              <Tooltip title=\"Rename unit\">\r\n                <IconButton onClick={openFunc}>\r\n                  <TextFieldsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            action={rename}\r\n            title=\"Enter the name for the unit\"\r\n            label=\"Unit name\"\r\n            defaultValue={unit.customName}\r\n            okayText=\"Rename\"\r\n          />\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)'\r\n  }\r\n}));\r\n\r\nconst ExpandIcon = ({ expanded, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      className={clsx(classes.expand, {\r\n        [classes.expandOpen]: expanded\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      <ExpandMoreIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ExpandIcon;\r\n","import getData from 'store/getData';\r\n\r\nconst buildUnit = unit => {\r\n  const data = getData();\r\n  const unitData = data.unitData[unit.name];\r\n\r\n  unit = {\r\n    ...unitData,\r\n    customName: unit.customName || '',\r\n    options: [...unit.options],\r\n    fantasticalRules: [...unit.fantasticalRules]\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (let option of unit.options) {\r\n    option = unitData.options[option];\r\n    points += option.points;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter(val => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (let fant of unit.fantasticalRules) {\r\n    fant = data.fantasticalRulesData[fant];\r\n    points += fant.points;\r\n    unit.rules = [...unit.rules, fant.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nexport default buildUnit;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, CardHeader, Typography, Chip, Collapse } from '@material-ui/core';\r\nimport UnitSelector from './UnitSelector';\r\nimport Options from './Options';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport StatBlock from './StatBlock';\r\nimport SpecialRules from './SpecialRules';\r\nimport Actions from './Actions';\r\nimport ExpandIcon from '../ExpandIcon';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUnit, updateUnit, removeUnit } from 'store/rosterSlice';\r\nimport buildUnit from './buildUnit';\r\n\r\nfunction Unit({ id }) {\r\n  const data = getData();\r\n  const dispatch = useDispatch();\r\n  const unit = useSelector(state => state.roster.units[id]);\r\n  const ui = useSelector(state => state.ui);\r\n\r\n  const [expanded, setExpanded] = React.useState(true);\r\n  const handleExpandClick = () => setExpanded(!expanded);\r\n\r\n  const changeUnit = name => dispatch(setUnit(id, name));\r\n\r\n  const handleChange = unit => {\r\n    unit = buildUnit(unit);\r\n    dispatch(updateUnit(id, { ...unit }));\r\n  };\r\n\r\n  return (\r\n    <Card style={{ marginBottom: 25, maxWidth: 400, width: '100%' }}>\r\n      {ui.viewMode ? (\r\n        <CardHeader\r\n          title={\r\n            <>\r\n              <Typography variant=\"h5\">\r\n                <Chip label={unit.points} color=\"primary\" />\r\n                &nbsp;&nbsp;\r\n                {unit.customName ? unit.customName : unit.name}\r\n              </Typography>\r\n              {unit.customName &&\r\n                (expanded ? (\r\n                  <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n                    {unit.name}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography style={{ marginLeft: 45 }}>{unit.name}</Typography>\r\n                ))}\r\n            </>\r\n          }\r\n          action={<ExpandIcon expanded={expanded} onClick={handleExpandClick} />}\r\n        />\r\n      ) : (\r\n        <CardHeader\r\n          title={\r\n            <UnitSelector unit={unit} onClose={changeUnit} options={data.unitNames} />\r\n          }\r\n          action={\r\n            <Button onClick={() => dispatch(removeUnit(id))}>\r\n              <CloseIcon />\r\n            </Button>\r\n          }\r\n        />\r\n      )}\r\n      <Collapse in={!ui.viewMode || expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!ui.editMode && (\r\n            <>\r\n              <StatBlock stats={unit.stats} />\r\n              <SpecialRules rules={unit.rules} />\r\n            </>\r\n          )}\r\n          {!ui.viewMode && (\r\n            <>\r\n              <Options onChange={handleChange} unit={unit} />\r\n              <FantasticalRules onChange={handleChange} unit={unit} />\r\n              <Actions id={id} unit={unit} />\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Unit;\r\n","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Fab, Box, Typography } from '@material-ui/core';\r\nimport Unit from './Unit';\r\nimport buildUnit from './Unit/buildUnit';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addUnit } from 'store/rosterSlice';\r\n\r\nconst packRoster = roster => {\r\n  let units = { ...roster.units };\r\n  units = Object.values(units).map(unit => ({\r\n    name: unit.name,\r\n    customName: unit.customName || '',\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = compactRoster => {\r\n  const units = Object.values(compactRoster.units).map(unit => buildUnit(unit));\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = () => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n  const ui = useSelector(state => state.ui);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map(id => (\r\n          <Unit id={id} key={id} />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !ui.viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!ui.viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={() => dispatch(addUnit())}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import React from 'react';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { unpackRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nexport default function LoadList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const loadList = name => {\r\n    try {\r\n      const roster = unpackRoster(store.get('savedRosters')[name]);\r\n      dispatch(setRoster({ ...roster }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`${name} loaded!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not load ${name}!`, 'error'));\r\n    }\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={loadList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Load List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <SaveOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Load List</Typography>}\r\n        </>\r\n      )}\r\n      options={getSavedLists()}\r\n      title=\"Choose List to load\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport store from 'store';\r\nimport { packRoster } from './Roster';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\n\r\nexport default function SaveList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n\r\n  const saveList = () => {\r\n    if (roster.name === 'New List') return false;\r\n    let savedLists = store.get('savedRosters') || [];\r\n    savedLists = {\r\n      ...savedLists,\r\n      [roster.name]: { ...packRoster(roster) }\r\n    };\r\n    store.set('savedRosters', savedLists);\r\n    return true;\r\n  };\r\n\r\n  const saveRoster = () => {\r\n    if (saveList()) dispatch(showFeedback('Saved!', 'success'));\r\n    else dispatch(showFeedback('You have to give the list a name!', 'error'));\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\n\r\nexport default function DeleteList({ onClose = null, showText = false }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeList = name => {\r\n    if (name === 'Delete all') store.set('savedRosters', []);\r\n    else {\r\n      let savedLists = store.get('savedRosters');\r\n      delete savedLists[name];\r\n      store.set('savedRosters', savedLists);\r\n    }\r\n    dispatch(showFeedback('Deleted!', 'success'));\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    savedLists.push('Delete all');\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={removeList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Delete List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Delete List</Typography>}\r\n        </>\r\n      )}\r\n      options={getSavedLists()}\r\n      title=\"Choose List to delete\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { packRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\n\r\nconst copyToClipboard = text => navigator.clipboard.writeText(text);\r\n\r\nconst ExportList = ({ onClose = null, showText = false }) => {\r\n  const dispatch = useDispatch();\r\n  const roster = useSelector(state => state.roster);\r\n  const getImportableString = () => JSON.stringify(packRoster(roster));\r\n  const armyCost = roster.totalPoints;\r\n\r\n  const getListAsText = () => {\r\n    let text = [];\r\n    text.push(`${roster.name} @${armyCost} points`);\r\n    text.push('=====================================');\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n      text.push('-----------------------------------');\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        for (const option of options) text.push(`- ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const getListAsMarkdown = () => {\r\n    let text = [];\r\n    text.push(`**${roster.name} @${armyCost} points**`);\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `* ${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        text.push('');\r\n        for (const option of options) text.push(`    - ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const options = [\r\n    ['As an importable String', <ArrowDownwardIcon />, getImportableString],\r\n    ['As text', <FormatAlignLeftIcon />, getListAsText],\r\n    ['As markdown text', <FormatAlignJustifyIcon />, getListAsMarkdown]\r\n  ];\r\n\r\n  const exportList = text => {\r\n    let exportFunc = options.reduce(\r\n      (acc, opt) => (opt[0] === text ? opt[2] : acc),\r\n      null\r\n    );\r\n\r\n    try {\r\n      const list = exportFunc(roster);\r\n      copyToClipboard(list);\r\n      dispatch(showFeedback('List copied to clipboard!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not export the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={exportList}\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Export\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Export List</Typography>}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Chose how to export\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExportList;\r\n","import React from 'react';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { unpackRoster } from './Roster';\r\nimport TextInputDialog from './TextInputDialog';\r\nimport getData from 'store/getData';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nconst ImportList = ({ onClose = null, showText = false }) => {\r\n  const data = getData();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImport = value => {\r\n    if (!value) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(value), data);\r\n      dispatch(setRoster({ ...list }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback('List imported!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not import the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextInputDialog\r\n      anchor={openFunc => (\r\n        <>\r\n          <Tooltip title=\"Import list\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Import list</Typography>}\r\n        </>\r\n      )}\r\n      action={handleImport}\r\n      title=\"Enter the import string\"\r\n      label=\"Exported String\"\r\n      okayText=\"Import\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ImportList;\r\n","import React from 'react';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst Backup = ({ showText = null, onClose = null }) => {\r\n  const backup = () => {\r\n    const savedLists = JSON.stringify(store.get('savedRosters') || []);\r\n    const file = new Blob([savedLists], { type: 'text/plain;charset=utf-8' });\r\n\r\n    let date = new Date();\r\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\r\n    date = new Date(date.getTime() - offsetMs);\r\n    date = date\r\n      .toISOString()\r\n      .slice(0, 10)\r\n      .replace(/-/g, '/');\r\n\r\n    saveAs(file, `${date}_DRAB.sav`);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={backup}>\r\n          <BackupIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={backup}>Backup</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Backup;\r\n","import React from 'react';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nconst Restore = ({ showText = null, onClose = null }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let fileReader;\r\n  const fileDialog = React.useRef();\r\n\r\n  const restore = () => {\r\n    try {\r\n      let savedLists = store.get('savedRosters') || [];\r\n      let content = fileReader.result;\r\n      content = JSON.parse(content);\r\n      savedLists = { ...savedLists, ...content };\r\n      store.set('savedRosters', savedLists);\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`Restored!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not restore!`, 'error'));\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const handleFileChosen = event => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = restore;\r\n    fileReader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const openFileDialog = () => fileDialog.current.click();\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={openFileDialog}>\r\n          <RestorePageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={openFileDialog}>Restore</Typography>}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileDialog}\r\n        style={{ display: 'none' }}\r\n        id=\"restoreFile\"\r\n        accept=\".sav\"\r\n        onChange={handleFileChosen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Restore;\r\n","import React from 'react';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {\r\n  Dialog,\r\n  Tooltip,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n  Box,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nconst About = ({ onClose = null }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load List\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {<Typography onClick={handleOpen}>About</Typography>}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={{ textAlign: 'center' }}>About</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body1\">\r\n            A simple Army Builder for the tabletop game{' '}\r\n            {<a href=\"https://ospreypublishing.com/dragon-rampant\">Dragon Rampant</a>}.\r\n          </Typography>\r\n          <Box display=\"flex\" style={{ marginTop: 25 }}>\r\n            <Chip\r\n              label=\"View on Github\"\r\n              icon={<GitHubIcon />}\r\n              component=\"a\"\r\n              href=\"#chip\"\r\n              clickable\r\n            />\r\n            <Box flexGrow={1}></Box>\r\n            <Chip label=\"License: MIT\" />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { List, ListItem, Drawer, Divider } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\nimport Backup from './Backup';\r\nimport Restore from './Restore';\r\nimport About from './About';\r\n\r\nexport default function SideMenu() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Backup'}>\r\n            <Backup onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Restore'}>\r\n            <Restore onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'About'}>\r\n            <About onClose={handleClose} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport store from 'store';\r\nimport { multipleArgsReducer } from './utils';\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: {\r\n    viewMode: false,\r\n    editMode: false,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true\r\n  },\r\n  reducers: {\r\n    setUI: (state, action) => {\r\n      store.set('uiOptions', { ...action.payload });\r\n      return { ...action.payload };\r\n    },\r\n    setUIOption: multipleArgsReducer((state, action) => {\r\n      const [option, value] = action.payload;\r\n      store.set('uiOptions', { ...state, [option]: value });\r\n      state[option] = value;\r\n    }),\r\n    updateUI: (state, action) => {\r\n      store.set('uiOptions', { ...state, ...action.payload });\r\n      return { ...state, ...action.payload };\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setUI, setUIOption, updateUI } = uiSlice.actions;\r\nexport default uiSlice.reducer;\r\n","import React from 'react';\r\nimport { AppBar as AppBarMaterial, Box } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton, Fab, Tooltip, Hidden } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport SideMenu from './SideMenu';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/uiSlice';\r\nimport { newRoster } from 'store/rosterSlice';\r\n\r\nexport default function AppBar() {\r\n  const dispatch = useDispatch();\r\n  const ui = useSelector(state => state.ui);\r\n  const armyCost = useSelector(state => state.roster.totalPoints);\r\n\r\n  const changeViewMode = (clicked, newState) => {\r\n    const notClicked = clicked === 'viewMode' ? 'editMode' : 'viewMode';\r\n    let newStates = { [clicked]: newState };\r\n    if (newState) newStates = { ...newStates, [notClicked]: false };\r\n    dispatch(updateUI(newStates));\r\n  };\r\n\r\n  const ToggleUIButton = ({ option, Icon, title, onClick }) => (\r\n    <Tooltip title={title}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        onClick={() => {\r\n          onClick(option, !ui[option]);\r\n        }}\r\n      >\r\n        <Icon fontSize=\"small\" color={ui[option] ? 'inherit' : 'disabled'} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton color=\"inherit\" onClick={() => dispatch(newRoster())}>\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList />\r\n            <LoadList />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleUIButton\r\n              option=\"viewMode\"\r\n              Icon={VisibilityIcon}\r\n              title=\"View mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <ToggleUIButton\r\n              option=\"editMode\"\r\n              Icon={EditIcon}\r\n              title=\"Edit mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, FormControl } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateRoster } from 'store/rosterSlice';\r\n\r\nconst ListName = () => {\r\n  const dispatch = useDispatch();\r\n  const rosterName = useSelector(state => state.roster.name);\r\n  const inputUpdate = useSelector(state => state.appState.inputUpdate);\r\n\r\n  return (\r\n    <FormControl>\r\n      <Typography\r\n        style={{ border: 0, marginTop: 20, marginBottom: 25, width: '100%' }}\r\n        variant=\"h4\"\r\n        key={inputUpdate}\r\n        component=\"input\"\r\n        value={rosterName}\r\n        onChange={e => dispatch(updateRoster({ name: e.target.value }))}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ListName;\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/uiSlice';\r\n\r\nconst rulesData = getData('rulesData');\r\n\r\nexport default function RulesSummary() {\r\n  const dispatch = useDispatch();\r\n  const rulesSummaryExpanded = useSelector(state => state.ui.rulesSummaryExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  let specialRules = [\r\n    ...Object.values(units).reduce(\r\n      (acc, unit) =>\r\n        unit.rules.reduce(\r\n          (acc, rule) =>\r\n            rulesData[rulesData[rule]] ? acc.add(rulesData[rule]) : acc.add(rule),\r\n          acc\r\n        ),\r\n      new Set()\r\n    )\r\n  ].sort();\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() =>\r\n        dispatch(setUIOption('rulesSummaryExpanded', !rulesSummaryExpanded))\r\n      }\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map(rule => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n  Box\r\n} from '@material-ui/core';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/uiSlice';\r\n\r\nconst spellData = getData('spellData');\r\nconst rulesData = getData('rulesData');\r\n\r\nexport default function SpellTable() {\r\n  const dispatch = useDispatch();\r\n  const spellsExpanded = useSelector(state => state.ui.spellsExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  const [open, setOpen] = useState([...Array(Object.keys(spellData))].map(() => false));\r\n  let specialRules = [\r\n    ...Object.values(units).reduce(\r\n      (acc, unit) =>\r\n        unit.rules.reduce(\r\n          (acc, rule) =>\r\n            rulesData[rulesData[rule]] ? acc.add(rulesData[rule]) : acc.add(rule),\r\n          acc\r\n        ),\r\n      new Set()\r\n    )\r\n  ].sort();\r\n\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleSpellClick = index => {\r\n    const newOpen = [...open];\r\n    newOpen[index] = !open[index];\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => dispatch(setUIOption('spellsExpanded', !spellsExpanded))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <Hidden mdDown>\r\n              <TableContainer>\r\n                <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headspelltable\">\r\n                      <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                      <Hidden smDown>\r\n                        <TableCell align=\"center\">Difficulty</TableCell>\r\n                      </Hidden>\r\n                      <Hidden mdUp>\r\n                        <TableCell align=\"center\">Dif</TableCell>\r\n                      </Hidden>\r\n                      <TableCell>Target</TableCell>\r\n                      <TableCell>Duration</TableCell>\r\n                      <TableCell>Effect</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.values(spellData).map(spell => (\r\n                      <TableRow key={spell.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {spell.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                        <TableCell>{spell.target}</TableCell>\r\n                        <TableCell>{spell.duration}</TableCell>\r\n                        <TableCell>{spell.effect}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Hidden>\r\n            <Hidden smUp>\r\n              <List>\r\n                {Object.values(spellData).map((spell, index) => (\r\n                  <Box key={index}>\r\n                    <ListItem\r\n                      key={spell.name + 'small'}\r\n                      button\r\n                      onClick={() => handleSpellClick(index)}\r\n                    >\r\n                      <ListItemText primary={spell.name} />\r\n                      {open[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </ListItem>\r\n                    <Collapse in={open[index]} timeout=\"auto\" unmountOnExit>\r\n                      <List key={spell.name + 'list'} dense style={{ paddingLeft: 20 }}>\r\n                        <ListItem key={spell.name + spell.difficulty}>\r\n                          <ListItemText\r\n                            primary=\"Difficulty: \"\r\n                            secondary={spell.difficulty}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.target}>\r\n                          <ListItemText primary=\"Target: \" secondary={spell.target} />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.duration}>\r\n                          <ListItemText\r\n                            primary=\"Duration: \"\r\n                            secondary={spell.duration}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.effect}>\r\n                          <ListItemText primary=\"Effect: \" secondary={spell.effect} />\r\n                        </ListItem>\r\n                      </List>\r\n                    </Collapse>\r\n                  </Box>\r\n                ))}\r\n              </List>\r\n            </Hidden>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  LabelList,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nexport default function UnitDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Legend />\r\n        <Bar dataKey=\"Units\" fill={colors[0]} minPointSize={3}>\r\n          <LabelList dataKey=\"Units\" position=\"top\" />\r\n        </Bar>\r\n        <Bar dataKey=\"Points\" fill={colors[1]} minPointSize={3}>\r\n          <LabelList dataKey=\"Points\" position=\"top\" />\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Cell, Tooltip, Legend, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  useMediaQuery\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport UnitDistributionChart from './UnitDistributionChart';\r\nimport PointDistributionChart from './PointDistributionChart';\r\nimport getData from 'store/getData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUIOption } from 'store/uiSlice';\r\n\r\nconst unitData = getData('unitData');\r\nconst fantasticalRulesData = getData('fantasticalRulesData');\r\n\r\nexport default function Statistics() {\r\n  const dispatch = useDispatch();\r\n  const statisticsExpanded = useSelector(state => state.ui.statisticsExpanded);\r\n  const units = useSelector(state => state.roster.units);\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + unitData[unit.name].options[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const totalPoints = useSelector(state => state.roster.totalPoints);\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = Object.values(units).filter(u => u.type === 'mounted');\r\n  const foot = Object.values(units).filter(u => u.type === 'foot');\r\n  const ranged = Object.values(units).filter(u => u.stats.shoot > 0);\r\n  const unitsCost = Object.values(units).reduce(\r\n    (acc, u) => acc + unitData[u.name].points,\r\n    0\r\n  );\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: Object.values(mounted).reduce((acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: Object.values(foot).reduce((acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: Object.values(ranged).reduce((acc, u) => acc + u.points, 0)\r\n    }\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints }\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => dispatch(setUIOption('statisticsExpanded', !statisticsExpanded))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport AppBar from './AppBar';\r\nimport ListName from './ListName';\r\nimport Roster from './Roster';\r\nimport RulesSummary from './RulesSummary';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/uiSlice';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateUI({ ...store.get('uiOptions') }));\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <ListName />\r\n      <Roster />\r\n      <RulesSummary />\r\n      <SpellTable />\r\n      <Statistics />\r\n      <ShowFeedback />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport uiReducer from './uiSlice';\r\nimport rosterReducer from './rosterSlice';\r\nimport appStateReducer from './appStateSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ui: uiReducer,\r\n    roster: rosterReducer,\r\n    appState: appStateReducer\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}