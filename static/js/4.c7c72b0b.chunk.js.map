{"version":3,"sources":["components/Statistics/PointDistributionChart.js"],"names":["PointDistributionChart","data","height","colors","dataKey","label","renderCustomizedLabel","labelLine","outerRadius","map","entry","index","key","fill","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","x","cos","y","sin","percentValue","toFixed","textAnchor","dominantBaseline"],"mappings":"wIAAA,4EAGe,SAASA,EAAT,GAA2D,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7D,OACE,kBAAC,IAAD,CAAqBD,OAAQA,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACED,KAAMA,EACNG,QAAQ,QACRC,MAAOC,EACPC,WAAW,EACXC,YAAa,IAEZP,EAAKQ,KAAI,SAACC,EAAOC,GAAR,OACR,kBAAC,IAAD,CAAMC,IAAKF,EAAOG,KAAMV,EAAOQ,SAGnC,kBAAC,IAAD,MACA,kBAAC,IAAD,QAMR,IAAMG,EAASC,KAAKC,GAAK,IACnBV,EAAwB,SAAC,GAOxB,IANLW,EAMI,EANJA,GACAC,EAKI,EALJA,GACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAZ,EAEI,EAFJA,YACAa,EACI,EADJA,QAEMC,EAASF,EAA4C,IAA7BZ,EAAcY,GACtCG,EAAIN,EAAKK,EAASP,KAAKS,KAAKL,EAAWL,GACvCW,EAAIP,EAAKI,EAASP,KAAKW,KAAKP,EAAWL,GACvCa,GAA0B,IAAVN,GAAeO,QAAQ,GAE7C,OACE,0BACEL,EAAGA,EACHE,EAAGA,EACHZ,KAAK,QACLgB,WAAYN,EAAIN,EAAK,QAAU,MAC/Ba,iBAAiB,WAEhBH,EAAe,EAAf,UAAsBA,EAAtB,KAAwC","file":"static/js/4.c7c72b0b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n"],"sourceRoot":""}