{"version":3,"sources":["components/ShowFeedback.js","components/SimpleDialog.js","components/Unit/UnitSelector.js","components/Unit/Options.js","components/Unit/FantasticalRules.js","components/Unit/StatBlock.js","components/Unit/SpecialRules.js","components/Unit/Actions.js","components/Unit/Unit.js","helpers/utils.js","components/Roster.js","components/LoadList.js","components/SaveList.js","components/DeleteList.js","components/ExportList.js","components/ImportList.js","components/SideMenu.js","components/AppBar.js","components/RulesSummary.js","components/SpellTable.js","components/Statistics/UnitDistributionChart.js","components/Statistics/PointDistributionChart.js","components/Statistics/Statistics.js","components/App.js","serviceWorker.js","index.js"],"names":["Alert","props","elevation","variant","ShowFeedback","feedback","setFeetback","handleClose","event","reason","open","Snackbar","autoHideDuration","onClose","severity","message","SimpleDialog","selectedValue","options","title","Dialog","DialogTitle","List","map","value","ListItem","button","onClick","handleListItemClick","key","UnitSelector","name","points","React","useState","setOpen","Typography","Chip","label","color","Options","unit","optionsData","onChange","Object","keys","length","handleChange","option","e","newUnit","target","checked","filter","val","FormControl","component","style","marginTop","FormLabel","FormGroup","FormControlLabel","control","Checkbox","includes","FantasticalRules","unitData","fantasticalRulesData","fantasticalRules","toCheck","slice","excluded","handleOpen","v","width","height","Select","onOpen","IconComponent","Box","multiple","input","Input","renderValue","MenuItem","indexOf","StatBlock","stats","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","size","Hidden","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","SpecialRules","rules","Container","r","Actions","id","roster","updateRoster","moveUnit","dir","unitOrder","index","nextIndex","display","alignItems","Tooltip","IconButton","flexGrow","nextId","nextID","units","buildUnit","data","setStats","entries","add","rule","remove","fant","Unit","setUnit","removeUnit","ui","newAttributes","Card","marginBottom","maxWidth","CardHeader","unitName","unitNames","action","Button","CardContent","editMode","viewMode","objFilter","obj","fun","filtered","k","objMap","fn","fromEntries","objReduce","acc","reduce","packRoster","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","marginLeft","LoadList","setRoster","setForceInputUpdate","showFeedback","showText","handleClickOpen","loadList","store","get","savedLists","list","push","getSavedLists","SaveList","saveRoster","set","saveList","DeleteList","removeList","ExportList","handleClick","text","JSON","stringify","navigator","clipboard","writeText","err","ImportList","listString","setListString","DialogContent","TextField","autoFocus","margin","type","fullWidth","DialogActions","parse","SideMenu","toggleDrawer","Drawer","Divider","AppBar","setUIOption","updateUI","armyCost","reload","changeViewMode","clicked","newState","notClicked","newStates","ToggleUIButton","Icon","fontSize","position","Toolbar","smDown","mdUp","VisibilityIcon","EditIcon","RulesSummary","specialRules","rulesData","rulesSummaryExpanded","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","primary","secondary","SpellTable","spellsExpanded","spellData","spellcasterInRoster","minWidth","TableHead","align","values","spell","scope","difficulty","duration","effect","UnitDistributionChart","colors","top","right","left","bottom","strokeDasharray","dataKey","fill","minPointSize","PointDistributionChart","renderCustomizedLabel","labelLine","outerRadius","entry","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","x","cos","y","sin","percentValue","toFixed","textAnchor","dominantBaseline","Statistics","statisticsExpanded","theme","useTheme","chipSize","useMediaQuery","breakpoints","down","optionPoints","accumulator","fantasticalPoints","COLORS","totalPoints","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","App","initialRoster","0","setUI","useReducer","state","forceInputUpdate","setFeedback","useEffect","Set","sort","getSpecialRules","border","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26978c28.chunk.js","sourcesContent":["import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Alert = props => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\nconst ShowFeedback = ({ feedback, setFeetback }) => {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setFeetback({ ...feedback, open: false });\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={feedback.severity}>\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nexport default function SimpleDialog(props) {\r\n  const { onClose, selectedValue, open, options, title } = props;\r\n\r\n  const handleClose = () => onClose(selectedValue);\r\n  const handleListItemClick = value => onClose(value);\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <List>\r\n        {options.map(value => (\r\n          <ListItem button onClick={() => handleListItemClick(value)} key={value}>\r\n            {value}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Typography, Chip } from '@material-ui/core';\r\nimport SimpleDialog from '../SimpleDialog';\r\n\r\nexport default function UnitSelector({ name, options, points, onClose }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value !== name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" onClick={handleClickOpen}>\r\n        <Chip label={points} color=\"primary\" />\r\n        &nbsp;&nbsp;\r\n        {name}\r\n        <ArrowDropDownIcon />\r\n      </Typography>\r\n      <SimpleDialog\r\n        selectedValue={name}\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={options}\r\n        title=\"Choose unit type\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Options({ unit, optionsData, onChange }) {\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = option => e => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter(val => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map(option => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Typography>\r\n                {option}{' '}\r\n                <Typography color=\"secondary\" component=\"span\">\r\n                  @{optionsData[option].points}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Typography, Box, Select, MenuItem } from '@material-ui/core';\r\n\r\nfunction FantasticalRules({ unitData, onChange, fantasticalRulesData, unit }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter(val => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map(name => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onClick={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter(v => v !== name)\r\n                      ]\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}}\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={e => onChange({ ...unit, fantasticalRules: [...e.target.value] })}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Typography color=\"primary\">\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FantasticalRules;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nexport default function StatBlock({ stats }) {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, List, Container, ListItem } from '@material-ui/core';\r\n\r\nexport default function SpecialRules({ rules }) {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map(r => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","import React from 'react';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { IconButton, Box, Tooltip } from '@material-ui/core';\r\n\r\nconst Actions = ({ id, unit, roster, updateRoster }) => {\r\n  const moveUnit = dir => {\r\n    const unitOrder = [...roster.unitOrder];\r\n    const index = roster.unitOrder.indexOf(id);\r\n    const nextIndex = dir ? index - 1 : index + 1;\r\n    if (nextIndex < 0 || nextIndex >= unitOrder.length) return;\r\n    unitOrder[nextIndex] = roster.unitOrder[index];\r\n    unitOrder[index] = roster.unitOrder[nextIndex];\r\n    updateRoster({ ...roster, unitOrder: unitOrder });\r\n  };\r\n  const moveLeft = () => moveUnit(1);\r\n  const moveRight = () => moveUnit(0);\r\n\r\n  const cloneUnit = () => {\r\n    const nextId = roster.nextID;\r\n\r\n    updateRoster({\r\n      nextID: nextId + 1,\r\n      units: {\r\n        ...roster.units,\r\n        [nextId]: { ...unit }\r\n      },\r\n      unitOrder: [...roster.unitOrder, nextId]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" width=\"97%\" style={{ height: 25, marginTop: 10 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, CardHeader } from '@material-ui/core';\r\nimport UnitSelector from './UnitSelector';\r\nimport Options from './Options';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport StatBlock from './StatBlock';\r\nimport SpecialRules from './SpecialRules';\r\nimport Actions from './Actions';\r\n\r\nconst buildUnit = (name, options, fantasticalRules, data) => {\r\n  const unitData = data.unitData[name];\r\n  let unit = {\r\n    ...unitData,\r\n    options: [...options],\r\n    fantasticalRules: [...fantasticalRules]\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (let option of unit.options) {\r\n    option = unitData.options[option];\r\n    points += option.points;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter(val => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (let fant of unit.fantasticalRules) {\r\n    fant = data.fantasticalRulesData[fant];\r\n    points += fant.points;\r\n    unit.rules = [...unit.rules, fant.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nfunction Unit({ id, unit, roster, updateRoster, data, setUnit, removeUnit, ui }) {\r\n  const changeUnit = unitName => setUnit(id, unitName);\r\n\r\n  const updateUnit = newAttributes => {\r\n    updateRoster({\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...roster.units[id], ...newAttributes }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = unit => {\r\n    unit = buildUnit(unit.name, unit.options, unit.fantasticalRules, data);\r\n    updateUnit({ ...unit });\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" style={{ marginBottom: 25, maxWidth: 400, width: '100%' }}>\r\n      <CardHeader\r\n        title={\r\n          <UnitSelector\r\n            name={unit.name}\r\n            onClose={changeUnit}\r\n            options={data.unitNames}\r\n            points={unit.points}\r\n          />\r\n        }\r\n        action={\r\n          <Button onClick={() => removeUnit(id)}>\r\n            <CloseIcon />\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        {!ui.editMode && (\r\n          <>\r\n            <StatBlock stats={unit.stats} />\r\n            <SpecialRules rules={unit.rules} />\r\n          </>\r\n        )}\r\n        {!ui.viewMode && (\r\n          <>\r\n            <Options\r\n              onChange={handleChange}\r\n              optionsData={data.unitData[unit.name].options}\r\n              unit={unit}\r\n            />\r\n            <FantasticalRules\r\n              onChange={handleChange}\r\n              unitData={data.unitData[unit.name]}\r\n              fantasticalRulesData={data.fantasticalRulesData}\r\n              unit={unit}\r\n            />\r\n            <Actions id={id} unit={unit} roster={roster} updateRoster={updateRoster} />\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Unit;\r\nexport { buildUnit };\r\n","/**\r\n * Filter an object\r\n * @param {Object} obj The object that should be filtered\r\n * @param {function} fun A function accepting two arguments, the value and the key. must returns a boolean. (val, key) => bool\r\n * @return {Object} Returns a new Object, containing the filtered entries\r\n */\r\nconst objFilter = (obj, fun) => {\r\n  let filtered = {};\r\n  for (const k in obj) {\r\n    if (fun(obj[k], k)) filtered = { ...filtered, [k]: obj[k] };\r\n  }\r\n  return filtered;\r\n};\r\n\r\n/**\r\n * Map over an object\r\n * @param {Object} obj The object that should be filtered\r\n * @param {function} fun A function accepting two arguments, the value and the key. (val, key) => any\r\n * @return {Object} Returns a new Object, containing the maped over entries\r\n */\r\nconst objMap = (obj, fn) =>\r\n  Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, fn(v, k)]));\r\n\r\n/**\r\n * Reduce an object\r\n * @param {Object} obj The object that should be reduced\r\n * @param {function} fun A function accepting three arguments, the accumulator, value and the key. must returns a new accumulator. (acc, val, key) => acc\r\n * @return {Object} Returns the accumulator\r\n */\r\nconst objReduce = (obj, fun, acc) =>\r\n  Object.entries(obj).reduce((acc, [k, v]) => fun(acc, v, k), acc);\r\n\r\nexport { objFilter, objMap, objReduce };\r\n","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Fab, Box, Typography } from '@material-ui/core';\r\nimport Unit, { buildUnit } from './Unit';\r\nimport { objMap } from 'helpers/utils';\r\n\r\nconst packRoster = roster => {\r\n  let units = { ...roster.units };\r\n  units = objMap(units, unit => ({\r\n    name: unit.name,\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = (compactRoster, data) => {\r\n  const units = objMap(compactRoster.units, unit =>\r\n    buildUnit(unit.name, unit.options, unit.fantasticalRules, data)\r\n  );\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = ({ roster, updateRoster, ui, data }) => {\r\n  const addUnit = () => {\r\n    const id = roster.nextID;\r\n\r\n    updateRoster({\r\n      nextID: id + 1,\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...data.unitData.Unit, options: [], fantasticalRules: [] }\r\n      },\r\n      unitOrder: [...roster.unitOrder, id]\r\n    });\r\n  };\r\n\r\n  const setUnit = (id, name) => {\r\n    updateRoster({\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...data.unitData[name], options: [], fantasticalRules: [] }\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeUnit = id => {\r\n    const units = { ...roster.units };\r\n    delete units[id];\r\n    updateRoster({\r\n      units: { ...units },\r\n      unitOrder: roster.unitOrder.filter(val => val !== id)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map(id => (\r\n          <Unit\r\n            id={id}\r\n            key={id}\r\n            unit={roster.units[id]}\r\n            roster={roster}\r\n            updateRoster={updateRoster}\r\n            removeUnit={removeUnit}\r\n            setUnit={setUnit}\r\n            data={data}\r\n            ui={ui}\r\n            unitOrder={roster.unitOrder}\r\n          />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !ui.viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!ui.viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={addUnit}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import React from 'react';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SimpleDialog from './SimpleDialog';\r\nimport store from 'store';\r\nimport { unpackRoster } from './Roster';\r\n\r\nexport default function LoadList({\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  showFeedback,\r\n  onClose = null,\r\n  showText = false,\r\n  data\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value) loadList(value);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const loadList = name => {\r\n    const roster = unpackRoster(store.get('savedRosters')[name], data);\r\n    setRoster({ ...roster });\r\n    setForceInputUpdate();\r\n    showFeedback(`${name} loaded!`, 'success');\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load List\">\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n          <SaveOutlinedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleClickOpen}>Load List</Typography>}\r\n      <SimpleDialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={getSavedLists()}\r\n        title=\"Choose List to load\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport store from 'store';\r\nimport { packRoster } from './Roster';\r\n\r\nexport default function SaveList({\r\n  roster,\r\n  showFeedback,\r\n  onClose = null,\r\n  showText = false\r\n}) {\r\n  const saveList = () => {\r\n    if (roster.name === 'New List') return false;\r\n    let savedLists = store.get('savedRosters') || [];\r\n    savedLists = {\r\n      ...savedLists,\r\n      [roster.name]: { ...packRoster(roster) }\r\n    };\r\n    store.set('savedRosters', savedLists);\r\n    return true;\r\n  };\r\n\r\n  const saveRoster = () => {\r\n    if (saveList()) showFeedback('Saved!', 'success');\r\n    else showFeedback('You have to give the list a name!', 'error');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport SimpleDialog from './SimpleDialog';\r\n\r\nexport default function DeleteList({ showFeedback, onClose = null, showText = false }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    removeList(value);\r\n    if (value) showFeedback('Deleted!', 'success');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const removeList = name => {\r\n    if (name === 'Delete all') store.set('savedRosters', []);\r\n    else {\r\n      let savedLists = store.get('savedRosters');\r\n      delete savedLists[name];\r\n      store.set('savedRosters', savedLists);\r\n    }\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    savedLists.push('Delete all');\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Delete List\">\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleClickOpen}>Delete List</Typography>}\r\n      <SimpleDialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={getSavedLists()}\r\n        title=\"Choose List to delete\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { packRoster } from './Roster';\r\n\r\nconst copyToClipboard = text => navigator.clipboard.writeText(text);\r\n\r\nconst ExportList = ({ roster, showFeedback, onClose = null, showText = false }) => {\r\n  const handleClick = () => {\r\n    const list = JSON.stringify(packRoster(roster));\r\n    try {\r\n      copyToClipboard(list);\r\n      showFeedback('List copied to clipboard!', 'success');\r\n    } catch (err) {\r\n      showFeedback('Could not export the list!', 'error');\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Share\">\r\n        <IconButton color=\"inherit\" onClick={handleClick}>\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleClick}>Export List</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportList;\r\n","import React from 'react';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { unpackRoster } from './Roster';\r\n\r\nconst ImportList = ({\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  showFeedback,\r\n  data,\r\n  onClose = null,\r\n  showText = false\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [listString, setListString] = React.useState();\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleImport = () => {\r\n    if (!listString) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(listString), data);\r\n      setRoster({ ...list });\r\n      setForceInputUpdate();\r\n      showFeedback('List imported!', 'success');\r\n    } catch (err) {\r\n      showFeedback('Could not import the list!', 'error');\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Import list\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <GetAppIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleOpen}>Import list</Typography>}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>Enter the import string</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"importstring\"\r\n            label=\"Exported String\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e => setListString(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleImport} color=\"primary\">\r\n            Import\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportList;\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { List, ListItem, Drawer, Divider } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\n\r\nexport default function SideMenu({\r\n  roster,\r\n  setRoster,\r\n  data,\r\n  setForceInputUpdate,\r\n  showFeedback\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList\r\n              roster={roster}\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList\r\n              setRoster={setRoster}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              showFeedback={showFeedback}\r\n              data={data}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList\r\n              roster={roster}\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList\r\n              setRoster={setRoster}\r\n              data={data}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              showFeedback={showFeedback}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppBar as AppBarMaterial, Box } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton, Fab, Tooltip, Hidden } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport SideMenu from './SideMenu';\r\n\r\nexport default function AppBar({\r\n  roster,\r\n  ui,\r\n  setUIOption,\r\n  updateUI,\r\n  armyCost,\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  showFeedback,\r\n  reload,\r\n  data\r\n}) {\r\n  const changeViewMode = (clicked, newState) => {\r\n    const notClicked = clicked === 'viewMode' ? 'editMode' : 'viewMode';\r\n    let newStates = { [clicked]: newState };\r\n    if (newState) newStates = { ...newStates, [notClicked]: false };\r\n    updateUI(newStates);\r\n  };\r\n\r\n  const ToggleUIButton = ({ option, Icon, title, onClick = setUIOption }) => {\r\n    return (\r\n      <Tooltip title={title}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => {\r\n            onClick(option, !ui[option]);\r\n          }}\r\n        >\r\n          <Icon fontSize=\"small\" color={ui[option] ? 'inherit' : 'disabled'} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu\r\n              roster={roster}\r\n              setRoster={setRoster}\r\n              data={data}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              showFeedback={showFeedback}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton color=\"inherit\" onClick={reload}>\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList roster={roster} showFeedback={showFeedback} />\r\n            <LoadList\r\n              setRoster={setRoster}\r\n              showFeedback={showFeedback}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              data={data}\r\n            />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleUIButton\r\n              option=\"viewMode\"\r\n              Icon={VisibilityIcon}\r\n              title=\"View mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <ToggleUIButton\r\n              option=\"editMode\"\r\n              Icon={EditIcon}\r\n              title=\"Edit mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\n\r\nexport default function RulesSummary({\r\n  specialRules,\r\n  setUIOption,\r\n  rulesData,\r\n  rulesSummaryExpanded\r\n}) {\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() => setUIOption('rulesSummaryExpanded', !rulesSummaryExpanded)}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map(rule => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Hidden\r\n} from '@material-ui/core';\r\n\r\nexport default function SpellTable({\r\n  setUIOption,\r\n  specialRules,\r\n  spellsExpanded,\r\n  spellData\r\n}) {\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => setUIOption('spellsExpanded', !spellsExpanded)}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <TableContainer>\r\n              <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                  <TableRow key=\"headspelltable\">\r\n                    <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                    <Hidden smDown>\r\n                      <TableCell align=\"center\">Difficulty</TableCell>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                      <TableCell align=\"center\">Dif</TableCell>\r\n                    </Hidden>\r\n                    <TableCell>Target</TableCell>\r\n                    <TableCell>Duration</TableCell>\r\n                    <TableCell>Effect</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.values(spellData).map(spell => (\r\n                    <TableRow key={spell.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {spell.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                      <TableCell>{spell.target}</TableCell>\r\n                      <TableCell>{spell.duration}</TableCell>\r\n                      <TableCell>{spell.effect}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  LabelList,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nexport default function UnitDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Legend />\r\n        <Bar dataKey=\"Units\" fill={colors[0]} minPointSize={3}>\r\n          <LabelList dataKey=\"Units\" position=\"top\" />\r\n        </Bar>\r\n        <Bar dataKey=\"Points\" fill={colors[1]} minPointSize={3}>\r\n          <LabelList dataKey=\"Points\" position=\"top\" />\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Cell, Tooltip, Legend, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  useMediaQuery\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { objFilter, objReduce } from '../../helpers/utils';\r\nimport UnitDistributionChart from './UnitDistributionChart';\r\nimport PointDistributionChart from './PointDistributionChart';\r\n\r\nexport default function Statistics({\r\n  armyCost,\r\n  units,\r\n  unitData,\r\n  fantasticalRulesData,\r\n  statisticsExpanded,\r\n  setUIOption\r\n}) {\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = objReduce(\r\n    units,\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + unitData[unit.name].options[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = objReduce(\r\n    units,\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const totalPoints = armyCost;\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = objFilter(units, u => u.type === 'mounted');\r\n  const foot = objFilter(units, u => u.type === 'foot');\r\n  const ranged = objFilter(units, u => u.stats.shoot > 0);\r\n  const unitsCost = objReduce(units, (acc, u) => acc + unitData[u.name].points, 0);\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: objReduce(mounted, (acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: objReduce(foot, (acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: objReduce(ranged, (acc, u) => acc + u.points, 0)\r\n    }\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints }\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => setUIOption('statisticsExpanded', !statisticsExpanded)}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport store from 'store';\r\nimport { Box, Typography, Container, FormControl } from '@material-ui/core';\r\nimport unitData from 'assets/dragonRampantData/units.json';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport AppBar from './AppBar';\r\nimport Roster from './Roster';\r\nimport RulesSummary from './RulesSummary';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport { objReduce } from 'helpers/utils';\r\n\r\nconst App = () => {\r\n  const [data] = useState({\r\n    unitData: unitData,\r\n    unitNames: Object.keys(unitData).slice(1),\r\n    fantasticalRulesData: fantasticalRulesData,\r\n    rulesData: rulesData,\r\n    spellData: spellData\r\n  });\r\n\r\n  const initialRoster = {\r\n    name: 'New List',\r\n    nextID: 1,\r\n    units: {\r\n      0: { ...data.unitData.Unit, options: [], fantasticalRules: [] }\r\n    },\r\n    unitOrder: [0]\r\n  };\r\n\r\n  const [roster, setRoster] = useState({ ...initialRoster });\r\n\r\n  const [ui, setUI] = useState({\r\n    viewMode: false,\r\n    editMode: false,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true\r\n  });\r\n\r\n  const [forceInputUpdate, setForceInputUpdate] = useReducer(\r\n    state => (state ? 0 : 1),\r\n    0\r\n  );\r\n\r\n  const [feedback, setFeedback] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: ''\r\n  });\r\n\r\n  useEffect(ui => {\r\n    setUI({ ...ui, ...store.get('uiOptions') });\r\n  }, []);\r\n\r\n  const updateUI = newAttributes => {\r\n    setUI({ ...ui, ...newAttributes });\r\n    store.set('uiOptions', { ...ui, ...newAttributes });\r\n  };\r\n\r\n  const setUIOption = (option, value) => {\r\n    setUI({ ...ui, [option]: value });\r\n    store.set('uiOptions', { ...ui, [option]: value });\r\n  };\r\n\r\n  const updateRoster = newAttributes => setRoster({ ...roster, ...newAttributes });\r\n\r\n  const showFeedback = (message, severity) =>\r\n    setFeedback({ open: true, message: message, severity: severity });\r\n\r\n  const reload = () => {\r\n    setRoster({ ...initialRoster });\r\n    setForceInputUpdate();\r\n  };\r\n\r\n  const getSpecialRules = () => {\r\n    let specialRules = new Set();\r\n    for (const unit of Object.values(roster.units)) {\r\n      for (const rule of unit.rules) {\r\n        data.rulesData[data.rulesData[rule]]\r\n          ? specialRules.add(data.rulesData[rule])\r\n          : specialRules.add(rule);\r\n      }\r\n    }\r\n    return [...specialRules].sort();\r\n  };\r\n  const specialRules = getSpecialRules();\r\n\r\n  const totalPoints = objReduce(\r\n    Object.values(roster.units),\r\n    (acc, unit) => acc + unit.points,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar\r\n        setUIOption={setUIOption}\r\n        updateUI={updateUI}\r\n        ui={ui}\r\n        roster={roster}\r\n        setRoster={setRoster}\r\n        armyCost={totalPoints}\r\n        showFeedback={showFeedback}\r\n        reload={reload}\r\n        setForceInputUpdate={setForceInputUpdate}\r\n        data={data}\r\n      />\r\n      <Box>\r\n        <FormControl>\r\n          <Typography\r\n            style={{ border: 0, marginBottom: 25, width: '100%' }}\r\n            variant=\"h4\"\r\n            key={forceInputUpdate}\r\n            component=\"Input\"\r\n            value={roster.name}\r\n            onChange={e => updateRoster({ name: e.target.value })}\r\n          />\r\n        </FormControl>\r\n        <Roster roster={roster} updateRoster={updateRoster} ui={ui} data={data} />\r\n        <RulesSummary\r\n          specialRules={specialRules}\r\n          rulesData={data.rulesData}\r\n          rulesSummaryExpanded={ui.rulesSummaryExpanded}\r\n          setUIOption={setUIOption}\r\n        />\r\n        <SpellTable\r\n          specialRules={specialRules}\r\n          spellsExpanded={ui.spellsExpanded}\r\n          setUIOption={setUIOption}\r\n          spellData={data.spellData}\r\n        />\r\n        <Statistics\r\n          armyCost={totalPoints}\r\n          units={roster.units}\r\n          unitData={data.unitData}\r\n          fantasticalRulesData={data.fantasticalRulesData}\r\n          statisticsExpanded={ui.statisticsExpanded}\r\n          setUIOption={setUIOption}\r\n        />\r\n      </Box>\r\n      <ShowFeedback feedback={feedback} setFeetback={setFeedback} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}