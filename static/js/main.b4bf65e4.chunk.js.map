{"version":3,"sources":["store/appStateSlice.tsx","components/ShowFeedback.tsx","components/ListDialog.tsx","components/Unit/UnitSelector.tsx","store/data.tsx","components/Unit/Options.tsx","components/Unit/FantasticalRules.tsx","components/Unit/StatBlock.tsx","components/Unit/SpecialRules.tsx","components/TextInputDialog.tsx","store/rosterSlice.tsx","components/Unit/Actions.tsx","components/ExpandIcon.tsx","components/Unit/buildUnit.tsx","components/Unit/Unit.tsx","components/Roster.tsx","components/LoadList.tsx","components/SaveList.tsx","components/DeleteList.tsx","components/ExportList.tsx","components/ImportList.tsx","components/Backup.tsx","components/Restore.tsx","store/uiSlice.tsx","components/DarkMode.tsx","components/About.tsx","components/SideMenu.tsx","components/AppBar.tsx","components/ListName.tsx","components/Validation.tsx","components/RulesSummary.tsx","components/SpellTable.tsx","components/Statistics/UnitDistributionChart.js","components/Statistics/PointDistributionChart.js","components/Statistics/Statistics.tsx","hooks/useUserTheme.tsx","components/App.tsx","store/store.tsx","serviceWorker.js","index.tsx"],"names":["appStateSlice","createSlice","name","initialState","feedback","open","message","severity","inputUpdate","autoDarkMode","reducers","toggleForceInputUpdate","state","closeFeedback","showFeedback","reducer","action","payload","prepare","setAutoDarkMode","actions","ShowFeedback","dispatch","useDispatch","useSelector","appState","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","variant","elevation","ListDialog","anchor","options","title","onOpen","React","useState","setOpen","opts","map","o","Dialog","DialogTitle","List","text","icon","ListItem","button","onClick","handleOnClick","key","ListItemIcon","UnitSelector","unit","customName","value","openFunc","Typography","Chip","label","points","color","style","marginLeft","marginBottom","data","unitData","unitNames","Object","keys","slice","fantasticalRulesData","rulesData","spellData","Options","onChange","optionsData","length","handleChange","option","e","newUnit","target","checked","filter","val","FormControl","component","marginTop","FormLabel","FormGroup","FormControlLabel","control","Checkbox","includes","Tooltip","summary","FantasticalRules","fantasticalRules","toCheck","excluded","handleOpen","v","width","height","Select","IconComponent","Box","multiple","input","Input","renderValue","MenuItem","indexOf","StatBlock","stats","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","size","Hidden","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","SpecialRules","rules","Container","r","TextInputDialog","defaultValue","cancelText","okayText","margin","setValue","DialogContent","TextField","autoFocus","type","fullWidth","onKeyPress","DialogActions","Button","rosterInitialState","nextID","units","unitOrder","rosterSlice","newRoster","setRoster","_","updateRoster","addUnit","index","Unit","id","push","splice","setUnit","updateUnit","newAttributes","removeUnit","renameUnit","moveUnit","direction","nextIndex","getTotalPoints","createSelector","values","reduce","acc","getSpecialRules","rule","sort","ary","Actions","roster","display","alignItems","IconButton","flexGrow","useStyles","makeStyles","theme","expand","transform","transition","transitions","create","duration","shortest","expandOpen","ExpandIcon","expanded","classes","className","clsx","buildUnit","unitToBuild","opt","setStats","entries","add","remove","fant","fantasticRule","ui","setExpanded","Card","maxWidth","viewMode","CardHeader","Collapse","in","timeout","unmountOnExit","CardContent","editMode","packRoster","unpackRoster","compactRoster","Roster","flexDirection","flexWrap","Fab","LoadList","showText","savedRosters","setSavedRosters","store","get","err","SaveList","saveRoster","savedLists","set","saveList","DeleteList","ExportList","armyCost","funcs","JSON","stringify","join","exportFunc","i","navigator","clipboard","writeText","copyToClipboard","ImportList","list","parse","Backup","undefined","backup","file","Blob","date","Date","offsetMs","getTimezoneOffset","dateText","getTime","toISOString","replace","saveAs","Restore","fileReader","fileDialog","useRef","restore","content","result","contentAsObject","openFileDialog","current","click","ref","accept","FileReader","onloadend","files","readAsText","uiSlice","darkMode","validationExpanded","rulesSummaryExpanded","spellsExpanded","statisticsExpanded","setUI","toggleUIOption","updateUI","Darkmode","handleClick","About","textAlign","href","clickable","SideMenu","toggleDrawer","Drawer","Divider","DarkMode","AppBar","changeViewMode","clicked","newState","notClicked","newStates","ToggleUIButton","Icon","fontSize","position","Toolbar","smDown","mdUp","VisibilityIcon","EditIcon","root","backgroundColor","palette","background","default","primary","border","ListName","rosterName","toString","error","main","contrastText","details","light","Validation","warnings","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","secondary","RulesSummary","specialRules","SpellTable","Array","spellcasterInRoster","minWidth","TableHead","align","spell","scope","difficulty","effect","newOpen","handleSpellClick","dense","paddingLeft","CustomLabel","x","y","useTheme","fill","textAnchor","CustomXAxis","UnitDistributionChart","colors","top","right","left","bottom","strokeDasharray","dataKey","tick","wrapperStyle","minPointSize","PointDistributionChart","renderCustomizedLabel","labelLine","outerRadius","entry","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","cos","sin","percentValue","toFixed","dominantBaseline","Statistics","totalPoints","chipSize","useMediaQuery","breakpoints","down","optionPoints","accumulator","fantasticalPoints","COLORS","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Units","Points","dataPoints","marginRight","toPrecision","useUserTheme","prefersDarkMode","hasDarkMode","useMemo","createMuiTheme","App","useEffect","ThemeProvider","CssBaseline","rootReducer","combineReducers","uiReducer","rosterReducer","appStateReducer","configureStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b4bf65e4.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype severity = 'error' | 'info' | 'success' | 'warning';\r\n\r\nexport type AppState = {\r\n  feedback: {\r\n    open: boolean;\r\n    message: string;\r\n    severity: severity;\r\n  };\r\n  inputUpdate: boolean;\r\n  autoDarkMode: boolean;\r\n};\r\n\r\nconst appStateSlice = createSlice({\r\n  name: 'appState',\r\n  initialState: {\r\n    feedback: {\r\n      open: false,\r\n      message: '',\r\n      severity: 'info',\r\n    },\r\n    inputUpdate: false,\r\n    autoDarkMode: false,\r\n  } as AppState,\r\n  reducers: {\r\n    toggleForceInputUpdate: (state) => {\r\n      state.inputUpdate = !state.inputUpdate;\r\n    },\r\n    closeFeedback: (state) => {\r\n      state.feedback.open = false;\r\n    },\r\n    showFeedback: {\r\n      reducer: (state, action: PayloadAction<[string, severity]>) => {\r\n        const [message, severity] = action.payload;\r\n        state.feedback = { open: true, message: message, severity: severity };\r\n      },\r\n      prepare: (\r\n        message: string,\r\n        severity: severity\r\n      ): { payload: [string, severity] } => ({\r\n        payload: [message, severity],\r\n      }),\r\n    },\r\n    setAutoDarkMode: (state, action) => {\r\n      state.autoDarkMode = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleForceInputUpdate,\r\n  closeFeedback,\r\n  showFeedback,\r\n  setAutoDarkMode,\r\n} = appStateSlice.actions;\r\nexport default appStateSlice.reducer;\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { closeFeedback } from 'store/appStateSlice';\r\n\r\nconst ShowFeedback = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const feedback = useSelector((state: RootState) => state.appState.feedback);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch(closeFeedback());\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={feedback.open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert\r\n        onClose={handleClose}\r\n        severity={feedback.severity}\r\n        variant=\"filled\"\r\n        elevation={6}\r\n      >\r\n        {feedback.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ShowFeedback;\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, List, ListItem, ListItemIcon } from '@material-ui/core';\r\n\r\nconst ListDialog: React.FC<{\r\n  anchor: (openFunc: () => void) => JSX.Element;\r\n  action: (text: string) => void;\r\n  options: [string, JSX.Element | null][] | string[];\r\n  title: string;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({ anchor, action, options, title, onClose, onOpen }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleOnClick = (text: string) => {\r\n    action(text);\r\n    if (onClose) onClose();\r\n    handleClose();\r\n  };\r\n\r\n  const opts: [string, JSX.Element | null][] =\r\n    typeof (options as string[])[0] === 'string'\r\n      ? (options as string[]).map((o: string) => [o, null])\r\n      : (options as [string, JSX.Element | null][]);\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <List>\r\n          {opts.map(([text, icon]) => (\r\n            <ListItem button onClick={() => handleOnClick(text)} key={text}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              {text}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListDialog;\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Typography, Chip } from '@material-ui/core';\r\nimport ListDialog from '../ListDialog';\r\nimport { Unit } from 'store/data';\r\n\r\nconst UnitSelector: React.FC<{\r\n  unit: Unit;\r\n  options: string[];\r\n  onClose: (name: string) => void;\r\n}> = ({ unit, options, onClose }) => {\r\n  const name = unit.customName ? unit.customName : unit.name;\r\n\r\n  const setSelectedUnit = (value: string) => {\r\n    if (value !== unit.name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={setSelectedUnit}\r\n      anchor={(openFunc: () => void) => (\r\n        <>\r\n          <Typography variant=\"h5\" onClick={openFunc}>\r\n            <Chip label={unit.points} color=\"primary\" />\r\n            &nbsp;&nbsp;\r\n            {name}\r\n            <ArrowDropDownIcon />\r\n          </Typography>\r\n          {unit.customName && (\r\n            <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n              {unit.name}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Choose unit type\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnitSelector;\r\n","import unitData from 'assets/dragonRampantData/units.json';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\n\r\nexport type UnitStats = {\r\n  attack: number;\r\n  move: number;\r\n  shoot: number;\r\n  courage: number;\r\n  armour: number;\r\n  attackValue: number;\r\n  defenceValue: number;\r\n  shootValue: number;\r\n  shootRange: number | string;\r\n  movement: number;\r\n  strengthPoints: number;\r\n};\r\n\r\nexport type UnitOption = {\r\n  points?: number;\r\n  summary?: string;\r\n  remove?: string[];\r\n  add?: string[];\r\n  setStats?: Partial<UnitStats>;\r\n};\r\ntype UnitOptions = { [optionName: string]: UnitOption };\r\n\r\nexport type Unit = {\r\n  name: string;\r\n  type: string;\r\n  points: number;\r\n  stats: UnitStats;\r\n  rules: string[];\r\n  options: string[];\r\n  fantasticalRules: string[];\r\n  customName?: string;\r\n};\r\n\r\nexport type DataUnit = {\r\n  name: string;\r\n  type: string;\r\n  points: number;\r\n  stats: UnitStats;\r\n  rules: string[];\r\n  options: UnitOptions;\r\n  fantasticalRules: string[];\r\n  customName?: string;\r\n};\r\n\r\nexport type CompactUnit = {\r\n  name: string;\r\n  options: string[];\r\n  fantasticalRules: string[];\r\n  customName?: string;\r\n};\r\n\r\nexport type fantasticalRule = {\r\n  name: string;\r\n  points: number;\r\n};\r\n\r\nexport type Spell = {\r\n  name: string;\r\n  difficulty: number;\r\n  target: string;\r\n  duration: string;\r\n  effect: string;\r\n};\r\n\r\ntype Units = { [name: string]: DataUnit };\r\ntype FantasticalRules = { [name: string]: fantasticalRule };\r\ntype Rules = { [name: string]: string };\r\ntype Spells = { [name: string]: Spell };\r\n\r\nexport type Data = {\r\n  unitData: Units;\r\n  unitNames: string[];\r\n  fantasticalRulesData: FantasticalRules;\r\n  rulesData: Rules;\r\n  spellData: Spells;\r\n};\r\n\r\nconst data: Data = {\r\n  unitData: unitData,\r\n  unitNames: Object.keys(unitData).slice(1),\r\n  fantasticalRulesData: fantasticalRulesData,\r\n  rulesData: rulesData,\r\n  spellData: spellData,\r\n};\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography, Tooltip } from '@material-ui/core';\r\nimport data, { Unit } from 'store/data';\r\n\r\nconst Options: React.FC<{ unit: Unit; onChange: (unit: Unit) => void }> = ({\r\n  unit,\r\n  onChange,\r\n}) => {\r\n  const optionsData = data.unitData[unit.name].options;\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = (option: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter((val) => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map((option) => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Tooltip title={optionsData[option].summary}>\r\n                <Typography>\r\n                  {option}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{optionsData[option].points}\r\n                  </Typography>\r\n                </Typography>\r\n              </Tooltip>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Typography, Box, Select, MenuItem } from '@material-ui/core';\r\nimport data, { Unit } from 'store/data';\r\n\r\nconst FantasticalRules: React.FC<{ unit: Unit; onChange: (unit: Unit) => void }> = ({\r\n  unit,\r\n  onChange,\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const unitData = data.unitData[unit.name];\r\n  const fantasticalRulesData = data.fantasticalRulesData;\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter((val) => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) =>\r\n    onChange({ ...unit, fantasticalRules: [...(e.target.value as string[])] });\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map((name) => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onClick={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter((v) => v !== name),\r\n                      ],\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Typography color=\"primary\">\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FantasticalRules;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Hidden } from '@material-ui/core';\r\nimport { UnitStats } from 'store/data';\r\n\r\nconst StatBlock: React.FC<{ stats: UnitStats }> = ({ stats }) => {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default StatBlock;\r\n","import React from 'react';\r\nimport { Typography, List, Container, ListItem } from '@material-ui/core';\r\n\r\nconst SpecialRules: React.FC<{ rules: string[] }> = ({ rules }) => {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map((r) => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default SpecialRules;\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nconst TextInputDialog: React.FC<{\r\n  anchor: (openFunc: () => void) => JSX.Element;\r\n  action: (text: string) => void;\r\n  title?: string;\r\n  label?: string;\r\n  defaultValue?: string;\r\n  cancelText?: string;\r\n  okayText?: string;\r\n  margin?: 'none' | 'dense' | 'normal' | undefined;\r\n  onClose?: () => void;\r\n  onOpen?: () => void;\r\n}> = ({\r\n  anchor,\r\n  action,\r\n  title = '',\r\n  label = '',\r\n  defaultValue = '',\r\n  cancelText = 'Cancel',\r\n  okayText = 'okay',\r\n  margin = 'dense',\r\n  onClose,\r\n  onOpen,\r\n}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('');\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (onOpen) onOpen();\r\n  };\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  const handleKeyPressed = (key: string) => {\r\n    if (key === 'Enter') {\r\n      setValue(value);\r\n      action(value);\r\n      handleClose();\r\n    } else if (key === 'ESC') handleClose();\r\n  };\r\n  const handleAction = () => {\r\n    action(value);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {anchor(handleOpen)}\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin={margin}\r\n            label={label}\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={defaultValue || value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            onKeyPress={(e) => handleKeyPressed(e.key)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {cancelText}\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {okayText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInputDialog;\r\n","import { createSlice, PayloadAction, createSelector } from '@reduxjs/toolkit';\r\nimport data, { Unit, CompactUnit } from './data';\r\n\r\ntype RosterUnits = { [id: number]: Unit };\r\n\r\nexport type RosterState = {\r\n  name: string;\r\n  nextID: number;\r\n  units: RosterUnits;\r\n  unitOrder: number[];\r\n};\r\n\r\nexport type CompactRosterState = {\r\n  name: string;\r\n  nextID: number;\r\n  units: { [id: number]: CompactUnit };\r\n  unitOrder: number[];\r\n};\r\n\r\nconst rosterInitialState: RosterState = {\r\n  name: 'New List',\r\n  nextID: 0,\r\n  units: {},\r\n  unitOrder: [],\r\n};\r\n\r\nconst rosterSlice = createSlice({\r\n  name: 'roster',\r\n  initialState: rosterInitialState,\r\n  reducers: {\r\n    newRoster: () => ({ ...rosterInitialState }),\r\n    setRoster: (_, action: PayloadAction<RosterState>) => ({ ...action.payload }),\r\n    updateRoster: (state, action: PayloadAction<Partial<RosterState>>) => ({\r\n      ...state,\r\n      ...action.payload,\r\n    }),\r\n    addUnit: {\r\n      reducer: (state: RosterState, action: PayloadAction<[Unit?, number?]>) => {\r\n        let [unit, index] = action.payload;\r\n        unit = unit\r\n          ? unit\r\n          : { ...data.unitData.Unit, options: [], fantasticalRules: [] };\r\n        const id = state.nextID;\r\n        index == null\r\n          ? state.unitOrder.push(id)\r\n          : state.unitOrder.splice(index + 1, 0, id);\r\n        state.nextID += 1;\r\n        state.units[id] = unit;\r\n      },\r\n      prepare: (unit?: Unit, index?: number): { payload: [Unit?, number?] } => ({\r\n        payload: [unit, index],\r\n      }),\r\n    },\r\n    setUnit: {\r\n      reducer: (state, action: PayloadAction<[number, string]>) => {\r\n        const [id, name] = action.payload;\r\n        state.units[id] = { ...data.unitData[name], options: [], fantasticalRules: [] };\r\n      },\r\n      prepare: (id: number, name: string): { payload: [number, string] } => ({\r\n        payload: [id, name],\r\n      }),\r\n    },\r\n    updateUnit: {\r\n      reducer: (state, action: PayloadAction<[number, Partial<Unit>]>) => {\r\n        const [id, newAttributes] = action.payload;\r\n        state.units[id] = { ...state.units[id], ...newAttributes };\r\n      },\r\n      prepare: (\r\n        id: number,\r\n        newAttributes: Partial<Unit>\r\n      ): { payload: [number, Partial<Unit>] } => ({ payload: [id, newAttributes] }),\r\n    },\r\n    removeUnit: (state, action: PayloadAction<number>) => {\r\n      const id = action.payload;\r\n      delete state.units[id];\r\n      state.unitOrder.splice(state.unitOrder.indexOf(id), 1);\r\n    },\r\n    renameUnit: {\r\n      reducer: (state, action: PayloadAction<[number, string]>) => {\r\n        const [id, name] = action.payload;\r\n        state.units[id].customName = name;\r\n      },\r\n      prepare: (id: number, name: string): { payload: [number, string] } => ({\r\n        payload: [id, name],\r\n      }),\r\n    },\r\n    moveUnit: {\r\n      reducer: (state, action: PayloadAction<[number, 'left' | 'right']>) => {\r\n        const [id, direction] = action.payload;\r\n        const index = state.unitOrder.indexOf(id);\r\n        const nextIndex = direction === 'left' ? index - 1 : index + 1;\r\n        if (nextIndex < 0 || nextIndex >= state.unitOrder.length) return state;\r\n        [state.unitOrder[nextIndex], state.unitOrder[index]] = [\r\n          state.unitOrder[index],\r\n          state.unitOrder[nextIndex],\r\n        ];\r\n      },\r\n      prepare: (\r\n        id: number,\r\n        direction: 'left' | 'right'\r\n      ): { payload: [number, 'left' | 'right'] } => ({ payload: [id, direction] }),\r\n    },\r\n  },\r\n});\r\n\r\nconst getTotalPoints = createSelector(\r\n  (units: RosterUnits) => units,\r\n  (units) => Object.values(units).reduce((acc, unit) => acc + unit.points, 0)\r\n);\r\n\r\nconst getSpecialRules = createSelector(\r\n  (units: RosterUnits) => units,\r\n  (units) =>\r\n    Object.values(units)\r\n      .reduce(\r\n        (acc: string[], unit) =>\r\n          unit.rules.reduce(\r\n            (acc, rule) =>\r\n              data.rulesData[data.rulesData[rule]]\r\n                ? [...acc, data.rulesData[rule]]\r\n                : [...acc, rule],\r\n            acc\r\n          ),\r\n        []\r\n      )\r\n      .sort()\r\n      .filter((rule, index, ary) => !index || rule !== ary[index - 1])\r\n);\r\n\r\nexport { getTotalPoints, getSpecialRules };\r\n\r\nexport const {\r\n  newRoster,\r\n  setRoster,\r\n  updateRoster,\r\n  addUnit,\r\n  setUnit,\r\n  updateUnit,\r\n  removeUnit,\r\n  renameUnit,\r\n  moveUnit,\r\n} = rosterSlice.actions;\r\n\r\nexport default rosterSlice.reducer;\r\n","import React from 'react';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport { IconButton, Box, Tooltip } from '@material-ui/core';\r\nimport TextInputDialog from '../TextInputDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { addUnit, moveUnit, renameUnit } from 'store/rosterSlice';\r\nimport { Unit } from 'store/data';\r\n\r\nconst Actions: React.FC<{ id: number; unit: Unit }> = ({ id, unit }) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n\r\n  const moveLeft = () => dispatch(moveUnit(id, 'left'));\r\n  const moveRight = () => dispatch(moveUnit(id, 'right'));\r\n  const cloneUnit = () => dispatch(addUnit(unit, roster.unitOrder.indexOf(id)));\r\n  const rename = (value: string) => dispatch(renameUnit(id, value));\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" width=\"97%\" style={{ height: 25, marginTop: 10 }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Move back\">\r\n            <IconButton onClick={moveLeft}>\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Move forward\">\r\n            <IconButton onClick={moveRight}>\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box flexGrow={1}></Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextInputDialog\r\n            anchor={(openFunc: () => void) => (\r\n              <Tooltip title=\"Rename unit\">\r\n                <IconButton onClick={openFunc}>\r\n                  <TextFieldsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            action={rename}\r\n            title=\"Enter the name for the unit\"\r\n            label=\"Unit name\"\r\n            defaultValue={unit.customName}\r\n            okayText=\"Rename\"\r\n          />\r\n          <Tooltip title=\"Clone unit\">\r\n            <IconButton onClick={cloneUnit}>\r\n              <PersonAddOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nconst ExpandIcon: React.FC<{\r\n  expanded: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\r\n}> = ({ expanded, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      className={clsx(classes.expand, {\r\n        [classes.expandOpen]: expanded,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      <ExpandMoreIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ExpandIcon;\r\n","import data from 'store/data';\r\nimport { CompactUnit, Unit } from 'store/data';\r\n\r\nconst buildUnit = (unitToBuild: CompactUnit | Unit) => {\r\n  const unitData = data.unitData[unitToBuild.name];\r\n\r\n  let unit: Unit = {\r\n    ...unitData,\r\n    customName: unitToBuild.customName || '',\r\n    options: [...unitToBuild.options],\r\n    fantasticalRules: [...unitToBuild.fantasticalRules],\r\n  };\r\n\r\n  let points = unitData.points;\r\n  for (const opt of unit.options) {\r\n    const option = unitData.options[opt];\r\n    points += option.points || 0;\r\n\r\n    if (option.setStats) {\r\n      for (const [key, val] of Object.entries(option.setStats)) {\r\n        unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n      }\r\n    }\r\n\r\n    if (option.add) {\r\n      for (const rule of option.add) {\r\n        unit.rules = [...unit.rules, rule];\r\n      }\r\n    }\r\n\r\n    if (option.remove) {\r\n      for (const rule of option.remove) {\r\n        unit.rules = unit.rules.filter((val) => val !== rule);\r\n      }\r\n    }\r\n  }\r\n  for (const fant of unit.fantasticalRules) {\r\n    const fantasticRule = data.fantasticalRulesData[fant];\r\n    points += fantasticRule.points;\r\n    unit.rules = [...unit.rules, fantasticRule.name];\r\n  }\r\n\r\n  unit = { ...unit, points: points };\r\n  return unit;\r\n};\r\n\r\nexport default buildUnit;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, CardHeader, Typography, Chip, Collapse } from '@material-ui/core';\r\nimport UnitSelector from './UnitSelector';\r\nimport Options from './Options';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport StatBlock from './StatBlock';\r\nimport SpecialRules from './SpecialRules';\r\nimport Actions from './Actions';\r\nimport ExpandIcon from '../ExpandIcon';\r\nimport data, { Unit as UnitType } from 'store/data';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { setUnit, updateUnit, removeUnit } from 'store/rosterSlice';\r\nimport buildUnit from './buildUnit';\r\n\r\nconst Unit: React.FC<{ id: number }> = ({ id }) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const unit = useSelector((state: RootState) => state.roster.units[id]);\r\n  const ui = useSelector((state: RootState) => state.ui);\r\n\r\n  const [expanded, setExpanded] = React.useState(true);\r\n  const handleExpandClick = () => setExpanded(!expanded);\r\n\r\n  const changeUnit = (name: string) => dispatch(setUnit(id, name));\r\n\r\n  const handleChange = (unit: UnitType) => {\r\n    unit = buildUnit(unit);\r\n    dispatch(updateUnit(id, { ...unit }));\r\n  };\r\n\r\n  const handleRemove = () => dispatch(removeUnit(id));\r\n\r\n  return (\r\n    <Card style={{ marginBottom: 25, maxWidth: 400, width: '100%' }}>\r\n      {ui.viewMode ? (\r\n        <CardHeader\r\n          title={\r\n            <>\r\n              <Typography variant=\"h5\">\r\n                <Chip label={unit.points} color=\"primary\" />\r\n                &nbsp;&nbsp;\r\n                {unit.customName ? unit.customName : unit.name}\r\n              </Typography>\r\n              {unit.customName &&\r\n                (expanded ? (\r\n                  <Typography style={{ marginLeft: 45, marginBottom: -25 }}>\r\n                    {unit.name}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography style={{ marginLeft: 45 }}>{unit.name}</Typography>\r\n                ))}\r\n            </>\r\n          }\r\n          action={<ExpandIcon expanded={expanded} onClick={handleExpandClick} />}\r\n        />\r\n      ) : (\r\n        <CardHeader\r\n          title={\r\n            <UnitSelector unit={unit} onClose={changeUnit} options={data.unitNames} />\r\n          }\r\n          action={\r\n            <Button onClick={handleRemove}>\r\n              <CloseIcon />\r\n            </Button>\r\n          }\r\n        />\r\n      )}\r\n      <Collapse in={!ui.viewMode || expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!ui.editMode && (\r\n            <>\r\n              <StatBlock stats={unit.stats} />\r\n              <SpecialRules rules={unit.rules} />\r\n            </>\r\n          )}\r\n          {!ui.viewMode && (\r\n            <>\r\n              <Options onChange={handleChange} unit={unit} />\r\n              <FantasticalRules onChange={handleChange} unit={unit} />\r\n              <Actions id={id} unit={unit} />\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Unit;\r\n","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Fab, Box, Typography } from '@material-ui/core';\r\nimport Unit from './Unit/Unit';\r\nimport buildUnit from './Unit/buildUnit';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { CompactUnit } from 'store/data';\r\nimport { addUnit, RosterState, CompactRosterState } from 'store/rosterSlice';\r\n\r\nconst packRoster = (roster: RosterState): CompactRosterState => {\r\n  const units: CompactUnit[] = Object.values(roster.units).map((unit) => ({\r\n    name: unit.name,\r\n    customName: unit.customName || '',\r\n    options: unit.options,\r\n    fantasticalRules: unit.fantasticalRules,\r\n  }));\r\n  return { ...roster, units: units };\r\n};\r\n\r\nconst unpackRoster = (compactRoster: CompactRosterState): RosterState => {\r\n  const units = Object.values(compactRoster.units).map((unit) => buildUnit(unit));\r\n  return { ...compactRoster, units: units };\r\n};\r\n\r\nconst Roster = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n  const ui = useSelector((state: RootState) => state.ui);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map((id) => (\r\n          <Unit id={id} key={id} />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !ui.viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!ui.viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={() => dispatch(addUnit())}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roster;\r\nexport { packRoster, unpackRoster };\r\n","import React, { useState } from 'react';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { unpackRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nconst LoadList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [savedRosters, setSavedRosters] = useState<string[]>([]);\r\n\r\n  const handleOpen = () =>\r\n    setSavedRosters([...Object.keys(store.get('savedRosters', {}))]);\r\n\r\n  const loadList = (name: string) => {\r\n    try {\r\n      const roster = unpackRoster(store.get('savedRosters')[name]);\r\n      dispatch(setRoster({ ...roster }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`${name} loaded!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not load ${name}!`, 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={loadList}\r\n      onOpen={handleOpen}\r\n      anchor={(openFunc) => (\r\n        <>\r\n          <Tooltip title=\"Load List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <SaveOutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Load List</Typography>}\r\n        </>\r\n      )}\r\n      options={savedRosters}\r\n      title=\"Choose List to load\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoadList;\r\n","import React from 'react';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport store from 'store';\r\nimport { packRoster } from './Roster';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { showFeedback } from 'store/appStateSlice';\r\n\r\nconst SaveList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n\r\n  const saveList = () => {\r\n    if (roster.name === 'New List') return false;\r\n    let savedLists = store.get('savedRosters') || [];\r\n    savedLists = {\r\n      ...savedLists,\r\n      [roster.name]: { ...packRoster(roster) },\r\n    };\r\n    store.set('savedRosters', savedLists);\r\n    return true;\r\n  };\r\n\r\n  const saveRoster = () => {\r\n    if (saveList()) dispatch(showFeedback('Saved!', 'success'));\r\n    else dispatch(showFeedback('You have to give the list a name!', 'error'));\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save List\">\r\n        <IconButton color=\"inherit\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save List</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SaveList;\r\n","import React, { useState } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport ListDialog from './ListDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\n\r\nconst DeleteList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [savedRosters, setSavedRosters] = useState<string[]>([]);\r\n\r\n  const handleOpen = () =>\r\n    setSavedRosters([...Object.keys(store.get('savedRosters', {}))]);\r\n\r\n  const removeList = (name: string) => {\r\n    if (name === 'Delete all') store.set('savedRosters', []);\r\n    else {\r\n      let savedLists = store.get('savedRosters');\r\n      delete savedLists[name];\r\n      store.set('savedRosters', savedLists);\r\n    }\r\n    dispatch(showFeedback('Deleted!', 'success'));\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={removeList}\r\n      onOpen={handleOpen}\r\n      anchor={(openFunc) => (\r\n        <>\r\n          <Tooltip title=\"Delete List\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Delete List</Typography>}\r\n        </>\r\n      )}\r\n      options={savedRosters}\r\n      title=\"Choose List to delete\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteList;\r\n","import React from 'react';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { packRoster } from './Roster';\r\nimport ListDialog from './ListDialog';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { showFeedback } from 'store/appStateSlice';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\n\r\nconst copyToClipboard = (text: string) => navigator.clipboard.writeText(text);\r\n\r\nconst ExportList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const roster = useSelector((state: RootState) => state.roster);\r\n  const getImportableString = () => JSON.stringify(packRoster(roster));\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const armyCost = getTotalPoints(units);\r\n\r\n  const getListAsText = () => {\r\n    let text: string[] = [];\r\n    text.push(`${roster.name} @${armyCost} points`);\r\n    text.push('=====================================');\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n      text.push('-----------------------------------');\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        for (const option of options) text.push(`- ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const getListAsMarkdown = () => {\r\n    let text: string[] = [];\r\n    text.push(`**${roster.name} @${armyCost} points**`);\r\n    for (const unit of Object.values(roster.units)) {\r\n      text.push('');\r\n      text.push(\r\n        `* ${unit.customName ? unit.customName + ' (' + unit.name + ')' : unit.name} @${\r\n          unit.points\r\n        } points`\r\n      );\r\n\r\n      const options = [...unit.options, ...unit.fantasticalRules];\r\n      if (options.length) {\r\n        text.push('');\r\n        for (const option of options) text.push(`    - ${option}`);\r\n      }\r\n    }\r\n    text.push('');\r\n    return text.join('\\n');\r\n  };\r\n\r\n  const options: [string, JSX.Element][] = [\r\n    ['As an importable String', <ArrowDownwardIcon />],\r\n    ['As text', <FormatAlignLeftIcon />],\r\n    ['As markdown text', <FormatAlignJustifyIcon />],\r\n  ];\r\n\r\n  const funcs = [getImportableString, getListAsText, getListAsMarkdown];\r\n\r\n  const exportList = (text: string) => {\r\n    let exportFunc: () => string =\r\n      funcs[options.reduce((acc, opt, i) => (opt[0] === text ? i : acc), 0)];\r\n\r\n    try {\r\n      const list = exportFunc();\r\n      copyToClipboard(list);\r\n      dispatch(showFeedback('List copied to clipboard!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not export the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDialog\r\n      action={exportList}\r\n      anchor={(openFunc) => (\r\n        <>\r\n          <Tooltip title=\"Export\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Export List</Typography>}\r\n        </>\r\n      )}\r\n      options={options}\r\n      title=\"Chose how to export\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExportList;\r\n","import React from 'react';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { unpackRoster } from './Roster';\r\nimport TextInputDialog from './TextInputDialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoster } from 'store/rosterSlice';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nconst ImportList: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  onClose,\r\n  showText,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImport = (value?: string) => {\r\n    if (!value) return;\r\n    try {\r\n      const list = unpackRoster(JSON.parse(value));\r\n      dispatch(setRoster({ ...list }));\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback('List imported!', 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback('Could not import the list!', 'error'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextInputDialog\r\n      anchor={(openFunc) => (\r\n        <>\r\n          <Tooltip title=\"Import list\">\r\n            <IconButton color=\"inherit\" onClick={openFunc}>\r\n              <GetAppIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showText && <Typography onClick={openFunc}>Import list</Typography>}\r\n        </>\r\n      )}\r\n      action={handleImport}\r\n      title=\"Enter the import string\"\r\n      label=\"Exported String\"\r\n      okayText=\"Import\"\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ImportList;\r\n","import React from 'react';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst Backup: React.FC<{ showText: boolean; onClose?: () => void }> = ({\r\n  showText = false,\r\n  onClose = undefined,\r\n}) => {\r\n  const backup = () => {\r\n    const savedLists = JSON.stringify(store.get('savedRosters') || []);\r\n    const file = new Blob([savedLists], { type: 'text/plain;charset=utf-8' });\r\n\r\n    let date = new Date();\r\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\r\n    date = new Date(date.getTime() - offsetMs);\r\n    const dateText = date.toISOString().slice(0, 10).replace(/-/g, '/');\r\n\r\n    saveAs(file, `${dateText}_DRAB.sav`);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={backup}>\r\n          <BackupIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={backup}>Backup</Typography>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Backup;\r\n","import React from 'react';\r\nimport RestorePageIcon from '@material-ui/icons/RestorePage';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showFeedback, toggleForceInputUpdate } from 'store/appStateSlice';\r\n\r\nconst Restore: React.FC<{ onClose?: () => void; showText?: boolean }> = ({\r\n  showText,\r\n  onClose,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let fileReader: FileReader;\r\n  const fileDialog = React.useRef<HTMLInputElement>(null);\r\n\r\n  const restore = () => {\r\n    try {\r\n      let savedLists = store.get('savedRosters') || [];\r\n      const content = fileReader.result as string;\r\n      const contentAsObject: Object = JSON.parse(content);\r\n      savedLists = { ...savedLists, ...contentAsObject };\r\n      store.set('savedRosters', savedLists);\r\n      dispatch(toggleForceInputUpdate());\r\n      dispatch(showFeedback(`Restored!`, 'success'));\r\n    } catch (err) {\r\n      dispatch(showFeedback(`Could not restore!`, 'error'));\r\n    }\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const handleFileChosen = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = restore;\r\n    if (event.target.files) fileReader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  const openFileDialog = () => {\r\n    if (fileDialog.current) fileDialog.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Backup\">\r\n        <IconButton color=\"inherit\" onClick={openFileDialog}>\r\n          <RestorePageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={openFileDialog}>Restore</Typography>}\r\n      <input\r\n        type=\"file\"\r\n        ref={fileDialog}\r\n        style={{ display: 'none' }}\r\n        id=\"restoreFile\"\r\n        accept=\".sav\"\r\n        onChange={handleFileChosen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Restore;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport store from 'store';\r\n\r\nexport type UIState = {\r\n  viewMode: boolean;\r\n  editMode: boolean;\r\n  darkMode: null | boolean;\r\n  validationExpanded: boolean;\r\n  rulesSummaryExpanded: boolean;\r\n  spellsExpanded: boolean;\r\n  statisticsExpanded: boolean;\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: {\r\n    viewMode: false,\r\n    editMode: false,\r\n    darkMode: null,\r\n    validationExpanded: true,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true,\r\n  } as UIState,\r\n  reducers: {\r\n    setUI: (_, action: PayloadAction<UIState>) => {\r\n      store.set('uiOptions', { ...action.payload });\r\n      return { ...action.payload };\r\n    },\r\n    toggleUIOption: (state: UIState, action: PayloadAction<keyof UIState>) => {\r\n      const option = action.payload;\r\n      store.set('uiOptions', { ...state, [option]: !state[option] });\r\n      state[option] = !state[option];\r\n    },\r\n    updateUI: (state, action: PayloadAction<Partial<UIState>>) => {\r\n      store.set('uiOptions', { ...state, ...action.payload });\r\n      return { ...state, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUI, toggleUIOption, updateUI } = uiSlice.actions;\r\nexport default uiSlice.reducer;\r\n","import React from 'react';\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { updateUI } from 'store/uiSlice';\r\n\r\nconst Darkmode: React.FC<{ showText?: boolean }> = ({ showText }) => {\r\n  let darkMode = useSelector((state: RootState) => state.ui.darkMode);\r\n  const autoDarkMode = useSelector((state: RootState) => state.appState.autoDarkMode);\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const handleClick = () => {\r\n    if (darkMode === undefined) darkMode = autoDarkMode;\r\n    dispatch(updateUI({ darkMode: !darkMode }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Dark Mode\">\r\n        <IconButton onClick={handleClick}>\r\n          <BrightnessHighIcon color={darkMode ? 'inherit' : 'disabled'} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && (\r\n        <Typography\r\n          color={darkMode ? 'inherit' : 'textSecondary'}\r\n          onClick={handleClick}\r\n        >\r\n          Dark Mode\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Darkmode;\r\n","import React from 'react';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {\r\n  Dialog,\r\n  Tooltip,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n  Box,\r\n  Chip,\r\n} from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nconst About: React.FC<{ onClose?: () => void }> = ({ onClose = undefined }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load List\">\r\n        <IconButton color=\"inherit\" onClick={handleOpen}>\r\n          <InfoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {<Typography onClick={handleOpen}>About</Typography>}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={{ textAlign: 'center' }}>About</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body1\">\r\n            A simple Army Builder for the tabletop game{' '}\r\n            {<a href=\"https://ospreypublishing.com/dragon-rampant\">Dragon Rampant</a>}.\r\n          </Typography>\r\n          <Box display=\"flex\" style={{ marginTop: 25 }}>\r\n            <Chip\r\n              label=\"View on Github\"\r\n              icon={<GitHubIcon />}\r\n              component=\"a\"\r\n              href=\"#chip\"\r\n              clickable\r\n            />\r\n            <Box flexGrow={1}></Box>\r\n            <Chip label=\"License: MIT\" />\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { List, ListItem, Drawer, Divider } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport DeleteList from './DeleteList';\r\nimport ExportList from './ExportList';\r\nimport ImportList from './ImportList';\r\nimport Backup from './Backup';\r\nimport Restore from './Restore';\r\nimport DarkMode from './DarkMode';\r\nimport About from './About';\r\n\r\nexport default function SideMenu() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = (open: boolean) => (event: any) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Export'}>\r\n            <ExportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Import'}>\r\n            <ImportList onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'Backup'}>\r\n            <Backup onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'Restore'}>\r\n            <Restore onClose={handleClose} showText={true} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button key={'DarkMode'}>\r\n            <DarkMode showText={true} />\r\n          </ListItem>\r\n          <ListItem button key={'About'}>\r\n            <About onClose={handleClose} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppBar as AppBarMaterial, Box, IconProps } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton, Fab, Tooltip, Hidden } from '@material-ui/core';\r\nimport LoadList from './LoadList';\r\nimport SaveList from './SaveList';\r\nimport SideMenu from './SideMenu';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { UIState, updateUI } from 'store/uiSlice';\r\nimport { newRoster, getTotalPoints } from 'store/rosterSlice';\r\n\r\nexport default function AppBar() {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const ui = useSelector((state: RootState) => state.ui);\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const armyCost = getTotalPoints(units);\r\n\r\n  const changeViewMode = (clicked: keyof UIState, newState: boolean) => {\r\n    const notClicked = clicked === 'viewMode' ? 'editMode' : 'viewMode';\r\n    let newStates = { [clicked]: newState };\r\n    if (newState) newStates = { ...newStates, [notClicked]: false };\r\n    dispatch(updateUI(newStates));\r\n  };\r\n\r\n  const ToggleUIButton: React.FC<{\r\n    option: keyof UIState;\r\n    Icon: React.ComponentType<IconProps>;\r\n    title: string;\r\n    onClick: (arg0: keyof UIState, arg1: boolean) => void;\r\n  }> = ({ option, Icon, title, onClick }) => (\r\n    <Tooltip title={title}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        onClick={() => {\r\n          onClick(option, !ui[option]);\r\n        }}\r\n      >\r\n        <Icon fontSize=\"small\" color={ui[option] ? 'inherit' : 'disabled'} />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <SideMenu />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton color=\"inherit\" onClick={() => dispatch(newRoster())}>\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList />\r\n            <LoadList />\r\n          </Box>\r\n          <Box flexGrow={1}></Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <ToggleUIButton\r\n              option=\"viewMode\"\r\n              Icon={VisibilityIcon}\r\n              title=\"View mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <ToggleUIButton\r\n              option=\"editMode\"\r\n              Icon={EditIcon}\r\n              title=\"Edit mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { updateRoster } from 'store/rosterSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    border: 0,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst ListName = () => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const rosterName = useSelector((state: RootState) => state.roster.name);\r\n  const inputUpdate = useSelector((state: RootState) => state.appState.inputUpdate);\r\n\r\n  return (\r\n    <FormControl>\r\n      <Typography\r\n        className={classes.root}\r\n        variant=\"h4\"\r\n        key={inputUpdate.toString()}\r\n        component=\"input\"\r\n        value={rosterName}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          dispatch(updateRoster({ name: e.target.value }))\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ListName;\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  ListItemIcon,\r\n} from '@material-ui/core';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    backgroundColor: theme.palette.error.main,\r\n    color: theme.palette.error.contrastText,\r\n  },\r\n  details: {\r\n    backgroundColor: theme.palette.error.light,\r\n    color: theme.palette.error.contrastText,\r\n  },\r\n}));\r\n\r\nconst Validation = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const validationExpanded = useSelector(\r\n    (state: RootState) => state.ui.validationExpanded\r\n  );\r\n  const classes = useStyles();\r\n  const units = Object.values(useSelector((state: RootState) => state.roster.units));\r\n\r\n  const warnings = [];\r\n  for (const unit of units) {\r\n    if (unit.points > 10)\r\n      warnings.push([unit.name, 'No Unit may cost more than 10 points!']);\r\n    if (unit.name !== 'Unit' && unit.points <= 0)\r\n      warnings.push([unit.name, 'No Unit may cost 0 or less points!']);\r\n    if (\r\n      unit.options.includes('Short range missiles') &&\r\n      unit.options.includes('Mixed Weapons')\r\n    )\r\n      warnings.push([\r\n        unit.name,\r\n        'Short range missiles and Mixed Weapons may not be used together!',\r\n      ]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {warnings.length !== 0 && (\r\n        <ExpansionPanel\r\n          expanded={validationExpanded}\r\n          onChange={() => dispatch(toggleUIOption('validationExpanded'))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary\r\n            className={classes.title}\r\n            expandIcon={<ExpandMoreIcon className={classes.title} />}\r\n          >\r\n            <Typography variant=\"h5\">Warnings</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={classes.details}>\r\n            <List>\r\n              {warnings.map(([name, text], index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemIcon className={classes.details}>\r\n                    <ErrorIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={name} secondary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Validation;\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n} from '@material-ui/core';\r\nimport data from 'store/data';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\nimport { getSpecialRules } from 'store/rosterSlice';\r\n\r\nconst rulesData = data.rulesData;\r\n\r\nconst RulesSummary = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const rulesSummaryExpanded = useSelector(\r\n    (state: RootState) => state.ui.rulesSummaryExpanded\r\n  );\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const specialRules = getSpecialRules(units);\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() => dispatch(toggleUIOption('rulesSummaryExpanded'))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map((rule) => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n};\r\n\r\nexport default RulesSummary;\r\n","import React, { useState } from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Collapse,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport data from 'store/data';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\nimport { getSpecialRules } from 'store/rosterSlice';\r\n\r\nconst spellData = data.spellData;\r\n\r\nexport default function SpellTable() {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const spellsExpanded = useSelector((state: RootState) => state.ui.spellsExpanded);\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const [open, setOpen] = useState([...Array(Object.keys(spellData))].map(() => false));\r\n  const specialRules = getSpecialRules(units);\r\n\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleSpellClick = (index: number) => {\r\n    const newOpen = [...open];\r\n    newOpen[index] = !open[index];\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => dispatch(toggleUIOption('spellsExpanded'))}\r\n          style={{ maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <Hidden smDown>\r\n              <TableContainer>\r\n                <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headspelltable\">\r\n                      <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                      <Hidden smDown>\r\n                        <TableCell align=\"center\">Difficulty</TableCell>\r\n                      </Hidden>\r\n                      <Hidden mdUp>\r\n                        <TableCell align=\"center\">Dif</TableCell>\r\n                      </Hidden>\r\n                      <TableCell>Target</TableCell>\r\n                      <TableCell>Duration</TableCell>\r\n                      <TableCell>Effect</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.values(spellData).map((spell) => (\r\n                      <TableRow key={spell.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {spell.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                        <TableCell>{spell.target}</TableCell>\r\n                        <TableCell>{spell.duration}</TableCell>\r\n                        <TableCell>{spell.effect}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <List>\r\n                {Object.values(spellData).map((spell, index) => (\r\n                  <Box key={index}>\r\n                    <ListItem\r\n                      key={spell.name + 'small'}\r\n                      button\r\n                      onClick={() => handleSpellClick(index)}\r\n                    >\r\n                      <ListItemText primary={spell.name} />\r\n                      <Box width={25}></Box>\r\n                      {open[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </ListItem>\r\n                    <Collapse in={open[index]} timeout=\"auto\" unmountOnExit>\r\n                      <List key={spell.name + 'list'} dense style={{ paddingLeft: 20 }}>\r\n                        <ListItem key={spell.name + spell.difficulty}>\r\n                          <ListItemText\r\n                            primary=\"Difficulty: \"\r\n                            secondary={spell.difficulty}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.target}>\r\n                          <ListItemText primary=\"Target: \" secondary={spell.target} />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.duration}>\r\n                          <ListItemText\r\n                            primary=\"Duration: \"\r\n                            secondary={spell.duration}\r\n                          />\r\n                        </ListItem>\r\n                        <ListItem key={spell.name + spell.effect}>\r\n                          <ListItemText primary=\"Effect: \" secondary={spell.effect} />\r\n                        </ListItem>\r\n                      </List>\r\n                    </Collapse>\r\n                  </Box>\r\n                ))}\r\n              </List>\r\n            </Hidden>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  LabelList,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst CustomLabel = ({ x, y, width, value }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <text\r\n      x={x + width / 2}\r\n      y={y - 5}\r\n      fill={theme.palette.text.primary}\r\n      textAnchor=\"middle\"\r\n    >\r\n      {value}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst CustomXAxis = ({ x, y, payload }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <text x={x} y={y + 10} fill={theme.palette.text.primary} textAnchor=\"middle\">\r\n      {payload.value}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport default function UnitDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" tick={<CustomXAxis />} />\r\n        <YAxis />\r\n        <Legend wrapperStyle={{ bottom: 0, left: 50 }} />\r\n        <Bar dataKey=\"Units\" fill={colors[0]} minPointSize={3}>\r\n          <LabelList dataKey=\"Units\" position=\"top\" content={<CustomLabel />} />\r\n        </Bar>\r\n        <Bar dataKey=\"Points\" fill={colors[1]} minPointSize={3}>\r\n          <LabelList dataKey=\"Points\" position=\"top\" content={<CustomLabel />} />\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Cell, Tooltip, Legend, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport UnitDistributionChart from './UnitDistributionChart';\r\nimport PointDistributionChart from './PointDistributionChart';\r\nimport data from 'store/data';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { toggleUIOption } from 'store/uiSlice';\r\nimport { getTotalPoints } from 'store/rosterSlice';\r\n\r\nconst unitData = data.unitData;\r\nconst fantasticalRulesData = data.fantasticalRulesData;\r\n\r\nexport default function Statistics() {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const statisticsExpanded = useSelector(\r\n    (state: RootState) => state.ui.statisticsExpanded\r\n  );\r\n  const units = useSelector((state: RootState) => state.roster.units);\r\n  const totalPoints = getTotalPoints(units);\r\n  const theme = useTheme();\r\n  const chipSize = useMediaQuery(theme.breakpoints.down('sm')) ? 'small' : 'medium';\r\n\r\n  const optionPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + (unitData[unit.name].options[option].points || 0),\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = Object.values(units).reduce(\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = Object.values(units).filter((u) => u.type === 'mounted');\r\n  const foot = Object.values(units).filter((u) => u.type === 'foot');\r\n  const ranged = Object.values(units).filter((u) => u.stats.shoot > 0);\r\n  const unitsCost = Object.values(units).reduce(\r\n    (acc, u) => acc + unitData[u.name].points,\r\n    0\r\n  );\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: Object.values(mounted).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: Object.values(foot).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: Object.values(ranged).reduce((acc, u) => acc + u.points, 0),\r\n    },\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints },\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => dispatch(toggleUIOption('statisticsExpanded'))}\r\n      style={{ maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            size={chipSize}\r\n            style={{ marginRight: 10, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState, AppDispatch } from 'store/store';\r\nimport { setAutoDarkMode } from 'store/appStateSlice';\r\n\r\nconst useUserTheme = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const hasDarkMode = useSelector((state: RootState) => state.ui.darkMode);\r\n  const darkMode = hasDarkMode === undefined ? prefersDarkMode : hasDarkMode;\r\n  dispatch(setAutoDarkMode(darkMode));\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: darkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [darkMode]\r\n  );\r\n  return theme;\r\n};\r\n\r\nexport default useUserTheme;\r\n","import React, { useEffect } from 'react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Container, CssBaseline } from '@material-ui/core';\r\nimport ShowFeedback from './ShowFeedback';\r\nimport AppBar from './AppBar';\r\nimport ListName from './ListName';\r\nimport Roster from './Roster';\r\nimport Validation from './Validation';\r\nimport RulesSummary from './RulesSummary';\r\nimport SpellTable from './SpellTable';\r\nimport Statistics from './Statistics/Statistics';\r\nimport store from 'store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUI } from 'store/uiSlice';\r\nimport useUserTheme from 'hooks/useUserTheme';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateUI({ ...store.get('uiOptions') }));\r\n  }, [dispatch]);\r\n\r\n  const theme = useUserTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container>\r\n        <AppBar />\r\n        <ListName />\r\n        <Roster />\r\n        <Validation />\r\n        <RulesSummary />\r\n        <SpellTable />\r\n        <Statistics />\r\n        <ShowFeedback />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport uiReducer from './uiSlice';\r\nimport rosterReducer from './rosterSlice';\r\nimport appStateReducer from './appStateSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  roster: rosterReducer,\r\n  appState: appStateReducer,\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}