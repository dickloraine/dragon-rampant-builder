{"version":3,"sources":["components/SimpleDialog.js","components/LoadList.js","components/SaveList.js","components/DeleteList.js","components/AppBar/SideMenu.js","components/Toast.js","components/AppBar/AppBar.js","components/Units/UnitSelector.js","components/Units/Options.js","components/Units/FantasticalRules.js","components/Units/StatBlock.js","components/Units/SpecialRules.js","components/Units/Unit.js","components/Units/Units.js","components/RulesSummary.js","components/SpellTable.js","helpers/utils.js","components/Statistics/UnitDistributionChart.js","components/Statistics/PointDistributionChart.js","components/Statistics/Statistics.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SimpleDialog","props","onClose","selectedValue","open","options","title","Dialog","DialogTitle","List","map","value","ListItem","button","onClick","handleListItemClick","key","LoadList","setRoster","setForceInputUpdate","showText","React","useState","setOpen","handleClickOpen","loadList","name","store","get","Tooltip","IconButton","color","Typography","savedLists","list","push","getSavedLists","SaveList","roster","showError","showSuccess","saveRoster","set","saveList","DeleteList","removeList","SideMenu","toggleDrawer","event","type","handleClose","Drawer","Alert","elevation","variant","Error","message","reason","Snackbar","autoHideDuration","severity","Success","useStyles","makeStyles","theme","root","marginBottom","flexing","display","flexGrow","alignItems","flexingend","justifyContent","AppBar","ui","setUIOption","updateUI","armyCost","reload","openSuccess","setOpenSuccess","openError","setOpenError","successMessage","setSuccessMessage","errorMessage","setErrorMessage","classes","changeViewMode","clicked","newState","notClicked","newStates","ToggleUIButton","option","Icon","fontSize","className","position","Toolbar","Hidden","smDown","mdUp","VisibilityIcon","EditIcon","Fab","size","val","UnitSelector","points","Chip","label","Options","unit","optionsData","onChange","Object","keys","length","handleChange","e","newUnit","target","checked","filter","FormControl","component","style","marginTop","FormLabel","FormGroup","FormControlLabel","control","Checkbox","includes","FantasticalRules","unitData","fantasticalRulesData","fantasticalRules","toCheck","slice","excluded","handleOpen","v","width","height","Select","onOpen","IconComponent","Box","multiple","input","Input","renderValue","MenuItem","indexOf","StatBlock","stats","shooting","shoot","shootingValue","shootValue","shootRange","TableContainer","Table","xsDown","TableBody","TableRow","TableCell","attack","attackValue","move","defenceValue","courage","movement","armour","strengthPoints","smUp","SpecialRules","rules","Container","r","Unit","id","updateUnit","data","setUnit","removeUnit","setStats","entries","add","rule","remove","fant","Card","minWidth","CardHeader","unitName","unitNames","action","Button","CardContent","editMode","viewMode","Units","updateRoster","newAttributes","units","unitOrder","flexDirection","flexWrap","marginLeft","nextID","RulesSummary","specialRules","rulesData","rulesSummaryExpanded","ExpansionPanel","expanded","maxWidth","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ListItemText","primary","secondary","SpellTable","spellsExpanded","spellData","spellcasterInRoster","TableHead","align","values","spell","scope","difficulty","duration","effect","objFilter","obj","fun","filtered","k","objReduce","acc","reduce","UnitDistributionChart","colors","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","minPointSize","PointDistributionChart","renderCustomizedLabel","labelLine","outerRadius","entry","index","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","percent","radius","x","cos","y","sin","percentValue","toFixed","textAnchor","dominantBaseline","Statistics","statisticsExpanded","optionPoints","accumulator","fantasticalPoints","COLORS","totalPoints","unitCount","mounted","u","foot","ranged","unitsCost","dataUnitTypes","Points","dataPoints","marginRight","toPrecision","App","initialRoster","0","setUI","useReducer","state","forceInputUpdate","useEffect","Set","sort","getSpecialRules","border","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dca737e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nexport default function SimpleDialog(props) {\r\n  const { onClose, selectedValue, open, options, title } = props;\r\n\r\n  const handleClose = () => onClose(selectedValue);\r\n  const handleListItemClick = value => onClose(value);\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <List>\r\n        {options.map(value => (\r\n          <ListItem button onClick={() => handleListItemClick(value)} key={value}>\r\n            {value}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SimpleDialog from './SimpleDialog';\r\nimport store from 'store';\r\n\r\nexport default function LoadList({\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  onClose = null,\r\n  showText = false\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value) loadList(value);\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const loadList = name => {\r\n    setRoster({ ...store.get('savedRosters')[name] });\r\n    setForceInputUpdate();\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Load\">\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n          <SaveOutlinedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleClickOpen}>Load</Typography>}\r\n      <SimpleDialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={getSavedLists()}\r\n        title=\"Choose List to load\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport store from 'store';\r\n\r\nexport default function SaveList({\r\n  roster,\r\n  showError,\r\n  showSuccess,\r\n  onClose = null,\r\n  showText = false\r\n}) {\r\n  const saveList = () => {\r\n    if (roster.name === 'New List') return false;\r\n    let savedLists = store.get('savedRosters') || [];\r\n    savedLists = {\r\n      ...savedLists,\r\n      [roster.name]: { ...roster }\r\n    };\r\n    store.set('savedRosters', savedLists);\r\n    return true;\r\n  };\r\n\r\n  const saveRoster = () => {\r\n    if (saveList()) showSuccess('Saved!');\r\n    else showError('You have to give the list a name!');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Save\">\r\n        <IconButton color=\"inherit\" onClick={saveRoster}>\r\n          <SaveIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={saveRoster}>Save</Typography>}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\nimport store from 'store';\r\nimport SimpleDialog from './SimpleDialog';\r\n\r\nexport default function DeleteList({ showSuccess, onClose = null, showText = false }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    removeList(value);\r\n    if (value) showSuccess('Deleted!');\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  const removeList = name => {\r\n    if (name === 'Delete all') store.set('savedRosters', []);\r\n    else {\r\n      let savedLists = store.get('savedRosters');\r\n      delete savedLists[name];\r\n      store.set('savedRosters', savedLists);\r\n    }\r\n  };\r\n\r\n  const getSavedLists = () => {\r\n    const savedLists = [];\r\n    for (const list in store.get('savedRosters')) savedLists.push(list);\r\n    savedLists.push('Delete all');\r\n    return savedLists;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Delete List\">\r\n        <IconButton color=\"inherit\" onClick={handleClickOpen}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {showText && <Typography onClick={handleClickOpen}>Delete</Typography>}\r\n      <SimpleDialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={getSavedLists()}\r\n        title=\"Choose List to delete\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { List, ListItem, Drawer } from '@material-ui/core';\r\nimport LoadList from '../LoadList';\r\nimport SaveList from '../SaveList';\r\nimport DeleteList from '../DeleteList';\r\n\r\nexport default function SideMenu({\r\n  roster,\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  showError,\r\n  showSuccess\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const toggleDrawer = open => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <MenuIcon onClick={toggleDrawer(true)} />\r\n      <Drawer open={open} onClose={toggleDrawer(false)}>\r\n        <List>\r\n          <ListItem button key={'Save'}>\r\n            <SaveList\r\n              roster={roster}\r\n              showError={showError}\r\n              showSuccess={showSuccess}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Load'}>\r\n            <LoadList\r\n              setRoster={setRoster}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n          <ListItem button key={'Delete'}>\r\n            <DeleteList\r\n              showSuccess={showSuccess}\r\n              onClose={handleClose}\r\n              showText={true}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Error({ open, setOpen, message }) {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity=\"error\">\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n\r\nfunction Success({ open, setOpen, message }) {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity=\"success\">\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n\r\nexport { Error, Success };\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar as AppBarMaterial } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { IconButton, Fab, Tooltip, Hidden } from '@material-ui/core';\r\nimport LoadList from '../LoadList';\r\nimport SaveList from '../SaveList';\r\nimport SideMenu from './SideMenu';\r\nimport { Error, Success } from '../Toast';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginBottom: 25\r\n  },\r\n\r\n  flexing: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    alignItems: 'center'\r\n  },\r\n\r\n  flexingend: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nexport default function AppBar({\r\n  roster,\r\n  ui,\r\n  setUIOption,\r\n  updateUI,\r\n  armyCost,\r\n  setRoster,\r\n  setForceInputUpdate,\r\n  reload\r\n}) {\r\n  const [openSuccess, setOpenSuccess] = React.useState(false);\r\n  const [openError, setOpenError] = React.useState(false);\r\n  const [successMessage, setSuccessMessage] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const classes = useStyles();\r\n\r\n  const showError = message => {\r\n    setErrorMessage(message);\r\n    setOpenError(true);\r\n  };\r\n\r\n  const showSuccess = message => {\r\n    setSuccessMessage(message);\r\n    setOpenSuccess(true);\r\n  };\r\n\r\n  const changeViewMode = (clicked, newState) => {\r\n    const notClicked = clicked === 'viewMode' ? 'editMode' : 'viewMode';\r\n    let newStates = { [clicked]: newState };\r\n    if (newState) newStates = { ...newStates, [notClicked]: false };\r\n    updateUI(newStates);\r\n  };\r\n\r\n  const ToggleUIButton = ({ option, Icon, title, onClick = setUIOption }) => {\r\n    return (\r\n      <Tooltip title={title}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => {\r\n            onClick(option, !ui[option]);\r\n          }}\r\n        >\r\n          <Icon fontSize=\"small\" color={ui[option] ? 'inherit' : 'disabled'} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBarMaterial position=\"fixed\">\r\n        <Toolbar>\r\n          <div className={classes.flexing}>\r\n            <SideMenu\r\n              roster={roster}\r\n              setRoster={setRoster}\r\n              setForceInputUpdate={setForceInputUpdate}\r\n              showError={showError}\r\n              showSuccess={showSuccess}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h5\">\r\n                &nbsp;&nbsp;Dragon Rampant Army Builder&nbsp;&nbsp;\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h5\">&nbsp;&nbsp;DRAB&nbsp;&nbsp;</Typography>\r\n            </Hidden>\r\n            <IconButton color=\"inherit\" onClick={reload}>\r\n              <ReplayIcon />\r\n            </IconButton>\r\n            <SaveList roster={roster} showError={showError} showSuccess={showSuccess} />\r\n            <LoadList setRoster={setRoster} setForceInputUpdate={setForceInputUpdate} />\r\n          </div>\r\n          <div className={classes.flexingend}>\r\n            <ToggleUIButton\r\n              option=\"viewMode\"\r\n              Icon={VisibilityIcon}\r\n              title=\"View mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <ToggleUIButton\r\n              option=\"editMode\"\r\n              Icon={EditIcon}\r\n              title=\"Edit mode\"\r\n              onClick={changeViewMode}\r\n            />\r\n            <Hidden smDown>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;Total Points&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <Typography variant=\"h6\">\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Fab color=\"secondary\" size=\"small\">\r\n                  <Typography variant=\"h6\">{armyCost}</Typography>\r\n                </Fab>\r\n              </Typography>\r\n            </Hidden>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBarMaterial>\r\n      <Toolbar />\r\n      <Success\r\n        message={successMessage}\r\n        open={openSuccess}\r\n        setOpen={val => setOpenSuccess(val)}\r\n      />\r\n      <Error\r\n        message={errorMessage}\r\n        open={openError}\r\n        setOpen={val => setOpenError(val)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Typography, Chip } from '@material-ui/core';\r\nimport SimpleDialog from '../SimpleDialog';\r\n\r\nexport default function UnitSelector({ name, options, points, onClose }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value !== name) onClose(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" onClick={handleClickOpen}>\r\n        <Chip label={points} color=\"primary\" />\r\n        &nbsp;&nbsp;\r\n        {name}\r\n        <ArrowDropDownIcon />\r\n      </Typography>\r\n      <SimpleDialog\r\n        selectedValue={name}\r\n        open={open}\r\n        onClose={handleClose}\r\n        options={options}\r\n        title=\"Choose unit type\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Options({ unit, optionsData, onChange }) {\r\n  if (!optionsData || !Object.keys(optionsData).length) return <div></div>;\r\n\r\n  const handleChange = option => e => {\r\n    let newUnit = { ...unit };\r\n\r\n    if (e.target.checked) {\r\n      newUnit.options = [...newUnit.options, option];\r\n    } else {\r\n      newUnit.options = newUnit.options.filter(val => val !== option);\r\n    }\r\n\r\n    onChange(newUnit);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" style={{ marginTop: 10 }}>\r\n      <FormLabel component=\"legend\">Options</FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(optionsData).map(option => (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleChange(option)}\r\n                checked={unit.options.includes(option)}\r\n              />\r\n            }\r\n            label={\r\n              <Typography>\r\n                {option}{' '}\r\n                <Typography color=\"secondary\" component=\"span\">\r\n                  @{optionsData[option].points}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n            key={option}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Input from '@material-ui/core/Input';\r\nimport { Typography, Box, Select, MenuItem } from '@material-ui/core';\r\n\r\nfunction FantasticalRules({ unitData, onChange, fantasticalRulesData, unit }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  let fantasticalRules = unitData.fantasticalRules;\r\n  if (!fantasticalRules || !fantasticalRules.length) return <div></div>;\r\n  if (fantasticalRules[0] === 'any')\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n  if (fantasticalRules[0] === 'exclude') {\r\n    const toCheck = fantasticalRules.slice(1);\r\n    fantasticalRules = Object.keys(fantasticalRulesData);\r\n    for (const excluded of toCheck) {\r\n      fantasticalRules = fantasticalRules.filter(val => val !== excluded);\r\n    }\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <FormLabel onClick={handleOpen} component=\"legend\">\r\n        Fantastical Rules <ArrowDropDownIcon />\r\n      </FormLabel>\r\n      {unit.fantasticalRules &&\r\n        unit.fantasticalRules.length > 0 &&\r\n        unit.fantasticalRules.map(name => (\r\n          <div key={name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={true}\r\n                  onClick={() =>\r\n                    onChange({\r\n                      ...unit,\r\n                      fantasticalRules: [\r\n                        ...unit.fantasticalRules.filter(v => v !== name)\r\n                      ]\r\n                    })\r\n                  }\r\n                />\r\n              }\r\n              label={\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}}\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              key={name}\r\n            />\r\n          </div>\r\n        ))}\r\n      <FormControl style={{ marginTop: 10, width: 0, height: 0 }}>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          IconComponent={() => <Box />}\r\n          multiple\r\n          value={unit.fantasticalRules}\r\n          onChange={e => onChange({ ...unit, fantasticalRules: [...e.target.value] })}\r\n          input={<Input />}\r\n          renderValue={() => ' '}\r\n        >\r\n          {fantasticalRules.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              {unit.fantasticalRules.indexOf(name) < 0 && (\r\n                <Typography>\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n              {unit.fantasticalRules.indexOf(name) > -1 && (\r\n                <Typography color=\"primary\">\r\n                  {name}{' '}\r\n                  <Typography color=\"secondary\" component=\"span\">\r\n                    @{fantasticalRulesData[name].points}\r\n                  </Typography>\r\n                </Typography>\r\n              )}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FantasticalRules;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Hidden } from '@material-ui/core';\r\n\r\nexport default function StatBlock({ stats }) {\r\n  let shooting = stats.shoot ? `${stats.shoot}+` : '-';\r\n  let shootingValue = stats.shoot ? `${stats.shootValue}+/${stats.shootRange}\"` : '-';\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\">\r\n        <Hidden xsDown>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Attack</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>Attack Value</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Move</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>Defence Value</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Shoot</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>Shoot Value</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Courage</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>Movement</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Armour</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>Strength Points</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>A</TableCell>\r\n              <TableCell>{stats.attack}+</TableCell>\r\n              <TableCell>AV</TableCell>\r\n              <TableCell>{stats.attackValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>M</TableCell>\r\n              <TableCell>{stats.move}+</TableCell>\r\n              <TableCell>DV</TableCell>\r\n              <TableCell>{stats.defenceValue}+</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>S</TableCell>\r\n              <TableCell>{shooting}</TableCell>\r\n              <TableCell>SV</TableCell>\r\n              <TableCell>{shootingValue}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>C</TableCell>\r\n              <TableCell>{stats.courage}+</TableCell>\r\n              <TableCell>MR</TableCell>\r\n              <TableCell>{stats.movement}\"</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Ar</TableCell>\r\n              <TableCell>{stats.armour}</TableCell>\r\n              <TableCell>SP</TableCell>\r\n              <TableCell>{stats.strengthPoints}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Hidden>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography, List, Container, ListItem } from '@material-ui/core';\r\n\r\nexport default function SpecialRules({ rules }) {\r\n  if (rules && rules.length) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" style={{ marginTop: 10 }}>\r\n          Special Rules\r\n        </Typography>\r\n        <List>\r\n          {rules.map(r => (\r\n            <ListItem key={r}>{r}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Box, Button, CardHeader } from '@material-ui/core';\r\nimport UnitSelector from './UnitSelector';\r\nimport Options from './Options';\r\nimport FantasticalRules from './FantasticalRules';\r\nimport StatBlock from './StatBlock';\r\nimport SpecialRules from './SpecialRules';\r\n\r\nfunction Unit({ id, unit, updateUnit, data, setUnit, removeUnit, ui }) {\r\n  const changeUnit = unitName => setUnit(id, unitName);\r\n\r\n  const handleChange = unit => {\r\n    const unitData = data.unitData[unit.name];\r\n    unit = {\r\n      ...unitData,\r\n      options: [...unit.options],\r\n      fantasticalRules: [...unit.fantasticalRules]\r\n    };\r\n\r\n    let points = unitData.points;\r\n    for (let option of unit.options) {\r\n      option = unitData.options[option];\r\n      points += option.points;\r\n\r\n      if (option.setStats) {\r\n        for (const [key, val] of Object.entries(option.setStats)) {\r\n          unit = { ...unit, stats: { ...unit.stats, [key]: val } };\r\n        }\r\n      }\r\n\r\n      if (option.add) {\r\n        for (const rule of option.add) {\r\n          unit.rules = [...unit.rules, rule];\r\n        }\r\n      }\r\n\r\n      if (option.remove) {\r\n        for (const rule of option.remove) {\r\n          unit.rules = unit.rules.filter(val => val !== rule);\r\n        }\r\n      }\r\n    }\r\n    for (let fant of unit.fantasticalRules) {\r\n      fant = data.fantasticalRulesData[fant];\r\n      points += fant.points;\r\n      unit.rules = [...unit.rules, fant.name];\r\n    }\r\n\r\n    unit = { ...unit, points: points };\r\n    updateUnit(id, { ...unit });\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" style={{ marginBottom: 25, minWidth: 400 }}>\r\n      <CardHeader\r\n        title={\r\n          <UnitSelector\r\n            name={unit.name}\r\n            onClose={changeUnit}\r\n            options={data.unitNames}\r\n            points={unit.points}\r\n          />\r\n        }\r\n        action={\r\n          <Button onClick={() => removeUnit(id)}>\r\n            <CloseIcon />\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        {!ui.editMode && (\r\n          <>\r\n            <StatBlock stats={unit.stats} />\r\n            <SpecialRules rules={unit.rules} />\r\n          </>\r\n        )}\r\n        {!ui.viewMode && (\r\n          <>\r\n            <Options\r\n              onChange={handleChange}\r\n              optionsData={data.unitData[unit.name].options}\r\n              unit={unit}\r\n            />\r\n            <Box>\r\n              <FantasticalRules\r\n                onChange={handleChange}\r\n                unitData={data.unitData[unit.name]}\r\n                fantasticalRulesData={data.fantasticalRulesData}\r\n                unit={unit}\r\n              />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Unit;\r\n","import React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Fab, Box, Typography } from '@material-ui/core';\r\nimport Unit from './Unit';\r\n\r\nconst Units = ({ roster, updateRoster, ui, data }) => {\r\n  const updateUnit = (id, newAttributes) => {\r\n    updateRoster({\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...roster.units[id], ...newAttributes }\r\n      }\r\n    });\r\n  };\r\n\r\n  const addUnit = () => {\r\n    const id = roster.nextID;\r\n\r\n    updateRoster({\r\n      nextID: id + 1,\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...data.unitData.Unit, options: [], fantasticalRules: [] }\r\n      },\r\n      unitOrder: [...roster.unitOrder, id]\r\n    });\r\n  };\r\n\r\n  const setUnit = (id, name) => {\r\n    updateRoster({\r\n      units: {\r\n        ...roster.units,\r\n        [id]: { ...data.unitData[name], options: [], fantasticalRules: [] }\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeUnit = id => {\r\n    const units = { ...roster.units };\r\n    delete units[id];\r\n    updateRoster({\r\n      units: { ...units },\r\n      unitOrder: roster.unitOrder.filter(val => val !== id)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n        {roster.unitOrder.map(id => (\r\n          <Unit\r\n            id={id}\r\n            key={id}\r\n            unit={roster.units[id]}\r\n            updateUnit={updateUnit}\r\n            removeUnit={removeUnit}\r\n            setUnit={setUnit}\r\n            data={data}\r\n            ui={ui}\r\n          />\r\n        ))}\r\n      </Box>\r\n      {!Object.keys(roster.units).length && !ui.viewMode && (\r\n        <Typography variant=\"h6\" style={{ marginBottom: 25 }}>\r\n          Click the button to add your first unit!\r\n        </Typography>\r\n      )}\r\n      {!ui.viewMode && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 25, marginBottom: 25 }}\r\n          onClick={addUnit}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Units;\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\n\r\nexport default function RulesSummary({\r\n  specialRules,\r\n  setUIOption,\r\n  rulesData,\r\n  rulesSummaryExpanded\r\n}) {\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={rulesSummaryExpanded}\r\n      onChange={() => setUIOption('rulesSummaryExpanded', !rulesSummaryExpanded)}\r\n      style={{ minWidth: 400, maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Rules Summary</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n        <List>\r\n          {specialRules.map(rule => (\r\n            <ListItem key={rule}>\r\n              <ListItemText primary={rule} secondary={rulesData[rule] || ''} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Hidden\r\n} from '@material-ui/core';\r\n\r\nexport default function SpellTable({\r\n  setUIOption,\r\n  specialRules,\r\n  spellsExpanded,\r\n  spellData\r\n}) {\r\n  const spellcasterInRoster = () => {\r\n    for (const rule of specialRules) {\r\n      if (rule === 'Spellcaster' || rule === 'Wizardlings') return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spellcasterInRoster() && (\r\n        <ExpansionPanel\r\n          expanded={spellsExpanded}\r\n          onChange={() => setUIOption('spellsExpanded', !spellsExpanded)}\r\n          style={{ minWidth: 400, maxWidth: 1210 }}\r\n        >\r\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant=\"h5\">Spell Table</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails style={{ maxWidth: 800 }}>\r\n            <TableContainer>\r\n              <Table size=\"small\" style={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                  <TableRow key=\"headspelltable\">\r\n                    <TableCell style={{ minWidth: 100 }}>Spell name</TableCell>\r\n                    <Hidden smDown>\r\n                      <TableCell align=\"center\">Difficulty</TableCell>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                      <TableCell align=\"center\">Dif</TableCell>\r\n                    </Hidden>\r\n                    <TableCell>Target</TableCell>\r\n                    <TableCell>Duration</TableCell>\r\n                    <TableCell>Effect</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.values(spellData).map(spell => (\r\n                    <TableRow key={spell.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {spell.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{spell.difficulty}+</TableCell>\r\n                      <TableCell>{spell.target}</TableCell>\r\n                      <TableCell>{spell.duration}</TableCell>\r\n                      <TableCell>{spell.effect}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/**\r\n * Filter an object\r\n * @param {Object} obj The object that should be filtered\r\n * @param {function} fun A function accepting two arguments, the value and the key. must returns a boolean. (val, key) => bool\r\n * @return {Object} Returns a new Object, containing the filtered entries\r\n */\r\nconst objFilter = (obj, fun) => {\r\n  let filtered = {};\r\n  for (const k in obj) {\r\n    if (fun(obj[k], k)) filtered = { ...filtered, [k]: obj[k] };\r\n  }\r\n  return filtered;\r\n};\r\n\r\n/**\r\n * Map over an object\r\n * @param {Object} obj The object that should be filtered\r\n * @param {function} fun A function accepting two arguments, the value and the key. (val, key) => any\r\n * @return {Object} Returns a new Object, containing the maped over entries\r\n */\r\nconst objMap = (obj, fn) =>\r\n  Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, fn(v, k)]));\r\n\r\n/**\r\n * Reduce an object\r\n * @param {Object} obj The object that should be reduced\r\n * @param {function} fun A function accepting three arguments, the accumulator, value and the key. must returns a new accumulator. (acc, val, key) => acc\r\n * @return {Object} Returns the accumulator\r\n */\r\nconst objReduce = (obj, fun, acc) =>\r\n  Object.entries(obj).reduce((acc, [k, v]) => fun(acc, v, k), acc);\r\n\r\nexport { objFilter, objMap, objReduce };\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Legend,\r\n  LabelList,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nexport default function UnitDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 20,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Legend />\r\n        <Bar dataKey=\"Units\" fill={colors[0]} minPointSize={3}>\r\n          <LabelList dataKey=\"Units\" position=\"top\" />\r\n        </Bar>\r\n        <Bar dataKey=\"Points\" fill={colors[1]} minPointSize={3}>\r\n          <LabelList dataKey=\"Points\" position=\"top\" />\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Cell, Tooltip, Legend, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function PointDistributionChart({ data, height, colors }) {\r\n  return (\r\n    <ResponsiveContainer height={height}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"value\"\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={entry} fill={colors[index]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const percentValue = (percent * 100).toFixed(0);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"black\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {percentValue > 0 ? `${percentValue}%` : ''}\r\n    </text>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Typography,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\nimport { objFilter, objReduce } from '../../helpers/utils';\r\nimport UnitDistributionChart from './UnitDistributionChart';\r\nimport PointDistributionChart from './PointDistributionChart';\r\n\r\nexport default function Statistics({\r\n  armyCost,\r\n  units,\r\n  unitData,\r\n  fantasticalRulesData,\r\n  statisticsExpanded,\r\n  setUIOption\r\n}) {\r\n  const optionPoints = objReduce(\r\n    units,\r\n    (accumulator, unit) =>\r\n      unit.options.reduce(\r\n        (acc, option) => acc + unitData[unit.name].options[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const fantasticalPoints = objReduce(\r\n    units,\r\n    (accumulator, unit) =>\r\n      unit.fantasticalRules.reduce(\r\n        (acc, option) => acc + fantasticalRulesData[option].points,\r\n        accumulator\r\n      ),\r\n    0\r\n  );\r\n\r\n  const COLORS = ['#8884d8', '#82ca9d', '#FF8042'];\r\n  const totalPoints = armyCost;\r\n  const unitCount = Object.keys(units).length;\r\n  const mounted = objFilter(units, u => u.type === 'mounted');\r\n  const foot = objFilter(units, u => u.type === 'foot');\r\n  const ranged = objFilter(units, u => u.stats.shoot > 0);\r\n  const unitsCost = objReduce(units, (acc, u) => acc + unitData[u.name].points, 0);\r\n\r\n  const dataUnitTypes = [\r\n    {\r\n      name: 'Mounted',\r\n      Units: Object.keys(mounted).length,\r\n      Points: objReduce(mounted, (acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Foot',\r\n      Units: Object.keys(foot).length,\r\n      Points: objReduce(foot, (acc, u) => acc + u.points, 0)\r\n    },\r\n    {\r\n      name: 'Ranged',\r\n      Units: Object.keys(ranged).length,\r\n      Points: objReduce(ranged, (acc, u) => acc + u.points, 0)\r\n    }\r\n  ];\r\n\r\n  const dataPoints = [\r\n    { name: 'Units', value: unitsCost },\r\n    { name: 'Options', value: optionPoints < 0 ? 0 : optionPoints },\r\n    { name: 'Fantastical Rules', value: fantasticalPoints }\r\n  ];\r\n\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={statisticsExpanded}\r\n      onChange={() => setUIOption('statisticsExpanded', !statisticsExpanded)}\r\n      style={{ minWidth: 400, maxWidth: 1210 }}\r\n    >\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h5\">Statistics</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <div>\r\n          <Chip\r\n            label={totalPoints + ' Points'}\r\n            color=\"primary\"\r\n            style={{ marginRight: 25, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={unitCount + ' Units'}\r\n            color=\"primary\"\r\n            style={{ marginRight: 25, marginBottom: 25 }}\r\n          />\r\n          <Chip\r\n            label={\r\n              (totalPoints / (unitCount ? unitCount : 1)).toPrecision(2) +\r\n              ' Points per unit'\r\n            }\r\n            color=\"primary\"\r\n            style={{ marginRight: 25, marginBottom: 25 }}\r\n          />\r\n          {unitsCost > 0 && (\r\n            <>\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Unit Distribution\r\n              </Typography>\r\n              <UnitDistributionChart\r\n                data={dataUnitTypes}\r\n                height={300}\r\n                colors={COLORS}\r\n              />\r\n              <Typography variant=\"h6\" style={{ marginTop: 25 }}>\r\n                Point Distribution\r\n              </Typography>\r\n              <PointDistributionChart data={dataPoints} height={300} colors={COLORS} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport store from 'store';\r\nimport { Box, Typography, Container, FormControl } from '@material-ui/core';\r\nimport unitData from 'assets/dragonRampantData/units.json';\r\nimport fantasticalRulesData from 'assets/dragonRampantData/fantasticalRules.json';\r\nimport rulesData from 'assets/dragonRampantData/rules.json';\r\nimport spellData from 'assets/dragonRampantData/spells.json';\r\nimport AppBar from '../AppBar';\r\nimport Units from '../Units';\r\nimport RulesSummary from '../RulesSummary';\r\nimport SpellTable from '../SpellTable';\r\nimport Statistics from '../Statistics';\r\nimport { objReduce } from '../../helpers/utils';\r\n\r\nconst App = () => {\r\n  const [data] = useState({\r\n    unitData: unitData,\r\n    unitNames: Object.keys(unitData).slice(1),\r\n    fantasticalRulesData: fantasticalRulesData,\r\n    rulesData: rulesData,\r\n    spellData: spellData\r\n  });\r\n\r\n  const initialRoster = {\r\n    name: 'New List',\r\n    nextID: 1,\r\n    units: {\r\n      0: { ...data.unitData.Unit, options: [], fantasticalRules: [] }\r\n    },\r\n    unitOrder: [0]\r\n  };\r\n\r\n  const [roster, setRoster] = useState({ ...initialRoster });\r\n\r\n  const [ui, setUI] = useState({\r\n    viewMode: false,\r\n    editMode: false,\r\n    rulesSummaryExpanded: true,\r\n    spellsExpanded: false,\r\n    statisticsExpanded: true\r\n  });\r\n\r\n  const [forceInputUpdate, setForceInputUpdate] = useReducer(\r\n    state => (state ? 0 : 1),\r\n    0\r\n  );\r\n\r\n  useEffect(ui => {\r\n    setUI({ ...ui, ...store.get('uiOptions') });\r\n  }, []);\r\n\r\n  const updateUI = newAttributes => {\r\n    setUI({ ...ui, ...newAttributes });\r\n    store.set('uiOptions', { ...ui, ...newAttributes });\r\n  };\r\n\r\n  const setUIOption = (option, value) => {\r\n    setUI({ ...ui, [option]: value });\r\n    store.set('uiOptions', { ...ui, [option]: value });\r\n  };\r\n\r\n  const updateRoster = newAttributes => setRoster({ ...roster, ...newAttributes });\r\n\r\n  const reload = () => {\r\n    setRoster({ ...initialRoster });\r\n    setForceInputUpdate();\r\n  };\r\n\r\n  const getSpecialRules = () => {\r\n    let specialRules = new Set();\r\n    for (const unit of Object.values(roster.units)) {\r\n      for (const rule of unit.rules) {\r\n        data.rulesData[data.rulesData[rule]]\r\n          ? specialRules.add(data.rulesData[rule])\r\n          : specialRules.add(rule);\r\n      }\r\n    }\r\n    return [...specialRules].sort();\r\n  };\r\n  const specialRules = getSpecialRules();\r\n\r\n  const totalPoints = objReduce(\r\n    Object.values(roster.units),\r\n    (acc, unit) => acc + unit.points,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar\r\n        setUIOption={setUIOption}\r\n        updateUI={updateUI}\r\n        ui={ui}\r\n        roster={roster}\r\n        setRoster={setRoster}\r\n        armyCost={totalPoints}\r\n        reload={reload}\r\n        setForceInputUpdate={setForceInputUpdate}\r\n      />\r\n      <Box>\r\n        <FormControl>\r\n          <Typography\r\n            style={{ border: 0, marginBottom: 25 }}\r\n            variant=\"h4\"\r\n            key={forceInputUpdate}\r\n            component=\"Input\"\r\n            value={roster.name}\r\n            onChange={e => updateRoster({ name: e.target.value })}\r\n          />\r\n        </FormControl>\r\n        <Units roster={roster} updateRoster={updateRoster} ui={ui} data={data} />\r\n        <RulesSummary\r\n          specialRules={specialRules}\r\n          rulesData={data.rulesData}\r\n          rulesSummaryExpanded={ui.rulesSummaryExpanded}\r\n          setUIOption={setUIOption}\r\n        />\r\n        <SpellTable\r\n          specialRules={specialRules}\r\n          spellsExpanded={ui.spellsExpanded}\r\n          setUIOption={setUIOption}\r\n          spellData={data.spellData}\r\n        />\r\n        <Statistics\r\n          armyCost={totalPoints}\r\n          units={roster.units}\r\n          unitData={data.unitData}\r\n          fantasticalRulesData={data.fantasticalRulesData}\r\n          statisticsExpanded={ui.statisticsExpanded}\r\n          setUIOption={setUIOption}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}